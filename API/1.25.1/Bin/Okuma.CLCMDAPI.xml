<?xml version="1.0"?>
<doc>
<assembly>
<name>
Okuma.CLCMDAPI
</name>
</assembly>
<members>
<member name="T:Okuma.CLCMDAPI.CommandAPI.CATC">
 -----------------------------------------------------------------------------
 Project	 : Okuma.CLCMDAPI
 Class	 : CLCMDAPI.CommandAPI.CATC
 
 -----------------------------------------------------------------------------
 <summary>
 Class provides information about Auto Tool Changer.
 </summary>
 <remarks>
 </remarks>
 <history>
 	[Lhuynh]	12/2/2008	Created
 </history>
 -----------------------------------------------------------------------------
</member>
<member name="M:Okuma.CLCMDAPI.CommandAPI.CATC.#ctor">
 -----------------------------------------------------------------------------
 <summary>
 Create an instance of this class
 </summary>
 <exception cref="T:System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
 <exception cref="T:System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system</exception>
 <history>
 	[Lhuynh]	2/6/2007	Created
 </history>
 -----------------------------------------------------------------------------
</member>
<member name="M:Okuma.CLCMDAPI.CommandAPI.CATC.#ctor(System.String)">
 -----------------------------------------------------------------------------
 <summary>
 Create an instance of this class.
 In addition to library name, the provided logging name will be used for logging all function calls 
 </summary>
 <param name="strLoggingName">Logging Name.  Globally, The logging name will be combined with library name as the logging name for all logging message.</param>
 <exception cref="T:System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
 <exception cref="T:System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system</exception>
 <history>
 	[Lhuynh]	2/6/2007	Created
 </history>
 -----------------------------------------------------------------------------
</member>
<member name="M:Okuma.CLCMDAPI.CommandAPI.CATC.UnRegisterToolPot(System.Int32)">
 -----------------------------------------------------------------------------
 <summary>
 Un-register a tool at the specified pot number
 </summary>
 <example> This example shows how to call the UnRegisterToolPot mothod.
 <code escaped="true" language="vbnet">
 Dim objCATC As New CATC
 Dim intPotNo As Integer
 objCATC.UnRegisterToolPot(intPotNo)
 </code>
 </example>
 <param name="intPotNo">Pot number where the tool will be un-registered</param>
 <exception cref="T:System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
 <exception cref="T:System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system</exception>
 <Figure> ATC TOOL INFORMATION
 <para>
 <img src="../media/Lathe.ATC.SET2.jpg"/>
 </para>
 </Figure>
 <remarks>
 <para>
 Compatible Chart of this function for different OSP controls:
 <list type="table">
 <listheader>
 <term>OSP Control</term>
 <description>Compatible</description>
 </listheader>
 <item>
 <term>P100II</term>
 <description>No</description>
 </item>
 <item>
 <term>P200</term>
 <description>Yes</description>
 </item>
 <item>
 <term>P300L and newer controls</term>
 <description>Yes IF NC Spec Code 2 [27,2] LTIM = OFF</description>
 </item>
 <item>
 <term>P300S/TD Mode and newer controls</term>
 <description>Yes IF NC Spec Code 2 [3,6] TMIM = OFF</description>
 </item>
 <item>
 <term>P300S/TL Mode and newer controls</term>
 <description>Yes IF NC Spec Code 2 [3,6] TMIM = OFF</description>
 </item>
 </list>
 </para>
 </remarks>
 <history>
 	[Lhuynh]	12/2/2008	Created
 </history>
 -----------------------------------------------------------------------------
</member>
<member name="M:Okuma.CLCMDAPI.CommandAPI.CATC.RegisterToolPot(System.Int32,System.Int32,Okuma.CLCMDAPI.Enumerations.SettingToolKindEnum,Okuma.CLCMDAPI.Enumerations.SettingToolSizeEnum,Okuma.CLCMDAPI.Enumerations.ReturnMagazineEnum)">
 -----------------------------------------------------------------------------
 <summary>
 Register a tool at the specified pot number with other tool attributes.
 </summary>
 <example> This example shows how to call the RegisterToolPot mothod.
 <code escaped="true" language="vbnet">
 Dim objCATC As CATC = New CATC
 Dim intPotNo As Integer
 Dim intToolNo As Integer
 Dim enSettingToolKind As Integer 
 Dim enSettingToolKind As SettingToolKindEnum 
 Dim enReturnMagazine As ReturnMagazineEnum
 objCATC.RegisterTool(intPotNo, intToolNo, enSettingToolKind, enSettingToolSize, enReturnMagazine) 
 </code>
 </example>
 <exception cref="T:System.ApplicationException">testing</exception>
 <param name="intPotNo">Pot number where a tool will be registered to.</param>
 <param name="intToolNo">Tool number to be registered</param>
 <param name="enSettingToolKind">Tool Kind for the registered tool</param>
 <param name="enSettingToolSize">Tool Size for the registered tool</param>
 <param name="enReturnMagazine">Return magazine number for the registered tool and applicable for ATC having sub magazine only</param>
 <exception cref="T:System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
 <exception cref="T:System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system</exception>
 <remarks>
 When a large, super-large, right-large or left-large diameter tool is returned from the turret to the
 magazine, the tool is always returned to the pot where it was stored previously. The pot where
 any of a super-large, an R-large and an L-large diameter tool is stored is recognized as the pot
 for which the tool to be returned is determined (the pot is called a “reserved pot”) when a tool is
 removed from such a pot. Tools other than the previously stored tool are not returned to the pot
 recognized as the reserved pot.  The reserved pot is displayed with a R letter.
 <para>
 Compatible Chart of this function for different OSP controls:
 <list type="table">
 <listheader>
 <term>OSP Control</term>
 <description>Compatible</description>
 </listheader>
 <item>
 <term>P100II</term>
 <description>No</description>
 </item>
 <item>
 <term>P200</term>
 <description>Yes</description>
 </item>
 <item>
 <term>P300L and newer controls</term>
 <description>Yes IF NC Spec Code 2 [27,2] LTIM = OFF</description>
 </item>
 <item>
 <term>P300S/TD Mode and newer controls</term>
 <description>Yes IF NC Spec Code 2 [3,6] TMIM = OFF</description>
 </item>
 <item>
 <term>P300S/TL Mode and newer controls</term>
 <description>Yes IF NC Spec Code 2 [3,6] TMIM = OFF</description>
 </item>
 </list>
 </para>
 </remarks>
 <Figure> ATC TOOL INFORMATION
 <para>
 <img src="../media/Lathe.ATC.SET2.jpg"/>
 </para>
 </Figure>
 -----------------------------------------------------------------------------
</member>
<member name="M:Okuma.CLCMDAPI.CommandAPI.CATC.SetNextTool(System.Int32,Okuma.CLCMDAPI.Enumerations.SettingToolKindEnum,Okuma.CLCMDAPI.Enumerations.SettingToolSizeEnum,Okuma.CLCMDAPI.Enumerations.ReturnMagazineEnum)">
 <summary>
 Set a registered tool number in ATC table as Next Tool 
 </summary>
 <example> This example shows how to call the SetNextTool mothod.
 <code escaped="true" language="vbnet">
 Dim objcatc As CATC = New CATC
 Dim intToolNo As Integer
 Dim enSettingToolKind As SettingToolKindEnum 
 Dim enSettingToolSize As SettingToolSizeEnum 
 Dim enReturnMagazine As ReturnMagazineEnum
 objcatc.SetNextTool(intToolNo, enSettingToolKind, enSettingToolSize, enReturnMagazine) 
 </code>
 </example>
 <param name="intToolNo">Tool number to be registered</param>
 <param name="enSettingToolKind">Tool Kind for the registered tool</param>
 <param name="enSettingToolSize">Tool Size for the registered tool</param>
 <param name="enReturnMagazine">Return magazine number for the registered tool and applicable for ATC having sub magazine only</param>
 <exception cref="T:System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
 <exception cref="T:System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system</exception>
 <remarks>
 <para>
 Compatible Chart of this function for different OSP controls:
 <list type="table">
 <listheader>
 <term>OSP Control</term>
 <description>Compatible</description>
 </listheader>
 <item>
 <term>P100II</term>
 <description>No</description>
 </item>
 <item>
 <term>P200</term>
 <description>Yes</description>
 </item>
 <item>
 <term>P300L and newer controls</term>
 <description>Yes IF NC Spec Code 2 [27,2] LTIM = OFF</description>
 </item>
 <item>
 <term>P300S/TD Mode and newer controls</term>
 <description>Yes IF NC Spec Code 2 [3,6] TMIM = OFF</description>
 </item>
 <item>
 <term>P300S/TL Mode and newer controls</term>
 <description>Yes IF NC Spec Code 2 [3,6] TMIM = OFF</description>
 </item>
 </list>
 </para>
 </remarks>
 <Figure> 
 <para> ATC TOOL INFORMATION - NEXT TOOL</para>
 <img src="../media/Lathe.ATC.SET1.jpg"/>
 </Figure>
 <history>
 	[Lhuynh]	12/2/2008	Created
 </history>
 -----------------------------------------------------------------------------        
</member>
<member name="M:Okuma.CLCMDAPI.CommandAPI.CATC.SetToolInStation(System.Int32,Okuma.CLCMDAPI.Enumerations.SettingToolKindEnum,Okuma.CLCMDAPI.Enumerations.SettingToolSizeEnum,Okuma.CLCMDAPI.Enumerations.ReturnMagazineEnum,Okuma.CLCMDAPI.Enumerations.TurretStationEnum)">
 <summary>
 Set tool number in station
 </summary>
 <example> This example shows how to call the SetToolInStation mothod.
 <code escaped="true" language="vbnet">
 Dim objcatc As CATC = New CATC
 Dim intToolNo As Integer
 Dim enSettingToolKind As SettingToolKindEnum 
 Dim enSettingToolSize As SettingToolSizeEnum 
 Dim enReturnMagazine As ReturnMagazineEnum
 Dim enTurretStation As TurretStationEnum
 objcatc.SetToolInStation(intToolNo, enSettingToolKind, enSettingToolSize, enReturnMagazine, enTurretStation) 
 </code>
 </example>
 <param name="intToolNo">Tool number to be registered</param>
 <param name="enSettingToolKind">Tool Kind for the registered tool</param>
 <param name="enSettingToolSize">Tool Size for the registered tool</param>
 <param name="enReturnMagazine">Return magazine number for the registered tool and applicable for ATC having sub magazine only</param>
 <param name="enTurretStation">Station number where tool is set to</param>
 <exception cref="T:System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
 <exception cref="T:System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system</exception>
 <remarks>
 <para>
 Compatible Chart of this function for different OSP controls:
 <list type="table">
 <listheader>
 <term>OSP Control</term>
 <description>Compatible</description>
 </listheader>
 <item>
 <term>P100II</term>
 <description>No</description>
 </item>
 <item>
 <term>P200</term>
 <description>Yes</description>
 </item>
 <item>
 <term>P300L and newer controls</term>
 <description>Yes IF NC Spec Code 2 [27,2] LTIM = OFF</description>
 </item>
 <item>
 <term>P300S/TD Mode and newer controls</term>
 <description>Yes IF NC Spec Code 2 [3,6] TMIM = OFF</description>
 </item>
 <item>
 <term>P300S/TL Mode and newer controls</term>
 <description>Yes IF NC Spec Code 2 [3,6] TMIM = OFF</description>
 </item>
 </list>
 </para>
 </remarks>
 <Figure> 
 <para>ATC TOOL INFORMATION - STATION NO. 1</para>
 <img src="../media/Lathe.ATC.SET1.jpg"/>
 </Figure>
 <history>
 	[Lhuynh]	12/2/2008	Created
 </history>
 -----------------------------------------------------------------------------        
</member>
<member name="M:Okuma.CLCMDAPI.CommandAPI.CATC.AttachTool(System.Int32,System.Int32,Okuma.CLCMDAPI.Enumerations.ToolLocationEnum)">
 -----------------------------------------------------------------------------
 <summary>
 Attach a registered tool to ATC magazine/Turret given tool number, target, tool location while NC is not in running state.
 </summary>
 <example> This example shows how to call the AttachTool method.
 <code source="../ThincLathe/DATAPI_CTools.vb" region="CTools.RegisterTools Example" language="vbnet" />
 </example>
 <param name="intToolNo">Un-attached tool number</param>
 <param name="intTarget">
 Pot number for magazine; Station number for turret; System ignores target number for H1 turret tool location
 <para>***** For OSPSpecEnum.DualChainedMagazineVTRA spec. on OSP-P300 S or newer controls: *****</para>
 <para>Attaching a tool to the spindle requires to specify the return pot number.</para>
 <para>In this case, the return pot number will be specified in the Target parameter and must not be one of the reserved pots, 21-24.</para>
 </param>
 <param name="enToolLocation">Tool Location to be attached to</param>
 <exception cref="T:System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
 <exception cref="T:System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system</exception>
 <remarks>
 <para>
 Compatible Chart of this function for different OSP controls:
 <list type="table">
 <listheader>
 <term>OSP Control</term>
 <description>Compatible</description>
 </listheader>
 <item>
 <term>P100II</term>
 <description>No</description>
 </item>
 <item>
 <term>P200</term>
 <description>No</description>
 </item>
 <item>
 <term>P300L and newer controls</term>
 <description>Yes IF NC Spec Code 2 [27,2] LTIM = ON</description>
 </item>
 <item>
 <term>P300S/TD Mode and newer controls</term>
 <description>Yes IF NC Spec Code 2 [3,6] TMIM = ON</description>
 </item>
 <item>
 <term>P300S/TL Mode and newer controls</term>
 <description>Yes IF NC Spec Code 2 [3,6] TMIM = ON</description>
 </item>
 </list>
 </para>
 <para>For OSP-P300 control, this function is required to operate in an exclusive mode.</para>  
 <para>It means it must be able to enter Edit Tool Data mode exclusively from other applications running on Windows including NC.</para>  
 <para>At any point in time only one application can be in Edit Tool Data mode</para>  
 <para> If we can lock then we can set. If we cannot lock then an error message is returned due to NC is in editing mode:</para>  
 <para> Tool operation cannot be performed while other application is currently </para>  
 <para>in Edit Tool Data mode such as Attach/Detach/Edit Tool Data/Insert Tool/Register Tool Data/Delete Tool Data or current NC running condition.</para>  
 <para>***** It is very important to acknowledge that the API locking mechanism is applied to the entired machine including all applications using THINC-API, and NC-HMI</para>  
 <para>***** As a result, if the application is performing tool operation and terminated incorrectly while API is locking, it will permanently lock the entire tool operation </para>  
 <para>***** and can only be recovered the tool operation by restarting the machine</para>   
 </remarks>
 <Figure> 
 <para> For OSP-P300S: TOOL DATA SETTING - MAGAZINE INFO.</para>
 <img src="../media/Lathe.P300.TD.ToolDataSetting.ATC.jpg"/>
 <para> For OSP-P300S: TOOL DATA SETTING - TURRET INFO.</para>
 <img src="../media/Lathe.P300S.TurretInfo.jpg"/>
 <para> For OSP-P300L: TOOL DATA SETTING - TURRET INFO.</para>
 <img src="../media/Lathe.P300L.TurretInfo.jpg"/>
 </Figure>
 <history>
 	[lhuynh]	06/12/2013	Created
 </history>
 -----------------------------------------------------------------------------
</member>
<member name="M:Okuma.CLCMDAPI.CommandAPI.CATC.DeleteTool(System.Int32)">
 -----------------------------------------------------------------------------
 <summary>
 Delete a registered tool number which is currently not assigned to magazine/turret or in the Actual Tool.
 </summary>
 <example> This example shows how to call the DeleteTool method.
 <code source="../ThincLathe/DATAPI_CTools.vb" region="CTools.RegisterTools Example" language="vbnet" />
 </example>
 <param name="intToolNo">Tool Number</param>
 <exception cref="T:System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
 <exception cref="T:System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system</exception>
 <remarks>
 <para>
 Compatible Chart of this function for different OSP controls:
 <list type="table">
 <listheader>
 <term>OSP Control</term>
 <description>Compatible</description>
 </listheader>
 <item>
 <term>P100II</term>
 <description>No</description>
 </item>
 <item>
 <term>P200</term>
 <description>No</description>
 </item>
 <item>
 <term>P300L and newer controls</term>
 <description>Yes IF NC Spec Code 2 [27,2] LTIM = ON</description>
 </item>
 <item>
 <term>P300S/TD Mode and newer controls</term>
 <description>Yes IF NC Spec Code 2 [3,6] TMIM = ON</description>
 </item>
 <item>
 <term>P300S/TL Mode and newer controls</term>
 <description>Yes IF NC Spec Code 2 [3,6] TMIM = ON</description>
 </item>
 </list>
 </para>
 <para>For OSP-P300 control, this function is required to operate in an exclusive mode.</para>  
 <para>It means it must be able to enter Edit Tool Data mode exclusively from other applications running on Windows including NC.</para>  
 <para>At any point in time only one application can be in Edit Tool Data mode</para>  
 <para> If we can lock then we can set. If we cannot lock then an error message is returned due to NC is in editing mode:</para>  
 <para> Tool operation cannot be performed while other application is currently </para>  
 <para>in Edit Tool Data mode such as Attach/Detach/Edit Tool Data/Insert Tool/Register Tool Data/Delete Tool Data or current NC running condition.</para>  
 <para>***** It is very important to acknowledge that the API locking mechanism is applied to the entired machine including all applications using THINC-API, and NC-HMI</para>  
 <para>***** As a result, if the application is performing tool operation and terminated incorrectly while API is locking, it will permanently lock the entire tool operation </para>  
 <para>***** and can only be recovered the tool operation by restarting the machine</para>   
 </remarks>
 <Figure> TOOL DATA SETTING - TOOL DATA (ALL) - TNo
 <para>
 <img src="../media/Lathe.P300.TD.ToolDataSetting.XZ.jpg"/>
 </para>
 </Figure>
 <history>
 	[lhuynh]	06/12/2013	Created
 </history>
 -----------------------------------------------------------------------------
</member>
<member name="M:Okuma.CLCMDAPI.CommandAPI.CATC.RegisterTool(System.Int32,System.Int32,Okuma.CLCMDAPI.Enumerations.ToolEdgeEnum,Okuma.CLCMDAPI.Enumerations.SettingToolKindEnum,Okuma.CLCMDAPI.Enumerations.SettingToolSizeEnum,Okuma.CLCMDAPI.Enumerations.BasicPositionSpindleEnum,Okuma.CLCMDAPI.Enumerations.BaseCuttingPositionSettingEnum,System.Double,Okuma.CLCMDAPI.Enumerations.ToolLocationEnum)">
 -----------------------------------------------------------------------------
 <summary>
 <para>Register a new tool into the system when target number is zero.</para>
 <para>Register a new tool into the system and attach the tool into the specified target number if provided when NC is not running.</para>
 </summary>
 <example> This example shows how to call the RegisterTool method.
 <code source="../ThincLathe/DATAPI_CTools.vb" region="CTools.RegisterTools Example" language="vbnet" />
 </example>
 <param name="intToolNo">Tool number</param>
 <param name="intTargetNo">
 <para>Target number: Magazine pot/Turret station.  </para>
 <para>If target number is 0, tool will be registered into the system only without attaching to a tool location</para>
 <para>Spefiy target number = 1 for attaching tool to H1 Turret location</para>
 <para>***** For OSPSpecEnum.DualChainedMagazineVTRA spec. on OSP-P300 S or newer controls: *****</para>
 <para>the Target parameter must not be one of the reserved pots: 21-24.</para>
 </param>
 <param name="enEdgeNo">
 <para>For OSP-P300S: Edge number. Specifying 0 for registering standard tool (non-multi edges tool). Otherwise it is from 1 to 12 if applicable.  </para>
 <para>Multi-Edges Tool specification is NC spec code [5,3] ON</para>
 <para>12 Edges specification is PLC spec code 2 [34, 0] ON</para>
 <para>8 Edges specification is PLC spec code 2 [34, 1] ON</para>
 <para>4 Edges specification is PLC spec code 2 [34, 4] ON</para>
 </param>
 <param name="enSettingToolKind">Tool kind.  Dummy Tool cannot be set for Multi-Edge tool.</param>
 <param name="enSettingToolSize">
 <para>For OSP-P300S: Tool size</para>
 </param>
 <param name="enSpindleAxis">Spindle axis. Specifying NONE in case of sub spindle NC spec [4,1] is OFF</param>
 <param name="enBaseCuttingPositionSetting">
 <para>For OSP-P300S: Cutting position.  Specifying None for B Turret location</para>
 </param>
 <param name="dblAngle">
 <para>For OSP-P300S: BA angle depends on machine specification if supported.  Not applicable for B Turret locations</para>
 </param>
 <param name="enToolLocation">
 <para>Location of tool to be registered with.</para>
 <para>If Location is Magazine and Target number is greater than zero then tool is registered with the system and attached to target location on ATC magazine.</para>
 <para>If Location is H1 Turret then tool is automatically registered with the system and attached to H1 turret when target number is 1.</para>
 </param>
 <exception cref="T:System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
 <exception cref="T:System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system</exception>
 <remarks>
 <para>
 Compatible Chart of this function for different OSP controls:
 <list type="table">
 <listheader>
 <term>OSP Control</term>
 <description>Compatible</description>
 </listheader>
 <item>
 <term>P100II</term>
 <description>No</description>
 </item>
 <item>
 <term>P200</term>
 <description>No</description>
 </item>
 <item>
 <term>P300L and newer controls</term>
 <description>No</description>
 </item>
 <item>
 <term>P300S/TD Mode and newer controls</term>
 <description>Yes IF NC Spec Code 2 [3,6] TMIM = ON</description>
 </item>
 <item>
 <term>P300S/TL Mode and newer controls</term>
 <description>Yes IF NC Spec Code 2 [3,6] TMIM = ON</description>
 </item>
 </list>
 </para>
 <para>For OSP-P300 control, this function is required to operate in an exclusive mode.</para>  
 <para>It means it must be able to enter Edit Tool Data mode exclusively from other applications running on Windows including NC.</para>  
 <para>At any point in time only one application can be in Edit Tool Data mode</para>  
 <para> If we can lock then we can set. If we cannot lock then an error message is returned due to NC is in editing mode:</para>  
 <para> Tool operation cannot be performed while other application is currently </para>  
 <para>in Edit Tool Data mode such as Attach/Detach/Edit Tool Data/Insert Tool/Register Tool Data/Delete Tool Data or current NC running condition.</para>  
 <para>***** It is very important to acknowledge that the API locking mechanism is applied to the entired machine including all applications using THINC-API, and NC-HMI</para>  
 <para>***** As a result, if the application is performing tool operation and terminated incorrectly while API is locking, it will permanently lock the entire tool operation </para>  
 <para>***** and can only be recovered the tool operation by restarting the machine</para>   
 </remarks>
 <Figure> 
 <para> For OSP-P300S: TOOL DATA SETTING - MAGAZINE INFO.</para>
 <img src="../media/Lathe.P300.TD.ToolDataSetting.ATC.jpg"/>
 <para> For OSP-P300S: TOOL DATA SETTING - TURRET INFO.</para>
 <img src="../media/Lathe.P300S.TurretInfo.jpg"/>
 </Figure>
 <history>
 	[lhuynh]	6/14/2013	Created
 </history>
 -----------------------------------------------------------------------------
</member>
<member name="M:Okuma.CLCMDAPI.CommandAPI.CATC.RegisterTool(System.Int32,System.Int32,Okuma.CLCMDAPI.Enumerations.SettingToolKindEnum,Okuma.CLCMDAPI.Enumerations.BasicPositionSpindleEnum,Okuma.CLCMDAPI.Enumerations.ToolLocationEnum)">
 -----------------------------------------------------------------------------
 <summary>
 <para>Register a new tool into the system when target number is zero.</para>
 <para>Register a new tool into the system and attach the tool into the specified target number based on tool location if provided when NC is not running.</para>
 </summary>
 <example> This example shows how to call the RegisterTool method.
 <code source="../ThincLathe/DATAPI_CTools.vb" region="CTools.RegisterTools Example" language="vbnet" />
 </example>
 <param name="intToolNo">Tool number</param>
 <param name="intTargetNo">Target number: Turret station.  If target number is 0, tool will be registered into the system only without attaching to a tool location</param>
 <param name="enSettingToolKind">Tool kind.  Dummy Tool cannot be set for Multi-Edge tool.</param>
 <param name="enSpindleAxis">Spindle axis. Specifying NONE in case of sub spindle NC spec [4,1] is OFF or Multi Tool spec. NC2 [24,7] is ON </param>
 <param name="enToolLocation">Location of tool to be registered with.  H1_Turret location is not applicable</param>
 <exception cref="T:System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
 <exception cref="T:System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system</exception>
 <remarks>
 <para>
 Compatible Chart of this function for different OSP controls:
 <list type="table">
 <listheader>
 <term>OSP Control</term>
 <description>Compatible</description>
 </listheader>
 <item>
 <term>P100II</term>
 <description>No</description>
 </item>
 <item>
 <term>P200</term>
 <description>No</description>
 </item>
 <item>
 <term>P300L and newer controls</term>
 <description>Yes IF NC Spec Code 2 [27,2] LTIM = ON</description>
 </item>
 <item>
 <term>P300S/TD Mode and newer controls</term>
 <description>No</description>
 </item>
 <item>
 <term>P300S/TL Mode and newer controls</term>
 <description>No</description>
 </item>
 </list>
 </para>
 <para>For OSP-P300 control, this function is required to operate in an exclusive mode.</para>  
 <para>It means it must be able to enter Edit Tool Data mode exclusively from other applications running on Windows including NC.</para>  
 <para>At any point in time only one application can be in Edit Tool Data mode</para>  
 <para> If we can lock then we can set. If we cannot lock then an error message is returned due to NC is in editing mode:</para>  
 <para> Tool operation cannot be performed while other application is currently </para>  
 <para>in Edit Tool Data mode such as Attach/Detach/Edit Tool Data/Insert Tool/Register Tool Data/Delete Tool Data or current NC running condition.</para>  
 <para>***** It is very important to acknowledge that the API locking mechanism is applied to the entired machine including all applications using THINC-API, and NC-HMI</para>  
 <para>***** As a result, if the application is performing tool operation and terminated incorrectly while API is locking, it will permanently lock the entire tool operation </para>  
 <para>***** and can only be recovered the tool operation by restarting the machine</para>   
 </remarks>
 <Figure> 
 <para> For OSP-P300L: TOOL DATA SETTING - TURRET INFO.</para>
 <img src="../media/Lathe.P300L.TurretInfo.jpg"/>
 </Figure>
 <history>
 	[lhuynh]	6/14/2013	Created
 </history>
 -----------------------------------------------------------------------------
</member>
<member name="M:Okuma.CLCMDAPI.CommandAPI.CATC.DetachTool(System.Int32,Okuma.CLCMDAPI.Enumerations.ToolLocationEnum)">
 -----------------------------------------------------------------------------
 <summary>
 Detach a tool  in ATC magazine or turret given target number, and tool location while NC is not in running state.
 </summary>
 <example> This example shows how to call the DetachTool method.
 <code source="../ThincLathe/DATAPI_CTools.vb" region="CTools.RegisterTools Example" language="vbnet" />
 </example>
 <param name="intTarget">Pot number for magazine; Station number for turret</param>
 <param name="enToolLocation">Tool location: Magazine/Turrets location</param>
 <remarks>
 <para>
 Compatible Chart of this function for different OSP controls:
 <list type="table">
 <listheader>
 <term>OSP Control</term>
 <description>Compatible</description>
 </listheader>
 <item>
 <term>P100II</term>
 <description>No</description>
 </item>
 <item>
 <term>P200</term>
 <description>No</description>
 </item>
 <item>
 <term>P300L and newer controls</term>
 <description>Yes IF NC Spec Code 2 [27,2] LTIM = ON</description>
 </item>
 <item>
 <term>P300S/TD Mode and newer controls</term>
 <description>Yes IF NC Spec Code 2 [3,6] TMIM = ON</description>
 </item>
 <item>
 <term>P300S/TL Mode and newer controls</term>
 <description>Yes IF NC Spec Code 2 [3,6] TMIM = ON</description>
 </item>
 </list>
 </para>
 <para>For OSP-P300 control, this function is required to operate in an exclusive mode.</para>  
 <para>It means it must be able to enter Edit Tool Data mode exclusively from other applications running on Windows including NC.</para>  
 <para>At any point in time only one application can be in Edit Tool Data mode</para>  
 <para> If we can lock then we can set. If we cannot lock then an error message is returned due to NC is in editing mode:</para>  
 <para> Tool operation cannot be performed while other application is currently </para>  
 <para>in Edit Tool Data mode such as Attach/Detach/Edit Tool Data/Insert Tool/Register Tool Data/Delete Tool Data or current NC running condition.</para>  
 <para>***** It is very important to acknowledge that the API locking mechanism is applied to the entired machine including all applications using THINC-API, and NC-HMI</para>  
 <para>***** As a result, if the application is performing tool operation and terminated incorrectly while API is locking, it will permanently lock the entire tool operation </para>  
 <para>***** and can only be recovered the tool operation by restarting the machine</para>   
 </remarks>
 <Figure> 
 <para> For OSP-P300S: TOOL DATA SETTING - MAGAZINE INFO.</para>
 <img src="../media/Lathe.P300.TD.ToolDataSetting.ATC.jpg"/>
 <para> For OSP-P300S: TOOL DATA SETTING - TURRET INFO.</para>
 <img src="../media/Lathe.P300S.TurretInfo.jpg"/>
 <para> For OSP-P300L: TOOL DATA SETTING - TURRET INFO.</para>
 <img src="../media/Lathe.P300L.TurretInfo.jpg"/>
 </Figure>
 <history>
 	[lhuynh]	6/14/2013	Created
 </history>
 -----------------------------------------------------------------------------
</member>
<member name="M:Okuma.CLCMDAPI.CommandAPI.CATC.RegisterToolEdge(System.Int32,Okuma.CLCMDAPI.Enumerations.ToolEdgeEnum,Okuma.CLCMDAPI.Enumerations.BasicPositionSpindleEnum,Okuma.CLCMDAPI.Enumerations.BaseCuttingPositionSettingEnum,System.Double)">
 -----------------------------------------------------------------------------
 <summary>
 <para>Register a new tool edge into the system</para>
 <para>
 <para>Note: NC condition must not be in executing state.</para>
 </para>
 </summary>
 <example> This example shows how to call the RegisterToolEdge method.
 <code source="../ThincLathe/DATAPI_CTools.vb" region="CTools.RegisterTools Example" language="vbnet" />
 </example>
 <param name="intToolNo">Tool number</param>
 <param name="enEdgeNo"> Tool edge to be set
 <para>For OSP-P300S: Edge number. Specifying 0 for registering standard tool (non-multi edges tool). Otherwise it is from 1 to 12 if applicable.  </para>
 <para>Multi-Edges Tool specification is NC spec code [5,3] ON</para>
 <para>12 Edges specification is PLC spec code 2 [34, 0] ON</para>
 <para>8 Edges specification is PLC spec code 2 [34, 1] ON</para>
 <para>4 Edges specification is PLC spec code 2 [34, 4] ON</para>
 <para>For OSP-P300L: Edge number must be greater than 1 and from 1-8 only</para>
 </param>
 <param name="enSpindleAxis">Spindle axis. Specifying NONE in case of sub spindle NC spec [4,1] is OFF</param>
 <param name="enBaseCuttingPositionSetting">
 <para>For OSP-P300S: Cutting position.  Specifying None for B Turret location</para>
 <para>For OSP-P300L: Not applicable. Ignored by system</para>
 </param>
 <param name="dblAngle">
 <para>For OSP-P300S: BA angle depends on machine specification if supported.  Not applicable for B Turret locations</para>
 <para>For OSP-P300L: Not applicable. Ignored by system</para>
 </param>
 <remarks>
 <para>
 Compatible Chart of this function for different OSP controls:
 <list type="table">
 <listheader>
 <term>OSP Control</term>
 <description>Compatible</description>
 </listheader>
 <item>
 <term>P100II</term>
 <description>No</description>
 </item>
 <item>
 <term>P200</term>
 <description>No</description>
 </item>
 <item>
 <term>P300L and newer controls</term>
 <description>Yes IF NC Spec Code 2 [27,2] LTIM = ON</description>
 </item>
 <item>
 <term>P300S/TD Mode and newer controls</term>
 <description>Yes IF NC Spec Code 2 [3,6] TMIM = ON</description>
 </item>
 <item>
 <term>P300S/TL Mode and newer controls</term>
 <description>Yes IF NC Spec Code 2 [3,6] TMIM = ON</description>
 </item>
 </list>
 </para>
 <para>For OSP-P300 control, this function is required to operate in an exclusive mode.</para>  
 <para>It means it must be able to enter Edit Tool Data mode exclusively from other applications running on Windows including NC.</para>  
 <para>At any point in time only one application can be in Edit Tool Data mode</para>  
 <para> If we can lock then we can set. If we cannot lock then an error message is returned due to NC is in editing mode:</para>  
 <para> Tool operation cannot be performed while other application is currently </para>  
 <para>in Edit Tool Data mode such as Attach/Detach/Edit Tool Data/Insert Tool/Register Tool Data/Delete Tool Data or current NC running condition.</para>  
 <para>***** It is very important to acknowledge that the API locking mechanism is applied to the entired machine including all applications using THINC-API, and NC-HMI</para>  
 <para>***** As a result, if the application is performing tool operation and terminated incorrectly while API is locking, it will permanently lock the entire tool operation </para>  
 <para>***** and can only be recovered the tool operation by restarting the machine</para>   
 </remarks>
 <Figure> 
 <para> TOOL DATA SETTING - TOOL DATA (ALL) -  ENo</para>
 <img src="../media/Lathe.P300.TD.ToolDataSetting.XZ.jpg"/>
 <para> For OSP-P300S: TOOL DATA SETTING - TURRET INFO - ENo</para>
 <img src="../media/Lathe.P300S.TurretInfo.jpg"/>
 <para> For OSP-P300L: TOOL DATA SETTING - TURRET INFO - EDGE NO.</para>
 <img src="../media/Lathe.P300L.TurretInfo.jpg"/>
 </Figure>
 <history>
 	[lhuynh]	6/14/2013	Created
 </history>
 -----------------------------------------------------------------------------
</member>
<member name="M:Okuma.CLCMDAPI.CommandAPI.CATC.RegisterToolCuttingPosition(System.Int32,Okuma.CLCMDAPI.Enumerations.ToolEdgeEnum,Okuma.CLCMDAPI.Enumerations.ToolCuttingPositionEnum,Okuma.CLCMDAPI.Enumerations.BasicPositionSpindleEnum,Okuma.CLCMDAPI.Enumerations.BaseCuttingPositionSettingEnum,System.Double)">
 -----------------------------------------------------------------------------
 <summary>
 <para>OSP-P300S: Register a new tool cutting position into the system given tool number, edge number, spinde axis, base cutting position, and BA angle.</para>
 <para>OSP-P300L: Only spindle axis position can be changed given tool number, and edge number.</para>
 <para>
 <para>Note: NC condition must not be in executing state.</para>
 </para>
 </summary>
 <example> This example shows how to call the RegisterToolCuttingPosition method.
 <code escaped="true" language="vbnet">
 Dim objATC As CATC = new CATC 
 Dim intToolNo As Integer 
 Dim enEdgeNo As Integer 
 Dim enToolCuttingPosition As ToolCuttingPositionEnum 
 Dim enPrincipleAxis As BasicPositionSpindleEnum 
 Dim enBaseCuttingPositionSetting As BaseCuttingPositionSettingEnum 
 Dim dblAngle As Double 
 If IsLTMIMSpecOn() Then 
    objATC.RegisterToolCuttingPosition(intToolNo, enEdgeNo, enToolCuttingPosition, enPrincipleAxis, enBaseCuttingPositionSetting, dblAngle) 
 End If        
 </code>
 </example>
 <param name="intToolNo">Tool number</param>
 <param name="enEdgeNo">
 <para>For OSP-P300S: Edge number. Specifying 0 for registering standard tool (non-multi edges tool). Otherwise it is from 1 to 12 if applicable.  </para>
 <para>For OSP-P300L: Edge number must be 1 only</para>
 <para>Multi-Edges Tool specification is NC spec code [5,3] ON</para>
 <para>12 Edges specification is PLC spec code 2 [34, 0] ON</para>
 <para>8 Edges specification is PLC spec code 2 [34, 1] ON</para>
 <para>4 Edges specification is PLC spec code 2 [34, 4] ON</para>
 </param>
 <param name="enToolCuttingPosition">Tool cutting position to be set</param>
 <param name="enSpindleAxis">Spindle axis. Specifying NONE in case of sub spindle NC spec [4,1] is OFF</param>
 <param name="enBaseCuttingPositionSetting">
 <para>For OSP-P300S: Cutting position.  Specifying None for B Turret location</para>
 <para>For OSP-P300L: Not applicable. Ignored by system</para>
 </param>
 <param name="dblAngle">
 <para>For OSP-P300S: BA angle depends on machine specification if supported.  Not applicable for B Turret locations</para>
 <para>For OSP-P300L: Not applicable. Ignored by system</para>
 </param>
 <remarks>
 <para>
 Compatible Chart of this function for different OSP controls:
 <list type="table">
 <listheader>
 <term>OSP Control</term>
 <description>Compatible</description>
 </listheader>
 <item>
 <term>P100II</term>
 <description>No</description>
 </item>
 <item>
 <term>P200</term>
 <description>No</description>
 </item>
 <item>
 <term>P300L and newer controls</term>
 <description>Yes IF NC Spec Code 2 [27,2] LTIM = ON</description>
 </item>
 <item>
 <term>P300S/TD Mode and newer controls</term>
 <description>Yes IF NC Spec Code 2 [3,6] TMIM = ON</description>
 </item>
 <item>
 <term>P300S/TL Mode and newer controls</term>
 <description>YYes IF NC Spec Code 2 [3,6] TMIM = ON</description>
 </item>
 </list>
 </para>
 <para>For OSP-P300 control, this function is required to operate in an exclusive mode.</para>  
 <para>It means it must be able to enter Edit Tool Data mode exclusively from other applications running on Windows including NC.</para>  
 <para>At any point in time only one application can be in Edit Tool Data mode</para>  
 <para> If we can lock then we can set. If we cannot lock then an error message is returned due to NC is in editing mode:</para>  
 <para> Tool operation cannot be performed while other application is currently </para>  
 <para>in Edit Tool Data mode such as Attach/Detach/Edit Tool Data/Insert Tool/Register Tool Data/Delete Tool Data or current NC running condition.</para>  
 <para>***** It is very important to acknowledge that the API locking mechanism is applied to the entired machine including all applications using THINC-API, and NC-HMI</para>  
 <para>***** As a result, if the application is performing tool operation and terminated incorrectly while API is locking, it will permanently lock the entire tool operation </para>  
 <para>***** and can only be recovered the tool operation by restarting the machine</para>   
 </remarks>
 <Figure> 
 <para>TOOL DATA SETTING - TOOL DATA (ALL) -  PNo</para>
 <img src="../media/Lathe.P300.TD.ToolDataSetting.XZ.jpg"/>
 <para> For OSP-P300S: TOOL DATA SETTING - TURRET INFO - PNo</para>
 <img src="../media/Lathe.P300S.TurretInfo.jpg"/>
 <para> For OSP-P300L: TOOL DATA SETTING - TURRET INFO</para>
 <img src="../media/Lathe.P300L.TurretInfo.jpg"/>
 </Figure>
 <history>
 	[lhuynh]	6/14/2013	Created
 </history>
 -----------------------------------------------------------------------------
</member>
<member name="M:Okuma.CLCMDAPI.CommandAPI.CATC.DeleteToolEdge(System.Int32,Okuma.CLCMDAPI.Enumerations.ToolEdgeEnum)">
 -----------------------------------------------------------------------------
 <summary>
 Delete tool edge number given registered tool number, and edge number
 </summary>
 <example> This example shows how to call the DeleteToolCuttingPosition method.
 <code escaped="true" language="vbnet">
 Dim intToolNo As Integer 
 Dim enToolEdge As ToolEdgeEnum
 Dim objTool As CTools = New Okuma.CLDATAPI.DATAPI.CTools
 Dim enToolEdge As ToolEdgeEnum = ToolEdgeEnum.ToolEdge_01
 Dim objTool As CTools = New Okuma.CLDATAPI.DATAPI.CTools
 Dim objCmdATC As CATC = New Okuma.CLCMDAPI.CommandAPI.CATC
 If IsLTMIMSpecOn() then
    If objTool.IsMountedTool(intToolNo) = false Then 
       objCmdATC.DeleteToolEdge(intToolNo, enToolEdge)
    End If
 End If
 </code>
 </example>
 <param name="intToolNo">a registered tool.  For OSP-P300S, tool must not be attached to magazine/turrets.</param>
 <param name="enToolEdge">
 <para>For OSP-P300S: tool edge number to be deleted</para>
 <para>For OSP-P300L: tool edge number to be deleted.  It is not valid for deleting tool edge 1.</para>
 </param>
 <remarks>
 <para>
 Compatible Chart of this function for different OSP controls:
 <list type="table">
 <listheader>
 <term>OSP Control</term>
 <description>Compatible</description>
 </listheader>
 <item>
 <term>P100II</term>
 <description>No</description>
 </item>
 <item>
 <term>P200</term>
 <description>No</description>
 </item>
 <item>
 <term>P300L and newer controls</term>
 <description>Yes IF NC Spec Code 2 [27,2] LTIM = ON</description>
 </item>
 <item>
 <term>P300S/TD Mode and newer controls</term>
 <description>Yes IF NC Spec Code 2 [3,6] TMIM = ON</description>
 </item>
 <item>
 <term>P300S/TL Mode and newer controls</term>
 <description>Yes IF NC Spec Code 2 [3,6] TMIM = ON</description>
 </item>
 </list>
 </para>
 <para>For OSP-P300 control, this function is required to operate in an exclusive mode.</para>  
 <para>It means it must be able to enter Edit Tool Data mode exclusively from other applications running on Windows including NC.</para>  
 <para>At any point in time only one application can be in Edit Tool Data mode</para>  
 <para> If we can lock then we can set. If we cannot lock then an error message is returned due to NC is in editing mode:</para>  
 <para> Tool operation cannot be performed while other application is currently </para>  
 <para>in Edit Tool Data mode such as Attach/Detach/Edit Tool Data/Insert Tool/Register Tool Data/Delete Tool Data or current NC running condition.</para>  
 <para>***** It is very important to acknowledge that the API locking mechanism is applied to the entired machine including all applications using THINC-API, and NC-HMI</para>  
 <para>***** As a result, if the application is performing tool operation and terminated incorrectly while API is locking, it will permanently lock the entire tool operation </para>  
 <para>***** and can only be recovered the tool operation by restarting the machine</para>   
 </remarks>
 <Figure> 
 <para>TOOL DATA SETTING - TOOL DATA (ALL) -  ENo</para>
 <img src="../media/Lathe.P300.TD.ToolDataSetting.XZ.jpg"/>
 <para> For OSP-P300S: TOOL DATA SETTING - TURRET INFO - ENo</para>
 <img src="../media/Lathe.P300S.TurretInfo.jpg"/>
 <para> For OSP-P300L: TOOL DATA SETTING - TURRET INFO - EDGE NO.</para>
 <img src="../media/Lathe.P300L.TurretInfo.jpg"/>
 </Figure>
 <history>
 	[lhuynh]	7/10/2013	Created
 </history>
 -----------------------------------------------------------------------------
</member>
<member name="M:Okuma.CLCMDAPI.CommandAPI.CATC.DeleteToolCuttingPosition(System.Int32,Okuma.CLCMDAPI.Enumerations.ToolEdgeEnum,Okuma.CLCMDAPI.Enumerations.ToolCuttingPositionEnum)">
 -----------------------------------------------------------------------------
 <summary>
 For non-mounted tool, this function will delete tool cutting position given registered tool number, edge number, and cutting position if applicable.
 Note: Last tool cutting position cannot be deleted from a tool number.
 </summary>
 <example> This example shows how to call the DeleteToolCuttingPosition method.
 <code escaped="true" language="vbnet">
 Dim intToolNo As Integer 
 Dim enToolCuttingPosition As Okuma.CLCMDAPI.Enumerations.ToolCuttingPositionEnum
 Dim enToolEdge As ToolEdgeEnum = ToolEdgeEnum.ToolEdge_01
 Dim objTool As CTools = New Okuma.CLDATAPI.DATAPI.CTools
 Dim objCmdATC As CATC = New Okuma.CLCMDAPI.CommandAPI.CATC
 If objTool.IsLTMIMSpecOn() then
    If objTool.IsMultiEdgesTool(intToolNo) = false Then enToolEdge = ToolEdgeEnum.None
       objCmdATC.DeleteToolCuttingPosition(intToolNo, enToolEdge, enToolCuttingPosition)
    End If
 End If
 </code>
 </example>
 <param name="intToolNo">registered tool</param>
 <param name="enToolEdge">tool edge number ranging from 1 to 12 for multi-edges tool. Specified 0 for regular or non multi-edges tool.</param>
 <param name="enToolCuttingPosition">tool cutting position number to be deleted</param>
 <remarks>
 <para>
 Compatible Chart of this function for different OSP controls:
 <list type="table">
 <listheader>
 <term>OSP Control</term>
 <description>Compatible</description>
 </listheader>
 <item>
 <term>P100II</term>
 <description>No</description>
 </item>
 <item>
 <term>P200</term>
 <description>No</description>
 </item>
 <item>
 <term>P300L and newer controls</term>
 <description>No</description>
 </item>
 <item>
 <term>P300S/TD Mode and newer controls</term>
 <description>Yes IF NC Spec Code 2 [3,6] TMIM = ON</description>
 </item>
 <item>
 <term>P300S/TL Mode and newer controls</term>
 <description>Yes IF NC Spec Code 2 [3,6] TMIM = ON</description>
 </item>
 </list>
 </para>
 <para>For OSP-P300 control, this function is required to operate in an exclusive mode.</para>  
 <para>It means it must be able to enter Edit Tool Data mode exclusively from other applications running on Windows including NC.</para>  
 <para>At any point in time only one application can be in Edit Tool Data mode</para>  
 <para> If we can lock then we can set. If we cannot lock then an error message is returned due to NC is in editing mode:</para>  
 <para> Tool operation cannot be performed while other application is currently </para>  
 <para>in Edit Tool Data mode such as Attach/Detach/Edit Tool Data/Insert Tool/Register Tool Data/Delete Tool Data or current NC running condition.</para>  
 <para>***** It is very important to acknowledge that the API locking mechanism is applied to the entired machine including all applications using THINC-API, and NC-HMI</para>  
 <para>***** As a result, if the application is performing tool operation and terminated incorrectly while API is locking, it will permanently lock the entire tool operation </para>  
 <para>***** and can only be recovered the tool operation by restarting the machine</para>   
 </remarks>
 <Figure> 
 <para>TOOL DATA SETTING - TOOL DATA (ALL) -  PNo</para>
 <img src="../media/Lathe.P300.TD.ToolDataSetting.XZ.jpg"/>
 </Figure>
 <history>
 	[lhuynh]	7/10/2013	Created
 </history>
 -----------------------------------------------------------------------------
</member>
<member name="M:Okuma.CLCMDAPI.CommandAPI.CATC.ToolDataOutput(System.Int32,System.String,System.Boolean)">
 <summary>
 Save the tool data information given registered tool number, and the destination folder.
 <para>Tool data will be stored into a file in the following format:
 Txxxx.TDF where x is the actual tool number. Ex: T0001.TDF for tool number 1. T9999.TDF for tool number 9999
 </para>
 </summary>
 <example> This example shows how to call the save and load tool data using ToolDataInput/ToolDataOutput methods.
 <code source="../ThincLathe/CATCPanelExamples.vb" region="CATC.Load_AND_Save_Tool-Data" language="vbnet" />
 </example>
 <param name="intToolNo">Registered Tool number to be saved</param>
 <param name="strFolderPath">full path where tool data file is stored</param>
 <param name="blnOverwrite">Overwrite tool data file if it is set to TRUE.  If tool data file already exists it will generate an error if Overwrite is not set to TRUE</param>
 <exception cref="T:System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
 <exception cref="T:System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system</exception>
 <remarks>
 <para>
 Compatible Chart of this function for different OSP controls:
 <list type="table">
 <listheader>
 <term>OSP Control</term>
 <description>Compatible</description>
 </listheader>
 <item>
 <term>P100II</term>
 <description>No</description>
 </item>
 <item>
 <term>P200</term>
 <description>No</description>
 </item>
 <item>
 <term>P300L and newer controls</term>
 <description>Yes IF NC Spec Code 2 [27,2] LTIM = ON</description>
 </item>
 <item>
 <term>P300S/TD Mode and newer controls</term>
 <description>Yes IF NC Spec Code 2 [3,6] TMIM = ON</description>
 </item>
 <item>
 <term>P300S/TL Mode and newer controls</term>
 <description>Yes IF NC Spec Code 2 [3,6] TMIM = ON</description>
 </item>
 </list>
 </para>
 <para>For OSP-P300 control, this function is required to operate in an exclusive mode.</para>  
 <para>It means it must be able to enter Edit Tool Data mode exclusively from other applications running on Windows including NC.</para>  
 <para>At any point in time only one application can be in Edit Tool Data mode</para>  
 <para> If we can lock then we can set. If we cannot lock then an error message is returned due to NC is in editing mode:</para>  
 <para> Tool operation cannot be performed while other application is currently </para>  
 <para>in Edit Tool Data mode such as Attach/Detach/Edit Tool Data/Insert Tool/Register Tool Data/Delete Tool Data or current NC running condition.</para>  
 <para>***** It is very important to acknowledge that the API locking mechanism is applied to the entired machine including all applications using THINC-API, and NC-HMI</para>  
 <para>***** As a result, if the application is performing tool operation and terminated incorrectly while API is locking, it will permanently lock the entire tool operation </para>  
 <para>***** and can only be recovered the tool operation by restarting the machine</para>   
 </remarks>
 <Figure> 
 <para> For OSP-P300S: TOOL DATA SETTING - TOOL DATA (ALL) - TL-DATA OUTPUT</para>
 <img src="../media/Lathe.P300LSP.ToolData.InputOutput.jpg"/>
 <para> For OSP-P300L: TOOL DATA SETTING - TOOL DATA (ALL) - TL-DATA OUTPUT</para>
 <img src="../media/Lathe.P300L.ToolData.InputOutput.jpg"/>
 </Figure>
 <history>
 	[lhuynh]	08/2/2018	Created
 </history>
 -----------------------------------------------------------------------------
</member>
<member name="M:Okuma.CLCMDAPI.CommandAPI.CATC.ToolDataInput(System.Int32,System.String,System.Boolean)">
 <summary>
 Load tool data information given tool number and file path of tool data file is located
 </summary>
 <example> This example shows how to call the save and load tool data using ToolDataInput/ToolDataOutput methods.
 <code source="../ThincLathe/CATCPanelExamples.vb" region="CATC.Load_AND_Save_Tool-Data" language="vbnet" />
 </example>
 <param name="intToolNo">Tool number to be loaded into NC. Tool must not be currently attached to magazine/turrets.</param>
 <param name="strFolderPath">full path where tool data file is stored</param>
 <param name="blnOverwrite">Overwrite NC tool data information if it is set to TRUE. If tool data already exists on NC it will generate an error if Overwrite is not set to TRUE</param>
 <exception cref="T:System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
 <exception cref="T:System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system</exception>
 <remarks>
 <para>
 Compatible Chart of this function for different OSP controls:
 <list type="table">
 <listheader>
 <term>OSP Control</term>
 <description>Compatible</description>
 </listheader>
 <item>
 <term>P100II</term>
 <description>No</description>
 </item>
 <item>
 <term>P200</term>
 <description>No</description>
 </item>
 <item>
 <term>P300L and newer controls</term>
 <description>Yes IF NC Spec Code 2 [27,2] LTIM = ON</description>
 </item>
 <item>
 <term>P300S/TD Mode and newer controls</term>
 <description>Yes IF NC Spec Code 2 [3,6] TMIM = ON</description>
 </item>
 <item>
 <term>P300S/TL Mode and newer controls</term>
 <description>Yes IF NC Spec Code 2 [3,6] TMIM = ON</description>
 </item>
 </list>
 </para>
 <para>For OSP-P300 control, this function is required to operate in an exclusive mode.</para>  
 <para>It means it must be able to enter Edit Tool Data mode exclusively from other applications running on Windows including NC.</para>  
 <para>At any point in time only one application can be in Edit Tool Data mode</para>  
 <para> If we can lock then we can set. If we cannot lock then an error message is returned due to NC is in editing mode:</para>  
 <para> Tool operation cannot be performed while other application is currently </para>  
 <para>in Edit Tool Data mode such as Attach/Detach/Edit Tool Data/Insert Tool/Register Tool Data/Delete Tool Data or current NC running condition.</para>  
 <para>***** It is very important to acknowledge that the API locking mechanism is applied to the entired machine including all applications using THINC-API, and NC-HMI</para>  
 <para>***** As a result, if the application is performing tool operation and terminated incorrectly while API is locking, it will permanently lock the entire tool operation </para>  
 <para>***** and can only be recovered the tool operation by restarting the machine</para>   
 </remarks>
 <Figure> 
 <para> For OSP-P300S: TOOL DATA SETTING - TOOL DATA (ALL) - TL-DATA INPUT</para>
 <img src="../media/Lathe.P300LSP.ToolData.InputOutput.jpg"/>
 <para> For OSP-P300L: TOOL DATA SETTING - TOOL DATA (ALL) - TL-DATA INPUT</para>
 <img src="../media/Lathe.P300L.ToolData.InputOutput.jpg"/>
 </Figure>
 <history>
 	[lhuynh]	08/2/2018	Created
 </history>
 -----------------------------------------------------------------------------
</member>
<member name="T:Okuma.CLCMDAPI.CommandAPI.CATC2">
 -----------------------------------------------------------------------------
 Project	 : Okuma.CLCMDAPI
 Class	 : CLCMDAPI.CommandAPI.CATC
 
 -----------------------------------------------------------------------------
 <summary>
 Class provides information about Auto Tool Changer for 8 digits Tool ID.
 </summary>
 <remarks>
 </remarks>
 <history>
 	[Lhuynh]	12/2/2008	Created
 </history>
 -----------------------------------------------------------------------------
</member>
<member name="M:Okuma.CLCMDAPI.CommandAPI.CATC2.#ctor">
 -----------------------------------------------------------------------------
 <summary>
 Create an instance of this class
 </summary>
 <exception cref="T:System.ApplicationException">Thrown when function failes to perform the operation at current NC condition.</exception>
 <exception cref="T:System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system</exception>
 <history>
 	[Lhuynh]	2/6/2007	Created
 </history>
 -----------------------------------------------------------------------------
</member>
<member name="M:Okuma.CLCMDAPI.CommandAPI.CATC2.#ctor(System.String)">
 -----------------------------------------------------------------------------
 <summary>
 Create an instance of this class.
 In addition to library name, the provided logging name will be used for logging all function calls 
 </summary>
 <param name="strLoggingName">Logging Name.  Globally, The logging name will be combined with library name as the logging name for all logging message.</param>
 <exception cref="T:System.ApplicationException">Thrown when function failes to perform the operation at current NC condition.</exception>
 <exception cref="T:System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system</exception>
 <history>
 	[Lhuynh]	2/6/2007	Created
 </history>
 -----------------------------------------------------------------------------
</member>
<member name="M:Okuma.CLCMDAPI.CommandAPI.CATC2.RegisterToolPot(System.Int32,System.Int32,System.Int32,Okuma.CLCMDAPI.Enumerations.ToolIDSettingToolKindEnum,System.Int32,Okuma.CLCMDAPI.Enumerations.ToolIDSettingToolSizeEnum,System.Int32,Okuma.CLCMDAPI.Enumerations.TurretEnum,Okuma.CLCMDAPI.Enumerations.ReturnMagazineEnum)">
 -----------------------------------------------------------------------------
 <summary>
 Register a tool at the specified pot number with other tool attributes.
 </summary>
 <example> This example shows how to call the RegisterToolPot mothod.
 <code escaped="true" language="vbnet">
 Private Sub RegisterTool()
 Dim objcatc As CATC2
 Dim intPotNo, intGroupNo, intSerialNo, intEdges, intToolAngle As Integer
 Dim enTurret as TurretEnum
 Dim enToolKind As ToolIDSettingToolKindEnum
 Dim enToolSize As ToolIDSettingToolSizeEnum
 Dim enReturnMagazine As ReturnMagazineEnum
 Try
    objcatc = New CATC2()
    objcatc.RegisterToolPot(intPotNo, intGroupNo, intSerialNo, enToolKind, intEdges, enToolSize, intToolAngle, enReturnMagazine, enTurret)
 Catch ae As ApplicationException
    Throw
 Catch ex As Exception
    Throw
 End Try
 End Sub
 </code>
 </example>
 <param name="intPotNo">Pot number where a tool will be registered to.</param>
 <param name="intGroupNo">Group number to be registered for the tool</param>
 <param name="intSerialNo">Serial number to be registered for the tool</param>
 <param name="intEdges">Number of edges for multi-point tool kind</param>
 <param name="enSettingToolKind">Tool Kind for the registered tool</param>
 <param name="enSettingToolSize">Tool Size for the registered tool</param>
 <param name="intToolAngle">
 <para>Tool angle for multi-point tool kind</para>
 <para>Valid angle for 12 edges tool: 0/30/60/90/120/150/180/210/240/270/300/330</para>
 <para>Valid angle for other multi-edge tool: 0/45/90/135/180/225/270/315</para>
 </param>
 <param name="enTurret">
 <para>Turret number for the registered tool</para>
 </param>
 <param name="enReturnMagazine">Magazine to be returned</param>
 <exception cref="T:System.ApplicationException">Thrown when function failes to perform the operation at current NC condition.</exception>
 <exception cref="T:System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system</exception>
 <remarks>
 <para>
 <para>
 Note 1: 
 </para>
 When a large, super-large, right-large or left-large diameter tool is returned from the turret to the
 magazine, the tool is always returned to the pot where it was stored previously. The pot where
 any of a super-large, an R-large and an L-large diameter tool is stored is recognized as the pot
 for which the tool to be returned is determined (the pot is called a “reserved pot”) when a tool is
 removed from such a pot. Tools other than the previously stored tool are not returned to the pot
 recognized as the reserved pot.  The reserved pot is displayed with a R letter.
 </para>
 <para>
 <para>
 Note 2: 
 </para>
 <para>
 1) The tool cannot be registered due to a duplicate tool number if a tool with the same group
 number and the same serial number exists in another pot.
 </para>
 <para>
 2) The tool ID data can be deleted by changing both the group and serial numbers to 0.
 </para>
 <para>
 3) If the tool has been registered, the data in the tool setting window cannot be directly edited.
 Delete the data once and create again.
 </para>
 <para>
 4) The “RETURN MAGAZINE” setting is only effective for models with multiple magazines or
 subsidiary magazine. Otherwise, the data is not displayed or set up.
 </para>
 <para>
 5) The TIPS (CHIP) and TIP (CHIP) ANGLE settings are only effective when a ML tool (a multiple
 edge tool) is selected as tool kind. Otherwise, the data will not be displayed or set up. Do not
 specify the same tip angle for multiple tips of a multiple edge tool. Specifying duplicated angles
 results in an error.
 </para>
 <para>
 6) ML tool (multiple edge tool) cannot be selected as tool kind for the B-turret. Selecting it results
 in an error. The RETURN MAGAZINE data will not be displayed or set up for the B-turret.
 </para>
 <para>
 7) Selecting a size other than normal diameter with the adjacent pots occupied leads to an error.
 Extra-big diameter tool: The preceding or following pots shall be empty.
 Right big diameter tool: The preceding pot shall be empty.
 Left big diameter tool: The following pot shall be empty.
 SL tool: The preceding and following pots shall not be occupied by a dummy tool or a big
 diameter tool.
 </para>
 </para>
 </remarks>
 <Figure> ATC TOOL INFORMATION
 <para>
 <img src="../media/Lathe.ToolID.ATC2.SET.jpg"/>
 </para>
 </Figure>
 -----------------------------------------------------------------------------
</member>
<member name="T:Okuma.CLCMDAPI.CommandAPI.CATCPanel">
 -----------------------------------------------------------------------------
 Project	 : Okuma.CLCMDAPI
 Class	 : CLCMDAPI.CommandAPI.CATC
 
 -----------------------------------------------------------------------------
 <summary>
 Class provides information about Auto Tool Changer panel.
 </summary>
 <history>
 	[Lhuynh]	08/27/2019
 </history>
 -----------------------------------------------------------------------------
</member>
<member name="M:Okuma.CLCMDAPI.CommandAPI.CATCPanel.#ctor">
 -----------------------------------------------------------------------------
 <summary>
 Create an instance of this class.
 </summary>
 <history>
 	[Lhuynh]	2/6/20017	Created
 </history>
 -----------------------------------------------------------------------------
</member>
<member name="M:Okuma.CLCMDAPI.CommandAPI.CATCPanel.#ctor(System.String)">
 -----------------------------------------------------------------------------
 <summary>
 Create an instance of this class.
 In addition to library name, the provided logging name will be used for logging all function calls 
 </summary>
 <param name="strLoggingName">Logging Name.  Globally, The logging name will be combined with library name as the logging name for all logging message.</param>
 <remarks>
 Only the first instance of any class created with a logging name will be used otherwise, the default logging name will be used.  It is recommended to provide an application name and its version as logging name per instancing of class.
 </remarks>
 <history>
 	[Lhuynh]	2/6/20017	Created
 </history>
 -----------------------------------------------------------------------------
</member>
<member name="M:Okuma.CLCMDAPI.CommandAPI.CATCPanel.SetATCPanelMagazineManualInterruptMode(Okuma.CLCMDAPI.Enumerations.OnOffStateEnum)">
 -----------------------------------------------------------------------------
 <summary>
 Set ATC Panel Magazine Interrupted mode
 </summary>
 <example> This example shows how to call this method.
 <code source="../ThincLathe/CATCPanelExamples.vb" region="CATCPanel Examples" language="vbnet" />
 </example>
 <param name="enMode">Magazine interrupted mode to be set</param>
 <exception cref="T:System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
 <exception cref="T:System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system</exception>
 <remarks>
 <para>
 Compatible Chart of this function for different OSP controls:
 <list type="table">
 <listheader>
 <term>OSP Control</term>
 <description>Compatible</description>
 </listheader>
 <item>
 <term>P100II</term>
 <description>No</description>
 </item>
 <item>
 <term>P200</term>
 <description>No</description>
 </item>
 <item>
 <term>P300L and newer controls</term>
 <description>No</description>
 </item>
 <item>
 <term>P300S/TD Mode and newer controls</term>
 <description>Yes</description>
 </item>
 <item>
 <term>P300S/TL Mode and newer controls</term>
 <description>No</description>
 </item>
 </list>
 </para>
 </remarks>
 <Figure> 
 <para> For OSP-P300S: ATC Panel - INT</para>
 <img src="../media/Lathe.P300S.ATCPanel.jpg"/>
 </Figure>        
 <history>
 	[lhuynh]	08/27/2019	Created
 </history>
 -----------------------------------------------------------------------------
</member>
<member name="M:Okuma.CLCMDAPI.CommandAPI.CATCPanel.SetATCPanelChipPreparationMode(Okuma.CLCMDAPI.Enumerations.OnOffStateEnum)">
 -----------------------------------------------------------------------------
 <summary>
 Set ATC Panel CHIP Preparation Mode
 </summary>
 <example> This example shows how to call this method.
 <code source="../ThincLathe/CATCPanelExamples.vb" region="CATCPanel Examples" language="vbnet" />
 </example>
 <param name="enMode">Chip preperation mode to be set</param>
 <exception cref="T:System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
 <exception cref="T:System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system</exception>
 <remarks>
 <para>
 Compatible Chart of this function for different OSP controls:
 <list type="table">
 <listheader>
 <term>OSP Control</term>
 <description>Compatible</description>
 </listheader>
 <item>
 <term>P100II</term>
 <description>No</description>
 </item>
 <item>
 <term>P200</term>
 <description>No</description>
 </item>
 <item>
 <term>P300L and newer controls</term>
 <description>No</description>
 </item>
 <item>
 <term>P300S/TD Mode and newer controls</term>
 <description>Yes</description>
 </item>
 <item>
 <term>P300S/TL Mode and newer controls</term>
 <description>No</description>
 </item>
 </list>
 </para>
 </remarks>
 <Figure> 
 <para> For OSP-P300S: ATC Panel - CHIP PREP.</para>
 <img src="../media/Lathe.P300S.ATCPanel.jpg"/>
 </Figure>        
 <history>
 	[lhuynh]	08/27/2019	Created
 </history>
 -----------------------------------------------------------------------------
</member>
<member name="M:Okuma.CLCMDAPI.CommandAPI.CATCPanel.CallTool(System.Int32)">
 -----------------------------------------------------------------------------
 <summary>
 Transfer a tool to Setup location given pot number.
 <para>Note: This function can be called with CHIP PREP MODE ON or OFF</para>
 <para>If it is called when CHIP PREP MODE is ON then tool is still attached in ATC table and must be stored back to the magazine pot by using StoreTool() function with CHIP PREP MODE ON only. </para>
 <para>A letter R (Reserved) is displayed at the pot where tool is removed from until tool is returned to its pot.  </para>
 <para>If it is called when CHIP PREP MODE is OFF then tool will be detached from ATC table</para>
 </summary>
 <example> This example shows how to call this method.
 <code source="../ThincLathe/CATCPanelExamples.vb" region="CATCPanel Examples" language="vbnet" />
 </example>
 <param name="intPotNo">Pot number where tool to be transfered to Setup location</param>
 <exception cref="T:System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
 <exception cref="T:System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system</exception>
 <remarks>
 <para>
 Compatible Chart of this function for different OSP controls:
 <list type="table">
 <listheader>
 <term>OSP Control</term>
 <description>Compatible</description>
 </listheader>
 <item>
 <term>P100II</term>
 <description>No</description>
 </item>
 <item>
 <term>P200</term>
 <description>No</description>
 </item>
 <item>
 <term>P300L and newer controls</term>
 <description>No</description>
 </item>
 <item>
 <term>P300S/TD Mode and newer controls</term>
 <description>Yes IF NC Spec Code 2 [3,6] TMIM = ON</description>
 </item>
 <item>
 <term>P300S/TL Mode and newer controls</term>
 <description>No</description>
 </item>
 </list>
 </para>
 </remarks>
 <Figure> 
 <para> For OSP-P300S: ATC Panel - CALL</para>
 <img src="../media/Lathe.P300S.ATCPanel.jpg"/>
 </Figure>        
 <history>
 	[lhuynh]	08/27/2019	Created
 </history>
 -----------------------------------------------------------------------------
</member>
<member name="M:Okuma.CLCMDAPI.CommandAPI.CATCPanel.CallTool(System.Int32,System.Int32)">
 -----------------------------------------------------------------------------
 <summary>
 <para>When TOOL ID spec. is OFF, the function will transfer tool to Setup location given tool number.</para>
 <para>When TOOL ID spec. is ON, the function will transfer tool to Setup location given tool serial number and group number</para>
 <para>Note: This function can be called with CHIP PREP MODE ON or OFF</para>
 <para>If it is called when CHIP PREP MODE is ON then tool is still attached in ATC table and must be stored back to the magazine pot by using StoreTool() function with CHIP PREP MODE ON only. </para>
 <para>A letter R (Reserved) is displayed at the pot where tool is removed from until tool is returned to its pot.  </para>
 <para>If it is called when CHIP PREP MODE is OFF then tool will be detached from ATC table</para>
 </summary>
 <example> This example shows how to call this method.
 <code source="../ThincLathe/CATCPanelExamples.vb" region="CATCPanel Examples" language="vbnet" />
 </example>
 <param name="intToolSerialNo">
 <para>Tool number to be called when TOOL ID specification is OFF</para>
 <para>Serial number to be called when TOOL ID specification is ON</para>
 </param>
 <param name="intGroupNo">Tool Group number to be called when TOOL ID specification is ON. Set to Zero if when TOOL ID specification is OFF</param>
 <exception cref="T:System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
 <exception cref="T:System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system</exception>
 <remarks>
 <para>
 Compatible Chart of this function for different OSP controls:
 <list type="table">
 <listheader>
 <term>OSP Control</term>
 <description>Compatible</description>
 </listheader>
 <item>
 <term>P100II</term>
 <description>No</description>
 </item>
 <item>
 <term>P200</term>
 <description>No</description>
 </item>
 <item>
 <term>P300L and newer controls</term>
 <description>No</description>
 </item>
 <item>
 <term>P300S/TD Mode and newer controls</term>
 <description>Yes</description>
 </item>
 <item>
 <term>P300S/TL Mode and newer controls</term>
 <description>No</description>
 </item>
 </list>
 </para>
 </remarks>
 <Figure> 
 <para> For OSP-P300S: ATC Panel - CALL</para>
 <img src="../media/Lathe.P300S.ATCPanel.jpg"/>
 </Figure>        
 <history>
 	[lhuynh]	08/27/2019	Created
 </history>
 -----------------------------------------------------------------------------
</member>
<member name="M:Okuma.CLCMDAPI.CommandAPI.CATCPanel.StoreTool">
 -----------------------------------------------------------------------------
 <summary>
 <para>For CHIP Preparation Mode ON:</para>
 <para>The function will store the tool back to its original pot number</para>
 </summary>
 <example> This example shows how to call this method.
 <code source="../ThincLathe/CATCPanelExamples.vb" region="CATCPanel Examples" language="vbnet" />
 </example>
 <exception cref="T:System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
 <exception cref="T:System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system</exception>
 <remarks>
 <para>
 Compatible Chart of this function for different OSP controls:
 <list type="table">
 <listheader>
 <term>OSP Control</term>
 <description>Compatible</description>
 </listheader>
 <item>
 <term>P100II</term>
 <description>No</description>
 </item>
 <item>
 <term>P200</term>
 <description>No</description>
 </item>
 <item>
 <term>P300L and newer controls</term>
 <description>No</description>
 </item>
 <item>
 <term>P300S/TD Mode and newer controls</term>
 <description>Yes</description>
 </item>
 <item>
 <term>P300S/TL Mode and newer controls</term>
 <description>No</description>
 </item>
 </list>
 </para>
 </remarks>
 <Figure> 
 <para> For OSP-P300S: ATC Panel - STORAGE</para>
 <img src="../media/Lathe.P300S.ATCPanel.jpg"/>
 </Figure>        
 <history>
 	[lhuynh]	08/27/2019	Created
 </history>
 -----------------------------------------------------------------------------
</member>
<member name="M:Okuma.CLCMDAPI.CommandAPI.CATCPanel.StoreTool(System.Int32,System.Int32,Okuma.CLCMDAPI.Enumerations.SettingToolKindEnum,Okuma.CLCMDAPI.Enumerations.SettingToolSizeEnum)">
 -----------------------------------------------------------------------------
 <summary>
 <para>When CHIP Preparation Mode is OFF or TOOL-ID Spec is OFF:</para>
 <para>The function will store the specified tool number from the Setup location to the specified pot number. </para>
 <para>If tool information is already existed in Tool DATA table (registered tool but not attached to magazine) then tool information must be matched with existing tool in the table.  Tool will be attached to ATC table.</para>
 <para>If tool information is not already existed in Tool DATA table then a new tool will be created and attacthed to the ATC table based on tool information</para>
 <para></para>
 </summary>
 <example> This example shows how to call this method.
 <code source="../ThincLathe/CATCPanelExamples.vb" region="CATCPanel Examples" language="vbnet" />
 </example>
 <param name="intPotNo">
 <para>Pot number where tool number will be stored on the ATC magazine</para>
 </param>
 <param name="intToolNo">Tool number to be stored at the ATC magazine pot number</param>
 <param name="enToolKind">Tool Kind for the specified tool number</param>
 <param name="enToolSize">Tool Size for the specified tool number</param>
 <exception cref="T:System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
 <exception cref="T:System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system</exception>
 <remarks>
 <para>
 Compatible Chart of this function for different OSP controls:
 <list type="table">
 <listheader>
 <term>OSP Control</term>
 <description>Compatible</description>
 </listheader>
 <item>
 <term>P100II</term>
 <description>No</description>
 </item>
 <item>
 <term>P200</term>
 <description>No</description>
 </item>
 <item>
 <term>P300L and newer controls</term>
 <description>No</description>
 </item>
 <item>
 <term>P300S/TD Mode and newer controls</term>
 <description>Yes</description>
 </item>
 <item>
 <term>P300S/TL Mode and newer controls</term>
 <description>No</description>
 </item>
 </list>
 </para>
 </remarks>
 <Figure> 
 <para> For OSP-P300S: ATC Panel - STORAGE</para>
 <img src="../media/Lathe.P300S.ATCPanel.jpg"/>
 </Figure>        
 <history>
 [lhuynh]	08/27/2019	Created
 ATTENTION: using SettingToolSizeEnum as in other functions but it is mapped to different number in OCJ API
 </history>
 -----------------------------------------------------------------------------
</member>
<member name="M:Okuma.CLCMDAPI.CommandAPI.CATCPanel.StoreAllToolInTemporaryStations">
 -----------------------------------------------------------------------------
 <summary>
 <para>The function will transfer tools currently in the temporary stations back to its designated pot</para>
 </summary>
 <example> This example shows how to call this method.
 <code source="../ThincLathe/CATCPanelExamples.vb" region="CATCPanel Examples" language="vbnet" />
 </example>
 <exception cref="T:System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
 <exception cref="T:System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system</exception>
 <remarks>
 <para>
 Compatible Chart of this function for different OSP controls:
 <list type="table">
 <listheader>
 <term>OSP Control</term>
 <description>Compatible</description>
 </listheader>
 <item>
 <term>P100II</term>
 <description>No</description>
 </item>
 <item>
 <term>P200</term>
 <description>No</description>
 </item>
 <item>
 <term>P300L and newer controls</term>
 <description>No</description>
 </item>
 <item>
 <term>P300S/TD Mode and newer controls</term>
 <description>Yes</description>
 </item>
 <item>
 <term>P300S/TL Mode and newer controls</term>
 <description>No</description>
 </item>
 </list>
 </para>
 </remarks>
 <Figure> 
 <para> For OSP-P300S: ATC Panel - PRELOAD TRANSFER</para>
 <img src="../media/Lathe.P300S.ATCPanel.PreloadTransfer.jpg"/>
 </Figure> 
 <history>
 	[lhuynh]	08/27/2019	Created
 </history>
 -----------------------------------------------------------------------------
</member>
<member name="M:Okuma.CLCMDAPI.CommandAPI.CATCPanel.RestartATCOperations">
 -----------------------------------------------------------------------------
 <summary>
 Restart ATC operation
 [How to use]
 1.	turn on the magazine MID AUTO MANUAL MODE
 2.	execute ATC command (ATC command stops)
 3.	turn off the MG MID AUTO MANUAL MODE
 4.	execute the function RestartATCOperations
 </summary>
 <example> This example shows how to call this method.
 <code source="../ThincLathe/CATCPanelExamples.vb" region="CATCPanel Examples" language="vbnet" />
 </example>
 <exception cref="T:System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
 <exception cref="T:System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system</exception>
 <remarks>
 <para>
 Compatible Chart of this function for different OSP controls:
 <list type="table">
 <listheader>
 <term>OSP Control</term>
 <description>Compatible</description>
 </listheader>
 <item>
 <term>P100II</term>
 <description>No</description>
 </item>
 <item>
 <term>P200</term>
 <description>No</description>
 </item>
 <item>
 <term>P300L and newer controls</term>
 <description>No</description>
 </item>
 <item>
 <term>P300S/TD Mode and newer controls</term>
 <description>Yes</description>
 </item>
 <item>
 <term>P300S/TL Mode and newer controls</term>
 <description>No</description>
 </item>
 </list>
 </para>
 </remarks>
 <Figure> 
 <para> For OSP-P300S: ATC Panel - RESTART</para>
 <img src="../media/Lathe.P300S.ATCPanel.jpg"/>
 </Figure>        
 <history>
 	[lhuynh]	08/27/2019	Created
 </history>
 -----------------------------------------------------------------------------
</member>
<member name="M:Okuma.CLCMDAPI.CommandAPI.CATCPanel.ClearError">
 <summary>
 Clear error on ATC Sub panel.
 </summary>
 <example> This example shows how to call this method.
 <code source="../ThincLathe/CATCPanelExamples.vb" region="CATCPanel Examples" language="vbnet" />
 </example>
 <exception cref="T:System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
 <exception cref="T:System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
 <remarks>
 <para>
 Compatible Chart of this function for different OSP controls:
 <list type="table">
 <listheader>
 <term>OSP Control</term>
 <description>Compatible</description>
 </listheader>
 <item>
 <term>P100II</term>
 <description>No</description>
 </item>
 <item>
 <term>P200</term>
 <description>No</description>
 </item>
 <item>
 <term>P300L and newer controls</term>
 <description>No</description>
 </item>
 <item>
 <term>P300S/TD Mode and newer controls</term>
 <description>Yes</description>
 </item>
 <item>
 <term>P300S/TL Mode and newer controls</term>
 <description>Yes</description>
 </item>
 </list>
 </para>
 </remarks>
 <Figure> 
 <para> For OSP-P300S: ATC Panel - CLR</para>
 <img src="../media/Lathe.P300S.ATCPanel.jpg"/>
 </Figure>        
</member>
<member name="M:Okuma.CLCMDAPI.CommandAPI.CATCPanel.CollectNGTools">
 <summary>
 <para>call (collect) the NG tool </para>
 <para>that has been returned to the NG tool</para>
 <para>buffer station or magazine tool rack to the tool setup.</para>
 </summary>
 <example> This example shows how to call this method.
 <code source="../ThincLathe/CATCPanelExamples.vb" region="CATCPanel Examples" language="vbnet" />
 </example>
 <exception cref="T:System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
 <exception cref="T:System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
 <remarks>
 <para>
 Compatible Chart of this function for different OSP controls:
 <list type="table">
 <listheader>
 <term>OSP Control</term>
 <description>Compatible</description>
 </listheader>
 <item>
 <term>P100II</term>
 <description>No</description>
 </item>
 <item>
 <term>P200</term>
 <description>No</description>
 </item>
 <item>
 <term>P300L and newer controls</term>
 <description>No</description>
 </item>
 <item>
 <term>P300S/TD Mode and newer controls</term>
 <description>Yes</description>
 </item>
 <item>
 <term>P300S/TL Mode and newer controls</term>
 <description>No</description>
 </item>
 </list>
 </para>
 </remarks>
 <Figure> 
 <para> For OSP-P300S: TOOL DATA SETTING - MAGAZINE INFO. NG TOOL STATION 1-4</para>
 <img src="../media/P300S-NG-STATIONS.jpg"/>
 </Figure> 
</member>
<member name="T:Okuma.CLCMDAPI.CommandAPI.CBase">
 -----------------------------------------------------------------------------
 Project	 : Okuma.CLCMDAPI
 Class	 : CLCMDAPI.CommandAPI.CBase
 
 -----------------------------------------------------------------------------
 <summary>
 Base class for all classes in this library.  It should not be used or derived directly.
 It provides logging and error handling services to all derived class.
 </summary>
 <remarks>
 </remarks>
 <history>
 	[Lhuynh]	1/20/2007	Created
 </history>
 -----------------------------------------------------------------------------
</member>
<member name="F:Okuma.CLCMDAPI.CommandAPI.CBase.m_strFeatureName">
 ''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
</member>
<member name="M:Okuma.CLCMDAPI.CommandAPI.CBase.#ctor(System.String,System.String)">
 -----------------------------------------------------------------------------
 <summary>
 Create an instance of CBase class given the derived class name and ID.
 </summary>
 <param name="strClassId">Class ID</param>
 <param name="strClassName">Class Name</param>
 <remarks>
 </remarks>
 <history>
 	[Lhuynh]	1/20/2007	Created
 </history>
 -----------------------------------------------------------------------------
</member>
<member name="M:Okuma.CLCMDAPI.CommandAPI.CBase.#ctor(System.String,System.String,System.String)">
 -----------------------------------------------------------------------------
 <summary>
 Create an instance of CBase class given the derived class name and ID.
 In addition to library name, the provided logging name will be used for logging all function calls 
 </summary>
 <param name="strClassId">Class ID</param>
 <param name="strClassName">Class Name</param>
 <param name="strLoggingName">Logging Name.  Globally, the logging name will be combined with library name as the logging name for all logging messages.</param>
 <remarks>
 </remarks>
 <history>
 	[Lhuynh]	1/20/2007	Created
 </history>
 -----------------------------------------------------------------------------
</member>
<member name="M:Okuma.CLCMDAPI.CommandAPI.CBase.GetLastErrorMessage">
 <summary>
 Get the last error message
 </summary>
 <example> This example shows how to call the GetLastErrorMessage method.
 <code escaped="true" language="vbnet">
 Dim strMessage As String
 Try
     txtMessage.Text = objCMD.GetLastErrorMessage()
 Catch ae As ApplicationException
     doError("Command API", ae.Message)
 Catch ex As Exception
     doError("Command API", ex.Message)
 End Try
 </code>
 </example>
 <returns>A System.String value</returns>
 <figure>
 </figure>
</member>
<member name="M:Okuma.CLCMDAPI.CommandAPI.CBase.SetLoggingLevelToAll">
 <summary>
 Set logging level to LoggingLevelEnum.logAll for this instance
 <para>The system will not log operations having logging level above this setting level.</para>
 </summary>
 <remarks>
 Note: It is highly recommended for debugging purpose only
 Note2: All exceptions and writing operations to NC will be logged automatically
 </remarks>
</member>
<member name="M:Okuma.CLCMDAPI.CommandAPI.CBase.SetLoggingLevelToGet">
 <summary>
 Set logging level to LoggingLevelEnum.logGet for this instance.
 <para>The system will not log operations having logging level above this setting level.</para>
 </summary>
 <remarks>
 Note: It is highly recommended for debugging purpose only
 Note2: All exceptions and writing operations to NC will be logged automatically
 </remarks>
</member>
<member name="M:Okuma.CLCMDAPI.CommandAPI.CBase.SetLoggingLevelToSet">
 <summary>
 Set logging level to LoggingLevelEnum.logSet for this instance
 <para>The system will not log operations having logging level above this setting level.</para>
 </summary>
 <remarks>
 </remarks>
</member>
<member name="M:Okuma.CLCMDAPI.CommandAPI.CBase.GetLoggingLevel">
 <summary>
 Get current logging level for this instance
 </summary>
 <returns>An enumeration of LoggingLevelEnum</returns>
 <remarks></remarks>
</member>
<member name="M:Okuma.CLCMDAPI.CommandAPI.CBase.IsLTMIMSpecOn">
 <summary>
 <para> Check following spec. code:</para>
 <para> NC Spec Code 2 [3,6] TMIM for P300S or newer controls</para>
 <para> NC Spec Code 2 [27,2] LTIM for P300L or newer controls</para>
 </summary>
 <returns>
 A System.Boolean value.  It returns false if the Spec Code is off. Otherwise, it returns TRUE.
 </returns>
 <remarks>
 <para>All tool-related functions designed specifically for P300S or newer controls cannot be supported and it is automatically in TL mode when IsLTMIMSpecOn function returns FALSE. </para> 
 <para>All tool-related functions designed specifically for P300L or newer controls cannot be supported when IsLTMIMSpecOn function returns FALSE. </para> 
 </remarks>
</member>
<member name="M:Okuma.CLCMDAPI.CommandAPI.CBase.GetSubSystem(Okuma.CLCMDAPI.Enumerations.SubSystemEnum)">
 <summary>
 N/A
 </summary>
 <example> This example shows how to call the GetSubSystem method.
 <code escaped="true" language="vbnet">
 </code>
 </example>
 <param name="enValue">Sub Sytem number.</param>
 <return>A System.Short value</return>
 <figure>
 </figure>
</member>
<member name="M:Okuma.CLCMDAPI.CommandAPI.CBase.CheckLoadSaveToolDataErrorCodeP300(System.Int32,System.String)">
 -----------------------------------------------------------------------------
<summary>For internal usage only.  Check custom api error code for F command API.</summary>
<param name="intReturnErrorCode">Function Error Code.</param>
<param name="strSource">Source String</param>
<exception cref="T:System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
<exception cref="T:System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system</exception>
 <history>
 	[lhuynh]	06/10/2013	Created
 </history>
 -----------------------------------------------------------------------------
</member>
<member name="M:Okuma.CLCMDAPI.CommandAPI.CBase.CheckErrorCodeP300L(System.Int32,System.String)">
 -----------------------------------------------------------------------------
<summary>For internal usage only.  Check custom api error code for F command API.</summary>
<param name="intReturnErrorCode">Function Error Code.</param>
<param name="strSource">Source String</param>
<exception cref="T:System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
<exception cref="T:System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system</exception>
 <history>
 	[lhuynh]	06/10/2013	Created
 </history>
 -----------------------------------------------------------------------------
</member>
<member name="M:Okuma.CLCMDAPI.CommandAPI.CBase.CheckErrorCodeP300S(System.Int32,System.String)">
 -----------------------------------------------------------------------------
<summary>For internal usage only.  Check custom api error code for F command API.</summary>
<param name="intReturnErrorCode">Function Error Code.</param>
<param name="strSource">Source String</param>
<exception cref="T:System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
<exception cref="T:System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system</exception>
 <history>
 	[lhuynh]	06/10/2013	Created
 </history>
 -----------------------------------------------------------------------------
</member>
<member name="M:Okuma.CLCMDAPI.CommandAPI.CBase.CheckErrorCode(System.Int32,System.String)">
Added By Linh Huynh
 <summary>
 Check return error from custom api functions.  It is designed for internal use only.
 <para>All error codes that are less than 0 will throw A System.NotSupportedException</para>
 <para>All error codes that are greater 0 will throw A System.ApplicationException</para>
 </summary>
<param name="intReturnErrorCode">Function Error code</param>
<param name="strSource">Source string</param>
<exception cref="T:System.ApplicationException">Thrown when function fails to perform the operation .</exception>
<exception cref="T:System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system or it fails to write data to system.</exception>
<Figure> 
</Figure>
</member>
<member name="M:Okuma.CLCMDAPI.CommandAPI.CBase.ValidateControlType(System.Int32,System.Int32,System.String,Okuma.CLCMDAPI.Enumerations.ValidateLevelEnum)">
 <summary>
 Verify if the passing control type is the same current control type
 Verify if the passing control type is the same or higher current control type if blnSameOrHigher flag is true
 Verify if the current control type can be supported by the passing control types 
 Throw exception if it is not
 </summary>
 <param name="intControlType"></param>
 <param name="intFunctionErrorCode"></param>
 <param name="strSource">caller of this function</param>
 <param name="enValidateLevel">validate level type</param>
 <remarks>
 </remarks>
 <history>
 </history>
 -----------------------------------------------------------------------------
</member>
<member name="M:Okuma.CLCMDAPI.CommandAPI.CBase.ValidateControlType(System.Int32,System.String,Okuma.CLCMDAPI.Enumerations.ValidateLevelEnum)">
 <summary>
 Verify if the passing control type is the same current control type
 Verify if the passing control type is the same or higher current control type if blnSameOrHigher flag is true
 Verify if the current control type can be supported by the passing control types 
 Throw exception if it is not
 </summary>
 <param name="intControlType"></param>
 <param name="strSource">caller of this function</param>
 <param name="enValidateLevel">validate level type</param>
 <remarks>
 </remarks>
 <history>
 </history>
 -----------------------------------------------------------------------------
</member>
<member name="M:Okuma.CLCMDAPI.CommandAPI.CBase.ThrowAE(System.String,System.String)">
Added By Linh Huynh
[enter] <summary>A helper function that throw System.ApplicationException given function ID, operation message, and an error message.
 It is designed for internal use only</summary>
<param name="strMessage">String Message</param>
<param name="strError">String Error</param>
</member>
<member name="M:Okuma.CLCMDAPI.CommandAPI.CBase.ThrowNE(System.String,System.String)">
Added By Linh Huynh
[enter] <summary>A helper function that throw System.NotSupportedException given function ID, operation message, and an error message.
 It is designed for internal use only</summary>
<param name="strMessage">String Message</param>
<param name="strError">String Error</param>
</member>
<member name="M:Okuma.CLCMDAPI.CommandAPI.CBase.AllExceptionHandler(System.String,System.String@,System.Exception@)">

[enter] <summary>For internal usage only</summary>
<example> This example shows how to call the AllExceptionHandler mothod.
<code escaped="true" language="Visual Basic">
 Sample code is not available.
</code>
</example>
<param name="strFunctionName">Function Name.</param>
<param name="strParameters">Parameter String.</param>
<param name="objEx">Object Exception</param>
 <exception cref="T:System.ApplicationException">Thrown when function failes to perform the operation at current NC condition.</exception>
<exception cref="T:System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system</exception>
<Figure>
</Figure>
</member>
<member name="M:Okuma.CLCMDAPI.CommandAPI.CBase.LogExceptionMessage(System.String,System.String@,System.String@)">
 <summary>Log exception message</summary>
<example> This example shows how to call the LogExceptionMessage mothod.
<code escaped="true" language="Visual Basic">
 Not available in object browser
</code>
</example>
<param name="strFunctionName">Function Name.</param>
<param name="strParameters">Parameter String.</param>
<param name="strError">Error String.</param>
 <exception cref="T:System.ApplicationException">Thrown when function failes to perform the operation at current NC condition.</exception>
<exception cref="T:System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system</exception>
<Figure>
</Figure>
</member>
<member name="M:Okuma.CLCMDAPI.CommandAPI.CBase.LogMessage(System.String,System.String@,Okuma.CLCMDAPI.Enumerations.LoggingLevelEnum)">
 <summary>Log function name, function parameters.  This library name and name of instance of class derived from this base class is also logged.</summary>
<example> This example shows how to call the LogMessage mothod.
<code escaped="true" language="Visual Basic">
 Sample code is not available.
</code>
</example>
<param name="strFunctionName">Function Name.</param>
<param name="strParameters">Parameter String.</param>
<param name="enLoggingLevel">Logging level</param>
 <exception cref="T:System.ApplicationException">Thrown when function failes to perform the operation at current NC condition.</exception>
<exception cref="T:System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system</exception>
<Figure>
</Figure>
</member>
<member name="M:Okuma.CLCMDAPI.CommandAPI.CBase.LogMessage(System.String,System.String,System.String@,Okuma.CLCMDAPI.Enumerations.LoggingLevelEnum,System.Boolean)">
 <summary>If no error then Log message with function name, function parameter given the logging level. </summary>
<param name="strFunctionName">Function Name</param>
<param name="strParameters">Parameters</param>
<param name="strLogMessage">log message</param>
<param name="enLoggingLevel">Logging level</param>
 <exception cref="T:System.ApplicationException">Thrown when function failes to perform the operation .</exception>
<exception cref="T:System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system or it fails to write data to system.</exception>
<Figure> 
</Figure>
</member>
<member name="M:Okuma.CLCMDAPI.CommandAPI.CBase.RoundToLarger(System.Double,System.Int32)">
 -----------------------------------------------------------------------------
 <summary>
 Round to a larger number with the spceified precision
 </summary>
 <param name="dblValue"></param>
 <param name="intPrecision"></param>
 <returns>
 The closest larger double number with the specified precision
 </returns>
 <remarks>
 </remarks>
 -----------------------------------------------------------------------------
</member>
<member name="M:Okuma.CLCMDAPI.CommandAPI.CBase.ConvertUnitToInch(System.Double)">
[enter] <summary>Convert mm to inch unit</summary>
<param name="dblValue">mm Value to convert to inch</param>
<returns>A System.Double Value</returns>
<exception cref="T:System.ApplicationException">Thrown when function fails to perform the operation .</exception>
<exception cref="T:System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system or it fails to write data to system.</exception>
<Figure> 
</Figure>
</member>
<member name="M:Okuma.CLCMDAPI.CommandAPI.CBase.ConvertUnitToMM(System.Double)">
Added By Linh Huynh
[enter] <summary>Convert inch to mm unit</summary>
<param name="dblValue">inch Value to convert to mm</param>
<returns>A System.Double Value</returns>
<exception cref="T:System.ApplicationException">Thrown when function fails to perform the operation .</exception>
<exception cref="T:System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system or it fails to write data to system.</exception>
<Figure> 
</Figure>
</member>
<member name="M:Okuma.CLCMDAPI.CommandAPI.CBase.CheckErrorCodeATD(System.Int32,System.String)">
 -----------------------------------------------------------------------------
<summary>For internal usage only.  Check custom api error code for MFC command API.</summary>
<param name="intReturnErrorCode">Function Error Code.</param>
<param name="strSource">Source String</param>
<exception cref="T:System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
<exception cref="T:System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system</exception>
 <history>
 	[lhuynh]	08/02/2017	Created
 </history>
 -----------------------------------------------------------------------------
</member>
<member name="M:Okuma.CLCMDAPI.CommandAPI.CBase.CheckErrorCodePET(System.Int32,System.String)">
 -----------------------------------------------------------------------------
<summary>For internal usage only.  Check custom api error code for MFC command API.</summary>
<param name="intReturnErrorCode">Function Error Code.</param>
<param name="strSource">Source String</param>
<exception cref="T:System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
<exception cref="T:System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system</exception>
 <history>
 	[lhuynh]	10/02/2017	Created
 </history>
 -----------------------------------------------------------------------------
</member>
<member name="M:Okuma.CLCMDAPI.CommandAPI.CBase.GetPETErrorMessage(System.Int32)">
Added By Linh Huynh
[enter] <summary>Helper function to generate framework error code.  Error code scheme includes library id, class id, and error code</summary>
<param name="intErrorCode">Error Code</param>
<returns>A System.String</returns>
<exception cref="T:System.ApplicationException">Thrown when function fails to perform the operation .</exception>
<exception cref="T:System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system or it fails to write data to system.</exception>
<Figure> 
</Figure>
</member>
<member name="M:Okuma.CLCMDAPI.CommandAPI.CBase.CheckLicense(System.String,System.String,System.String,System.String)">
[enter] <summary>N/A</summary>
<example> This example shows how to call the CheckLicense method.
<code escaped="true" language="Visual Basic">
 Not available in Object Browser.
</code>
</example>
<param name="strFeatureName">License Feature Name</param>
<param name="strFeatureVersion">License Feature Version</param>
<param name="strFeatureLabel">License Feature Label.</param>
<param name="strLicensePath">License Path</param>
<exception cref="T:System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
<exception cref="T:System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system or it fails to write data to system.</exception>
<Figure>
</Figure>
</member>
<member name="M:Okuma.CLCMDAPI.CommandAPI.CBase.CreateLoggingService">
Added By Linh Huynh
[enter] <summary>Create a logging service instance</summary>
<example> This example shows how to call the CreateLoggingService method.
<code escaped="true" language="Visual Basic">
 Not available in Object Browser.
</code>
</example>
<exception cref="T:System.ApplicationException">Thrown when function fails to perform the operation .</exception>
<exception cref="T:System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system or it fails to write data to system.</exception>
<Figure> 
</Figure>
</member>
<member name="M:Okuma.CLCMDAPI.CommandAPI.CBase.GetErrorCode(System.Int32)">
Added By Linh Huynh
[enter] <summary>Helper function to generate framework error code.  Error code scheme includes library id, class id, and error code</summary>
<param name="intErrorCode">Error Code</param>
<returns>A System.String</returns>
<exception cref="T:System.ApplicationException">Thrown when function fails to perform the operation .</exception>
<exception cref="T:System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system or it fails to write data to system.</exception>
<Figure> 
</Figure>
</member>
<member name="M:Okuma.CLCMDAPI.CommandAPI.CBase.GetErrorNumberFromErrorMessage(System.String)">
Added By Linh Huynh
[enter] <summary>Helper function to extract error code number from error message</summary>
<param name="strErrorCode">String Error Code</param>
<returns>A Sytem.String</returns>
<exception cref="T:System.ApplicationException">Thrown when function fails to perform the operation .</exception>
<exception cref="T:System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system or it fails to write data to system.</exception>
<Figure> 
</Figure>
</member>
<member name="M:Okuma.CLCMDAPI.CommandAPI.CBase.GetExceptionErrorCode(System.Int32)">
Added By Linh Huynh
[enter] <summary>N/A</summary>
<param name="intErrorCode">Integer Error Code</param>
<returns>A Sytem.String</returns>
<exception cref="T:System.ApplicationException">Thrown when function fails to perform the operation .</exception>
<exception cref="T:System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system or it fails to write data to system.</exception>
<Figure> 
</Figure>
</member>
<member name="M:Okuma.CLCMDAPI.CommandAPI.CBase.GetOSPSpec">
 -----------------------------------------------------------------------------
 <summary>
 detect control type based on system registry flag
 </summary>
 <remarks>
 </remarks>
 <history>
 	[lhuynh]	4/17/2013	Created
 </history>
 -----------------------------------------------------------------------------
</member>
<member name="M:Okuma.CLCMDAPI.CommandAPI.CBase.IsFileExist(System.String)">
 <summary>
 Check if a file is exist.
 
 </summary>
 <param name="strFilePath"></param>
 <returns>Yes if file exists and the license file name will be changed to use OAC License file, named,  D:\Program files\Okuma\Licenses\okuma.api.xml</returns>
</member>
<member name="M:Okuma.CLCMDAPI.CommandAPI.CBase.CheckLicenses">
 <summary>
 Check API license by first checking OAC license.  If there is no OAC license file then then check Flexnet license file.
 If OAC license file exists, it will be validate without checking flexnet license even it fails.
 </summary>
</member>
<member name="M:Okuma.CLCMDAPI.CommandAPI.CBase.CheckOACLicenseFeature(System.Version)">
 <summary>
 
 </summary>
 <param name="objVersion"></param>
 <returns></returns>
</member>
<member name="M:Okuma.CLCMDAPI.CommandAPI.CBase.CheckOACLicenseFeatures">
 <summary>
 
 </summary>
</member>
<member name="M:Okuma.CLCMDAPI.CommandAPI.CBase.CheckOACLicense(System.String,System.String,System.String)">
 <summary>
 check API license using OAC license generator instead of Flexnet 
 OAC license can support alphanumeric serial number
 </summary>
 <param name="strFeatureName"></param>
 <param name="strFeatureVersion"></param>
 <param name="strLicensePath"></param>
</member>
<member name="M:Okuma.CLCMDAPI.CommandAPI.CP300SFCommand.SaveToolData(System.Int32,System.String,System.Boolean)">
 <summary>
 Save the tool data information given registered tool number, and the destination folder.
 </summary>
 <param name="intToolNo">Registered Tool number to be saved</param>
 <param name="strFolderPath">folder path under MD1</param>
 <param name="blnOverwrite">Overwrite the output file if it is set to TRUE</param>
 <remarks></remarks>
</member>
<member name="M:Okuma.CLCMDAPI.CommandAPI.CP300SFCommand.LoadToolData(System.Int32,System.String,System.Boolean)">
 <summary>
 Load the tool data information given tool number and file path of tool data file is located
 </summary>
 <param name="intToolNo">Tool number to be loaded into NC</param>
 <param name="strFolderPath">folder path where tool information is reading from </param>
 <param name="blnOverwrite">Overwrite the NC tool data information if it is set to TRUE</param>
 <remarks></remarks>
</member>
<member name="M:Okuma.CLCMDAPI.CommandAPI.CP300SFCommand.GetToolEdge(Okuma.CLCMDAPI.Enumerations.ToolEdgeEnum)">
 -----------------------------------------------------------------------------
 <summary>
 Valid tool edge is from 1 to 12 for multi-edges tool. Zero is for regular tool
 </summary>
 <param name="enEdgeIndex"></param>
 <returns></returns>
 <remarks>
 </remarks>
 <history>
 	[lhuynh]	9/11/2013	Created
 </history>
 -----------------------------------------------------------------------------
</member>
<member name="M:Okuma.CLCMDAPI.CommandAPI.CP300SFCommand.GetToolSize(Okuma.CLCMDAPI.Enumerations.SettingToolSizeEnum)">
 -----------------------------------------------------------------------------
 <summary>
 Tool size. 
 </summary>
 <param name="enToolSize"></param>
 <returns></returns>
 <remarks>
 Make it compatible with P200 Tool size
 </remarks>
 <history>
 	[lhuynh]	7/11/2013	Created
 </history>
 -----------------------------------------------------------------------------
</member>
<member name="M:Okuma.CLCMDAPI.CommandAPI.CP300LFCommand.ToolDataOutput(System.Int32,System.String,System.Boolean)">
 <summary>
 Save the tool data information given tool number, and the destination folder.
 </summary>
 <param name="intToolNo">Tool number to be saved</param>
 <param name="strFolderPath">folder path under MD1</param>
 <param name="blnOverwrite">Overwrite the output file if it is set to TRUE</param>
 <remarks></remarks>
</member>
<member name="M:Okuma.CLCMDAPI.CommandAPI.CP300LFCommand.ToolDataInput(System.Int32,System.String,System.Boolean)">
 <summary>
 Load the tool data information given tool number and file path of tool data file is located
 </summary>
 <param name="intToolNo">Tool number to be loaded into NC</param>
 <param name="strFolderPath">folder path where tool information is reading from </param>
 <param name="blnOverwrite">Overwrite the NC tool data information if it is set to TRUE</param>
 <remarks></remarks>
</member>
<member name="M:Okuma.CLCMDAPI.CommandAPI.CP300LFCommand.GetToolLocation(Okuma.CLCMDAPI.Enumerations.ToolLocationEnum)">
 -----------------------------------------------------------------------------
 <summary>
 Get tool location for P300 L ONLY
 </summary>
 <param name="enToolLocation"></param>
 <returns></returns>
 <remarks>
 </remarks>
 <history>
 	[lhuynh]	6/20/2013	Created
 </history>
 -----------------------------------------------------------------------------
</member>
<member name="M:Okuma.CLCMDAPI.CommandAPI.CP300LFCommand.GetToolSubSystem(Okuma.CLCMDAPI.Enumerations.ToolLocationEnum)">
 <summary>
 Get sub system based on tool location for P300 L only
 </summary>
 <example> This example shows how to call the GetSubSystem method.
 <code escaped="true" language="vbnet">
 </code>
 </example>
 <param name="enValue">Tool location where tool to be attached to</param>
 <return>A System.Short value</return>
 <figure>
 </figure>
</member>
<member name="M:Okuma.CLCMDAPI.CommandAPI.CP300LFCommand.GetToolSize(Okuma.CLCMDAPI.Enumerations.SettingToolSizeEnum)">
 -----------------------------------------------------------------------------
 <summary>
 Get Tool size for OSP-P300 L ONLY
 </summary>
 <param name="enToolSize"></param>
 <returns>Return 0 only</returns>
 <remarks>
 </remarks>
 <history>
 	[lhuynh]	6/20/2013	Created
 </history>
 -----------------------------------------------------------------------------
</member>
<member name="M:Okuma.CLCMDAPI.CommandAPI.CP300LFCommand.GetBasePositionSpindle(Okuma.CLCMDAPI.Enumerations.BasicPositionSpindleEnum)">
 -----------------------------------------------------------------------------
 <summary>
 Get Spindle for OSP-P300 L ONLY
 </summary>
 <param name="enBasicPositionSpindle"></param>
 <returns></returns>
 <remarks>
 </remarks>
 <history>
 	[lhuynh]	6/20/2013	Created
 </history>
 -----------------------------------------------------------------------------
</member>
<member name="M:Okuma.CLCMDAPI.CommandAPI.CP300LFCommand.GetBasicCuttingPositionSetting(Okuma.CLCMDAPI.Enumerations.BaseCuttingPositionSettingEnum)">
 -----------------------------------------------------------------------------
 <summary>
 Get Cutting Position for OSP-P300 L ONLY
 </summary>
 <param name="enBasicCuttingPositionSetting"></param>
 <returns>Return 0 only</returns>
 <remarks>
 </remarks>
 <history>
 	[lhuynh]	6/20/2013	Created
 </history>
 -----------------------------------------------------------------------------
</member>
<member name="T:Okuma.CLCMDAPI.CommandAPI.CMachine">
 -----------------------------------------------------------------------------
 Project	 : Okuma.CLCMDAPI
 Class	 : CLCMDAPI.CommandAPI.CMachine
 
 -----------------------------------------------------------------------------
 <summary>
 Class provides general machine operations.
 </summary>
 <remarks>
 </remarks>
 <history>
 	[Lhuynh]	1/20/2007	Created
 </history>
 -----------------------------------------------------------------------------
</member>
<member name="M:Okuma.CLCMDAPI.CommandAPI.CMachine.#ctor(System.String)">
 -----------------------------------------------------------------------------
 <summary>
 Create an instance of this class.
 In addition to library name, the provided logging name will be used for logging all function calls 
 </summary>
 <param name="strLoggingName">Logging Name.  Globally, The logging name will be combined with library name as the logging name for all logging message.</param>
 <remarks>
 </remarks>
 <history>
 	[Lhuynh]	12/4/2007	Created
 </history>
 -----------------------------------------------------------------------------
</member>
<member name="M:Okuma.CLCMDAPI.CommandAPI.CMachine.InputMDI(System.String)">
 -----------------------------------------------------------------------------
 <summary>
 Sets the Command MDI string into the MDI buffer.
 </summary>
 <example> This example shows how to Sets the Command MDI string into the MDI buffer.
 <code escaped="true" language="vbnet">
 Dim objcatc As New CATC
 Dim strMDICommand As String = "G4F100"
 objCMDMachine.InputMDI(strMDICommand)
 </code>
 </example>
 <param name="strMDICommand">MDI command</param>
 <remarks>
 After the MDI command string is inserted into the NC MDI buffer screen,  a cycle start from control is needed to execute the MDI command.
 </remarks>
 <history>
 	[Lhuynh]	11/10/2006	Created
 </history>
 -----------------------------------------------------------------------------
</member>
<member name="M:Okuma.CLCMDAPI.CommandAPI.CMachine.SetUserAlarm(Okuma.CLCMDAPI.Enumerations.UserAlarmEnum,System.String,Okuma.CLCMDAPI.Enumerations.UserAlarmSubSystemEnum)">
 -----------------------------------------------------------------------------
 <summary>
 <para>Sets user alarm given user alarm sub system</para>
 <para>Alarm Message displayed on NC-HMI will have the following format:</para>
 <para>FOR ALARM D: 4127 ALARM-D THINC Alarm + strAlarmMessage</para>
 <para>FOR ALARM C: 3127 ALARM-C THINC Alarm + strAlarmMessage</para>
 <para>FOR ALARM B: 2127 ALARM-B THINC Alarm + strAlarmMessage</para>
 </summary>
 <example> This example shows how to call the SetUserAlarm method.
 <code escaped="true" language="vbnet">
 Dim objCMDMachine As New CMachine
 Dim enAlarm As UserAlarmEnum
 Dim strAlarmMessage As String = "USER ALARM"
 Dim enValue As UserAlarmSubSystemEnum = UserAlarmSubSystemEnum.All
 objCMDMachine.SetUserAlarm(enAlarm, strAlarmMessage, enUserAlarmSubSystem)
 </code>
 </example>
 <param name="enAlarm">alarm level to be set</param>
 <param name="strAlarmMessage">alarm message to be set for this alarm level. String length must be equal to or less than 15 characters.</param>
 <param name="enUserAlarmSubSystem">User Alarm Sub System to be applied. Value of parameter comes from Okuma.CLCMDAPI.Enumerations.UserAlarmSubSystemEnum.</param>
 <exception cref="T:System.ApplicationException">Thrown when function fails to perform the operation at current NC condition</exception>
 <exception cref="T:System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system</exception>
 <remarks>
 <para>
 ********************* This function cannot be supported in OSP-P100 II machines. ************************
 </para>   
 <para>
 ********************* This function requires license feature Okuma.Lathe.UserAlarm if applicable. ************************
 </para>
 </remarks> 
 <history>
 	[Lhuynh]	10/01/2012	Created
 </history>
 -----------------------------------------------------------------------------
</member>
<member name="M:Okuma.CLCMDAPI.CommandAPI.CMachine.ClearUserAlarmD(Okuma.CLCMDAPI.Enumerations.UserAlarmSubSystemEnum)">
 -----------------------------------------------------------------------------
 <summary>
 Clear user alarm D given user alarm sub system
 </summary>
 <example> This example shows how to call the ClearUserAlarmD method.
 <code escaped="true" language="vbnet">
 Dim objMachine As New CMachine
 Dim enValue As UserAlarmSubSystemEnum = UserAlarmSubSystemEnum.All
 objmac.ClearUserAlarmD(enValue)
 </code>
 </example>
 <param name="enUserAlarmSubSystem">User Alarm Sub System to be applied. Value of parameter comes from Okuma.CLCMDAPI.Enumerations.UserAlarmSubSystemEnum.</param>
 <exception cref="T:System.ApplicationException">Thrown when function fails to perform the operation at current NC condition</exception>
 <exception cref="T:System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system</exception>
 <remarks>
 <para>
 ********************* This function cannot be supported in OSP-P100 II machines. ************************
 </para>   
 <para>
 ********************* This function requires license feature Okuma.Lathe.UserAlarm if applicable. ************************
 </para>
 </remarks> 
 <history>
 	[Lhuynh]	10/01/2012	Created
 </history>
 -----------------------------------------------------------------------------
</member>
<member name="M:Okuma.CLCMDAPI.CommandAPI.CMachine.CycleStart">
<summary>Issue a cycle start command to NC</summary>
<example> This example shows how to call the CycleStart method.
<code>
</code>
</example>
<exception cref="T:System.ApplicationException">Thrown when function fails to perform the operation .</exception>
<exception cref="T:System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system or it fails to write data to system.</exception>
<Figure> 
</Figure>
</member>
<member name="M:Okuma.CLCMDAPI.CommandAPI.CMachine.CycleStep">
<summary>N/A</summary>
<example> This example shows how to call the CycleStep method.
<code escaped="true" language="Visual Basic">
</code>
</example>
<exception cref="T:System.ApplicationException">Thrown when function fails to perform the operation .</exception>
<exception cref="T:System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system or it fails to write data to system.</exception>
<Figure> 
</Figure>
</member>
<member name="M:Okuma.CLCMDAPI.CommandAPI.CMachine.CycleStop">
<summary>N/A</summary>
<example> This example shows how to call the CycleStop method.
<code escaped="true" language="Visual Basic">
</code>
</example>
<exception cref="T:System.ApplicationException">Thrown when function fails to perform the operation .</exception>
<exception cref="T:System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system or it fails to write data to system.</exception>
<Figure> 
</Figure>
</member>
<member name="M:Okuma.CLCMDAPI.CommandAPI.CMachine.ResetNC">
<summary>N/A</summary>
<example> This example shows how to call the ResetNC method.
<code escaped="true" language="Visual Basic">
</code>
</example>
<exception cref="T:System.ApplicationException">Thrown when function fails to perform the operation .</exception>
<exception cref="T:System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system or it fails to write data to system.</exception>
<Figure> 
</Figure>
</member>
<member name="M:Okuma.CLCMDAPI.CommandAPI.CMachine.SetFeedrateOverride(System.Int32)">
<summary>Feedrate override</summary>
<example> This example shows how to call the SetFeedrateOverride method.
<code escaped="true" language="Visual Basic">
</code>
</example>
<param name="intValue">Integer Value</param>
<exception cref="T:System.ApplicationException">Thrown when function fails to perform the operation .</exception>
<exception cref="T:System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system or it fails to write data to system.</exception>
<Figure> 
</Figure>
</member>
<member name="M:Okuma.CLCMDAPI.CommandAPI.CMachine.SetSpindlerateOverride(System.Int32)">
<summary>M Spindle rate override</summary>
<example> This example shows how to call the SetSpindlerateOverride method.
<code escaped="true" language="Visual Basic">
</code>
</example>
<param name="intValue">Integer Value</param>
<exception cref="T:System.ApplicationException">Thrown when function fails to perform the operation .</exception>
<exception cref="T:System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system or it fails to write data to system.</exception>
<Figure> 
</Figure>
</member>
<member name="T:Okuma.CLCMDAPI.CommandAPI.CProgram">
 -----------------------------------------------------------------------------
 Project	 : Okuma.CLCMDAPI
 Class	 : CLCMDAPI.CommandAPI.CProgram
 
 -----------------------------------------------------------------------------
 <summary>
 Class provides general part program operations.
 </summary>
 <remarks>
 </remarks>
 <history>
 	[Lhuynh]	1/20/2007	Created
 </history>
 -----------------------------------------------------------------------------
</member>
<member name="M:Okuma.CLCMDAPI.CommandAPI.CProgram.#ctor(System.String)">
 -----------------------------------------------------------------------------
 <summary>
 Create an instance of this class.
 In addition to library name, the provided logging name will be used for logging all function calls 
 </summary>
 <param name="strLoggingName">Logging Name.  Globally, The logging name will be combined with library name as the logging name for all logging message.</param>
 <remarks>
 </remarks>
 <history>
 	[Lhuynh]	12/4/2007	Created
 </history>
 -----------------------------------------------------------------------------
</member>
<member name="M:Okuma.CLCMDAPI.CommandAPI.CProgram.SelectMainProgram(System.String,System.String,System.String,System.String)">
 <summary>
 Load the specified part program file into NC. Optionally, 
 it can also load sub routines based on sub program file name, system subtitute program file name, or a particular program name. 
 </summary>
 <example> This example shows how to call SelectMainProgram method to load part program named A.MIN in \MD1\Part2 folder.
 <code escaped="true" language="vbnet">
 Dim strMainProgramFileName As String = "A.MIN"
 Dim strSubProgramFileName As String = ""
 Dim strSystemSubstituteProgramFileName As String = ""
 Dim strProgramName As String = ""
 Dim strSubFolder As String = "\Part2\"
 Dim objCMDProgram As CProgram = New CProgram()
 if strSubFolder.Trim.Length = 0 then
     objCMDProgram.SelectMainProgram(strMainProgramFileName, strSubProgramFileName, strSystemSubtituteProgramFileName, strProgramName)
 else
     objCMDProgram.SelectMainProgram(strSubFolder + strMainProgramFileName, strSubFolder + strSubProgramFileName, strSubFolder + strSystemSubtituteProgramFileName, strProgramName)
 End If
 </code>
 </example>
 <param name="strMainProgramFileName">Main program file name to be loaded into NC</param>
 <param name="strSubProgramFileName">Sub program file name to be used for the main program if available</param>
 <param name="strSystemSubtituteProgramFileName">System Subtitute Programe file name (SSB) to be used for the main program if available</param>
 <param name="strProgramName">Program Name.  It can be specified to load a particular program name inside program file name.  Program name must be start with capital O plus 4 characters for program name such as O1234. </param>
 <exception cref="T:System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
 <exception cref="T:System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
 <remarks>
 All program files should be located in the default MD1 folder of the OSP system or in sub folder relatively to the MD1 folder.
 </remarks>
</member>
<member name="M:Okuma.CLCMDAPI.CommandAPI.CProgram.CancelMainProgram">
 <summary>
 Cancel or unload main program currently loaded in NC.  Machine must be not in Execute Mode. 
 </summary>
 <example> This example shows how to call CancelMainProgram method.
 <code escaped="true" language="vbnet">
 Dim objCmdProgram As CProgram
 objCmdProgram = New CProgram
     objCmdProgram.CancelMainProgram()
 </code>
 </example>
 <exception cref="T:System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
 <exception cref="T:System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
 <figure>
 </figure>
 <remarks>
 <para>********************* This function cannot be supported in OSP-P100 II machines. ************************</para>
 </remarks>
</member>
<member name="M:Okuma.CLCMDAPI.CommandAPI.CProgram.SelectMainProgramLSide(System.String,System.String,System.String,System.String)">
 <summary>
 Load the specified part program file into NC on left side of 2 sides machine. Optionally, 
 it can also load sub program file name, or run a particular program name. 
 </summary>
 <example> This example shows how to call SelectMainProgramLSide method.
 <code escaped="true" language="vbnet">
 Dim strMainProgramFileName As String = "A.MIN"
 Dim strSubProgramFileName As String = ""
 Dim strSystemSubstituteProgramFileName As String = ""
 Dim strProgramName As String = ""
 Dim objCMDProgram As CProgram = New CProgram()
 objCMDProgram.SelectMainProgramLSide(strMainProgramFileName, strSubProgramFileName, strSystemSubtituteProgramFileName, strProgramName)
 </code>
 </example>
 <param name="strMainProgramFileName">Main program file name to be loaded into NC</param>
 <param name="strSubProgramFileName">Sub program file name for this main program</param>
 <param name="strSystemSubtituteProgramFileName">System Subtitute Programe file name</param>
 <param name="strProgramName">Program Name.  It can be specified to load a particular program name inside program file name.  Program name must be start with capital O plus 4 characters for program name such as O1234. </param>
 <exception cref="T:System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
 <exception cref="T:System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
 <remarks>
 <para>********************* This function cannot be supported in OSP-P100 II machines. ************************</para>
 </remarks>
 <history>
 	[Lhuynh]	10/22/2007	Created
 	[Lhuynh]	3/25/2008 add control-type check routine
 </history>
 -----------------------------------------------------------------------------
</member>
<member name="M:Okuma.CLCMDAPI.CommandAPI.CProgram.SelectMainProgramRSide(System.String,System.String,System.String,System.String)">
 <summary>
 Load the specified part program file into NC on right side of 2 sides machine. Optionally, 
 it can also load sub program file name, or run a particular program name. 
 </summary>
 <example> This example shows how to call SelectMainProgramRSide method.
 <code escaped="true" language="vbnet">
 Dim strMainProgramFileName As String = "A.MIN"
 Dim strSubProgramFileName As String = ""
 Dim strSystemSubstituteProgramFileName As String = ""
 Dim strProgramName As String = ""
 Dim objCMDProgram As CProgram = New CProgram()
 objCMDProgram.SelectMainProgramRSide(strMainProgramFileName, strSubProgramFileName, strSystemSubtituteProgramFileName, strProgramName)
 </code>
 </example>
 <param name="strMainProgramFileName">Main program file name to be loaded into NC</param>
 <param name="strSubProgramFileName">Sub program file name for this main program</param>
 <param name="strSystemSubtituteProgramFileName">System Subtitute Programe file name</param>
 <param name="strProgramName">Program Name.  It can be specified to load a particular program name inside program file name.  Program name must be start with capital O plus 4 characters for program name such as O1234. </param>
 <exception cref="T:System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
 <exception cref="T:System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
 <remarks>
 <para>********************* This function cannot be supported in OSP-P100 II machines. ************************</para>
 </remarks>
 <history>
 	[Lhuynh]	10/22/2007	Created
 	[Lhuynh]	3/25/2008 add control-type check routine
 </history>
 -----------------------------------------------------------------------------
</member>
<member name="M:Okuma.CLCMDAPI.CommandAPI.CProgram.SequenceRestart(System.String,System.Int32)">
 <summary>
 Perform the sequence restart at the specified sequence number when execution of a program has been interrupted 
 during an automatic operation by tool breakage, entangled chips, or some other causes.
 The program is restarted from the block immediately before the one where the operation was interrupted.
 <para>For more information, please refer to Lathe Operation Manual - Section 5 Automatic Operation - Sequence Restart</para>
 </summary>
 <example> This example shows how to call SequenceRestart method.
 <code escaped="true" language="vbnet">
 Dim strSequence As String
 Dim intOrderNumber As Integer
 objCMDProgram.SequenceRestart(strSequence,intOrderNumber )
 </code>
 </example>
 <param name="strSequence">Sequence number or block counter. Sequence restart starts with N + 4 sequence numbers.  For example, N1234 is a sequence name.</param>
 <param name="intOrderNumber">
 The “order” when designating a sequence name is a value that specifies, in cases where 
 the same sequence number occurs a number of times in the same part program, the 
 position of the sequence number from which the sequence is to be restarted. It indicates 
 which occurrence of the sequence number - starting from the first block of the part 
 program - is the relevant one.
 </param>
 <exception cref="T:System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
 <exception cref="T:System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
 <Figure>AUTO OPERATION - RESTART SEQUENCE
 <para>
 <img src="../media/Lathe.SequenceRestart.jpg"/>
 </para>
 </Figure>
 <history>
 	[Lhuynh]	10/22/2007	Created
     Support in LCMDAPI.exe version 1.0.2.1, Lathe.dll 2.0.2.7
 </history>
</member>
<member name="M:Okuma.CLCMDAPI.CommandAPI.CProgram.SelectScheduleProgram(System.String)">
 <summary>
 Load the specified schedule part program file into NC.
 </summary>
 <example> 
 This example shows how to call the SelectScheduleProgram mothod.
 <code escaped="true" language="vbnet">
 Dim strScheduleProgramFileName As String = "A.SDF"
 Dim objCMDProgram As CProgram = New CProgram()
 objCMDProgram.SelectScheduleProgram(strScheduleProgramFileName)
 </code>
 </example>
 <param name="strScheduleProgramFileName">Schedule program file name to be loaded into NC</param>
 <exception cref="T:System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
 <exception cref="T:System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system</exception>
 <remarks>
 All files should be located in the default MD1 folder of the OSP system.
 </remarks>
 <history>
 	[Lhuynh]	10/22/2007	Created
 </history>
 -----------------------------------------------------------------------------
</member>
<member name="M:Okuma.CLCMDAPI.CommandAPI.CProgram.SelectScheduleProgramRSide(System.String)">
 <summary>
 Load the specified schedule part program file into NC for Right Side of 2 sides machine.
 </summary>
 <example> 
 This example shows how to call the SelectScheduleProgramRSide mothod.
 <code escaped="true" language="vbnet">
 Dim strScheduleProgramFileName As String = "A.SDF"
 Dim objCMDProgram As CProgram = New CProgram()
 objCMDProgram.SelectScheduleProgramRSide(strScheduleProgramFileName)
 </code>
 </example>
 <param name="strScheduleProgramFileName">Schedule program file name to be loaded into NC</param>
 <exception cref="T:System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
 <exception cref="T:System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system</exception>
 <remarks>
 <para>********************* This function cannot be supported in OSP-P100 II machines. ************************</para>
 <para>All files should be located in the default MD1 folder of the OSP system.</para>
 </remarks>
 <history>
 	[Lhuynh]	10/22/2007	Created
 	[Lhuynh]	3/25/2008 add control-type check routine
 </history>
 -----------------------------------------------------------------------------
</member>
<member name="M:Okuma.CLCMDAPI.CommandAPI.CProgram.SelectScheduleProgramLSide(System.String)">
 <summary>
 Load the specified schedule part program file into NC for Left Side of 2 sides machine.
 </summary>
 <example> 
 This example shows how to call the SelectScheduleProgramLSide mothod.
 <code escaped="true" language="vbnet">
 Dim strScheduleProgramFileName As String = "A.SDF"
 Dim objCMDProgram As CProgram = New CProgram()
 objCMDProgram.SelectScheduleProgramLSide(strScheduleProgramFileName)
 </code>
 </example>
 <param name="strScheduleProgramFileName">Schedule program file name to be loaded into NC</param>
 <exception cref="T:System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
 <exception cref="T:System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system</exception>
 <remarks>
 <para>********************* This function cannot be supported in OSP-P100 II machines. ************************</para>
 <para>All files should be located in the default MD1 folder of the OSP system.</para>
 </remarks>
 <history>
 	[Lhuynh]	10/22/2007	Created
 	[Lhuynh]	3/25/2008 add control-type check routine
 </history>
 -----------------------------------------------------------------------------
</member>
<member name="M:Okuma.CLCMDAPI.CommandAPI.CProgram.LoadATDFile(System.String)">
 <summary>
 Load the specified ATD (Attached Tool Data) file into NC.
 <para>Note: No operation mode can be changed during this operation.</para>  
 <para>Note: This function will perform an operation as one would perform the TOOLLISTLOAD on NC-HMI by selecting an ATD file to load into NC.</para>  
 </summary>
 <example> This example shows how to call LoadATDFile method.
 <code escaped="true" language="vbnet">
     Dim objCMDProgram As New CProgram
     Dim strATDFileName As String = "TEST.ATD"
     objCMDProgram.LoadATDFile(strATDFileName)
 </code>
 </example>
 <param name="strATDFileName">Load ATD file name located in MD1 folder</param>
 <exception cref="T:System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
 <exception cref="T:System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
 <Figure>TOOL DATA - TURRET INFO - TOOL LIST LOAD
 <para>
 <img src="../media/P300L.ToolData.TurretInfo.ToolListLoad-1.jpg"/>
 <para></para>
 <img src="../media/P300L.ToolData.TurretInfo.ToolListLoad-2.jpg"/>
 </para>
 </Figure>
 <remarks>
 <para>All files should be located in the default MD1 folder of the OSP system.</para>
 <para>The folllowing NC spec codes must be active on target machines:</para>
 <para>BASE OP. SCREEN NC2 [3,5] BOPS</para>
 <para>L TOOL MAC INFORM NC2 [27,2] LTIM </para>
 <para>The folllowing NC Optional parameter must be active on target machines:</para>
 <para>ATD File reading function - Optional Parameter bit: [54,5]</para>
 <para>
 Compatible Chart of this function for different OSP controls:
 <list type="table">
 <listheader>
 <term>OSP Control</term>
 <description>Compatible</description>
 </listheader>
 <item>
 <term>P300L and newer controls</term>
 <description>Yes</description>
 </item>
 </list>
 </para>
 <para>For OSP-P300 control, this function is required to operate in an exclusive mode.</para>  
 <para>NC must be not running</para>  
 <para>Tool is not in Edit mode and entering editing mode during the entire operation by any application including NC-HMI</para>  
 <para>It means it must be able to enter Edit Tool Data mode exclusively from other applications running on Windows including NC.</para>  
 <para>At any point in time only one application can be in Edit Tool Data mode</para>  
 <para> If we can lock then we can set. If we cannot lock then an error message is returned due to NC is in editing mode:</para>  
 <para> Tool operation cannot be performed while other application is currently </para>  
 <para>in Edit Tool Data mode such as Attach/Detach/Edit Tool Data/Insert Tool/Register Tool Data/Delete Tool Data or current NC running condition.</para>  
 <para>***** It is very important to acknowledge that the API locking mechanism is applied to the entired machine including all applications using THINC-API, and NC-HMI</para>  
 <para>***** As a result, if the application is performing tool operation and terminated incorrectly while API is locking, it will permanently lock the entire tool operation </para>  
 <para>***** and can only be recovered the tool operation by restarting the machine</para>   
 </remarks>
</member>
<member name="M:Okuma.CLCMDAPI.CommandAPI.CProgram.LoadPETFile(System.String,System.Boolean,System.Boolean)">
 <summary>
 <para>Load the specified PET file</para>
 <para>For P300L: NC will also load DDT and ATD files if applicable.  It will then make and transfer model data of Easy modeling.</para>   
 <para>Note: No operation mode can be changed during this operation.</para>  
 <para>Note: This function will perform an operation as one would perform the program select of PET file on IGF-DAT SEL screen as shown below.</para>  
 </summary>
 <example> This example shows how to call LoadPETFile method.
 <code escaped="true" language="vbnet">
     Dim objCMDProgram As New CProgram
     Dim strPETFileName As String = "TEST.PET"
     Dim blnLoadDDTFile As Boolean = False 
     Dim blnLoadDDTFile As Boolean = False 
     objCMDProgram.LoadPETFile(strPETFileName, blnLoadDDTFile, blnLoadDDTFile)
 </code>
 </example>
 <param name="strPETFileName">Load PET file name</param>
 <param name="blnLoadDDTFile">Optional: Load DDT file name if specified</param>
 <param name="blnLoadATDFile">Optional: Load ATD file name if specified for P300L or newer only. System will ignore if specified on P300S or newer control</param>
 <exception cref="T:System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
 <exception cref="T:System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
 <remarks>
 <para>The folllowing NC Optional parameter must be active on P300L machines for DDT and ATD to function correctly:</para>
 <para>ATD File reading function - Optional Parameter bit: [54,5]</para>
 <para>DDT needs to be in execute  on SETUP-DATA READING as shown in the selection screens below</para>
 <para>ATD needs to be in execute on TOOL LIST READING as shown in the selection screens below</para>
 <Figure>For P300S: PROGRAM SELECTION - IGF-DATA SEL. - SETUP-DATA READING
 <para>
 <img src="../media/P300S.AutoOperation.ActualPosition.ProgramSelect.IGF-DATA-SEL.jpg"/>
 </para>
 </Figure>
 <Figure>For P300L: PROGRAM SELECTION - IGF-DATA SEL. - SETUP-DATA READING
 <para>
 <img src="../media/P300L.AutoOperation.ActualPosition.ProgramSelect.IGF-DATA-SEL.jpg"/>
 </para>
 </Figure>        
 <para>
 The following specifications must be met in order to function:
 <list type="table">
 <listheader>
 <term>NC and PLC Specification</term>
 <description>Valid/Invalid</description>
 </listheader>
 <item>
 <term>BASE OP. SCREEN specification NC2 spec [3,5] (BOPS)</term>
 <description>Valid</description>
 </item>
 <item>
 <term>TOOL MAC INFORM specification NC2 spec [3,2] (TMIM)</term>
 <description>Valid for P300S and newer</description>
 </item>
 <item>
 <term>L TOOL MAC INFORM specification NC2 spec [27,2] (LTIM)</term>
 <description>Valid for P300L and newer</description>
 </item>
 <item>
 <term>ONE TOUCH IGF ADV specification NC spec [16,0] (IGFA)</term>
 <description>Valid</description>
 </item>
 <item>
 <term>PARALLEL 2 SPNDL specification NC spec [4,2] (P2SP)</term>
 <description>Valid</description>
 </item>
 </list>
 </para>
 <para>
 Compatible Chart of this function for different OSP controls:
 <list type="table">
 <listheader>
 <term>OSP Control</term>
 <description>Compatible</description>
 </listheader>
 <item>
 <term>P300L and newer controls</term>
 <description>Yes</description>
 </item>
 <item>
 <term>P300S or newer</term>
 <description>Yes</description>
 </item>
 </list>
 </para>
 <para>For OSP-P300 control, this function is required to operate in an exclusive mode.</para>  
 <para>NC must be not running</para>  
 <para>The Program operation screen must not be active. </para>  
 <para>Tool is not in Edit mode and entering editing mode during the entire operation by any application including NC-HMI</para>  
 <para>It means it must be able to enter Edit Tool Data mode exclusively from other applications running on Windows including NC.</para>  
 <para>At any point in time only one application can be in Edit Tool Data mode</para>  
 <para> If we can lock then we can set. If we cannot lock then an error message is returned due to NC is in editing mode:</para>  
 <para> Tool operation cannot be performed while other application is currently </para>  
 <para>in Edit Tool Data mode such as Attach/Detach/Edit Tool Data/Insert Tool/Register Tool Data/Delete Tool Data or current NC running condition.</para>  
 <para>***** It is very important to acknowledge that the API locking mechanism is applied to the entired machine including all applications using THINC-API, and NC-HMI</para>  
 <para>***** As a result, if the application is performing tool operation and terminated incorrectly while API is locking, it will permanently lock the entire tool operation </para>  
 <para>***** and can only be recovered the tool operation by restarting the machine</para>   
 </remarks>
</member>
<member name="T:Okuma.CLCMDAPI.CommandAPI.CSimulation">
 -----------------------------------------------------------------------------
 Project	 : Okuma.CLCMDAPI
 Class	 : CLCMDAPI.CommandAPI.CSimulation
 
 -----------------------------------------------------------------------------
 <summary>
 Class provides general graphic operations.
 </summary>
 <remarks>
 </remarks>
 <history>
 	[Lhuynh]	1/20/2007	Created
 </history>
 -----------------------------------------------------------------------------
</member>
<member name="M:Okuma.CLCMDAPI.CommandAPI.CSimulation.#ctor(System.String)">
 -----------------------------------------------------------------------------
 <summary>
 Create an instance of this class.
 In addition to library name, the provided logging name will be used for logging all function calls 
 </summary>
 <param name="strLoggingName">Logging Name.  Globally, The logging name will be combined with library name as the logging name for all logging message.</param>
 <remarks>
 </remarks>
 <history>
 	[Lhuynh]	12/4/2007	Created
 </history>
 -----------------------------------------------------------------------------
</member>
<member name="M:Okuma.CLCMDAPI.CommandAPI.CSimulation.SelectGraphLineAnimate">
 <summary>
 Selecting the specified Graph Line Animate. 
 </summary>
 <example> This example shows how to call the SelectGraphLineAnimate method.
 <code escaped="true" language="vbnet">
 Dim objSimulation As New CSimulation
 objSimulation.SelectGraphLineAnimate()
 </code>
 </example>
 <remarks>
 <para>Each call to this function will turn on the Trace/Animate mode in 2D Graphic mode as following:</para>
 <para>TRACE ON</para>
 <para>ANIMATE ON</para>
 <para>TRACE AND ANIMATE ON</para>
 <para>TRACE ON</para>
 <para>and so on</para>
 </remarks>
 <exception cref="T:System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
 <exception cref="T:System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
 <Figure>ANIMATED SIMULATION - Trace/Animate 
 <para>
 <img src="../media/Lathe.AnimateSimulation.TraceAnimate.jpg"/>
 </para>
 </Figure>
</member>
<member name="M:Okuma.CLCMDAPI.CommandAPI.CSimulation.Select2D3DGraph">
 <summary>
 Selecting the specified 2D and 3D Graph. 
 </summary>
 <example> This example shows how to call the Select2D3DGraph method.
 <code escaped="true" language="vbnet">
 Dim objSimulation As New CSimulation
 objSimulation.Select2D3DGraph()
 </code>
 </example>
 <exception cref="T:System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
 <exception cref="T:System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
 <Figure>ANIMATED SIMULATION - 2D/3D CHANGE
 <para>
 <img src="../media/Lathe.AnimateSimulation.2D3D.jpg"/>
 </para>
 </Figure>
</member>
<member name="M:Okuma.CLCMDAPI.CommandAPI.CSimulation.DeleteGraphWork">
 <summary>
 Deleting the Graph work. 
 </summary>
 <example> This example shows how to call the DeleteGraphWork method.
 <code escaped="true" language="vbnet">
 Dim objSimulation As New CSimulation
 objSimulation.DeleteGraphWork()
 </code>
 </example>
 <exception cref="T:System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
 <exception cref="T:System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
 <Figure>ANIMATED SIMULATION - CLEAR
 <para>
 <img src="../media/Lathe.AnimateSimulation.Clear.jpg"/>
 </para>
 </Figure>
</member>
<member name="M:Okuma.CLCMDAPI.CommandAPI.CSimulation.StartGraphWork">
 <summary>
 Starting the Graph work. 
 </summary>
 <example> This example shows how to call the StartGraphWork method.
 <code escaped="true" language="vbnet">
 Dim objSimulation As New CSimulation
 objSimulation.StartGraphWork()
 </code>
 </example>
 <exception cref="T:System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
 <exception cref="T:System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
 <Figure>ANIMATED SIMULATION - MATERIAL DRAWING
 <para>
 <img src="../media/Lathe.AnimateSimulation.jpg"/>
 </para>
 </Figure>
</member>
<member name="M:Okuma.CLCMDAPI.CommandAPI.CSimulation.ChangeReal3DSpindleMode">
 <summary>
 Changing the Real 3D Spindle Mode. 
 </summary>
 <example> This example shows how to call the ChangeReal3DSpindleMode method.
 <code escaped="true" language="vbnet">
 Dim objSimulation As New CSimulation
 objSimulation.ChangeReal3DSpindleMode()
 </code>
 </example>
 <exception cref="T:System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
 <exception cref="T:System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
 <Figure>ANIMATED SIMULATION(READ 3D) - Spindle-1/Spindle-2
 <para>
 <img src="../media/Lathe.AnimateSimulation.Real3DSpindleMode.jpg"/>
 </para>
 </Figure>
</member>
<member name="M:Okuma.CLCMDAPI.CommandAPI.CSimulation.AutoScaleAnimate">
 <summary>
 Enable Auto Scaling the Animation. 
 </summary>
 <example> This example shows how to call the AutoScaleAnimate method.
 <code escaped="true" language="vbnet">
 Dim objSimulation As New CSimulation
 objSimulation.AutoScaleAnimate()
 </code>
 </example>
 <exception cref="T:System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
 <exception cref="T:System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
 <Figure>ANIMATED SIMULATION - AUTO SCALE
 <para>
 <img src="../media/Lathe.AnimateSimulation.AutoScale.jpg"/>
 </para>
 </Figure>
</member>
<member name="M:Okuma.CLCMDAPI.CommandAPI.CSimulation.ChangeGraphMode(Okuma.CLCMDAPI.Enumerations.GraphModeEnum)">
 <summary>
 Change animate graph mode to normal or enlarge mode. 
 </summary>
 <example> This example shows how to call the ChangeGraphMode method.
 <code escaped="true" language="vbnet">
 Dim objSimulation As New CSimulation
 Dim enGraphMode As GraphModeEnum
 objSimulation.ChangeGraphMode(enGraphMode)
 </code>
 </example>
 <param name="enGraphMode">Animate graph mode</param>
 <exception cref="T:System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
 <exception cref="T:System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
 <Figure>ANIMATED SIMULATION - ANIMATED SIMULATION (2D GRAPHIC) - STD/ENL GRAPHIC
 <para>
 <img src="../media/Lathe.AnimateSimulation.TraceAnimate.jpg"/>
 </para>
 </Figure>
 <history>
 	[Lhuynh]	10/22/2007	Created
     Support in LCMDAPI.exe version 1.0.2.1, Lathe.dll 2.0.2.7
 </history>
</member>
<member name="M:Okuma.CLCMDAPI.CommandAPI.CSimulation.ChangeNormalScale(System.Double)">
 <summary>
 Change animate normal scale value
 </summary>
 <example> This example shows how to call the ChangeNormalScale method.
 <code escaped="true" language="vbnet">
 Dim objSimulation As New CSimulation
 Dim dblScaleValue As Double
 objSimulation.ChangeNormalScale(dblScaleValue)
 </code>
 </example>
 <param name="dblScaleValue">scale value to be set</param>
 <exception cref="T:System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
 <exception cref="T:System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
 <Figure>ANIMATED SIMULATION - ANIMATED SIMULATION (2D GRAPHIC) - NORMAL SCALE - Current Normal Scale value is 3.0000
 <para>
 <img src="../media/Lathe.AnimateSimulation.NormalEnlargeScale.jpg"/>
 </para>
 </Figure>
 <history>
 	[Lhuynh]	10/22/2007	Created
     Support in LCMDAPI.exe version 1.0.2.1, Lathe.dll 2.0.2.7
 </history>
 
</member>
<member name="M:Okuma.CLCMDAPI.CommandAPI.CSimulation.ChangeEnlargeScaleFrame(Okuma.CLCMDAPI.Enumerations.EnlargeScaleFrameEnum)">
 <summary>
 Enlarge/Reduce animate scale frame
 </summary>
 <example> This example shows how to call the ChangeEnlargeScaleFrame method.
 <code escaped="true" language="vbnet">
 Dim objSimulation As New CSimulation
 Dim enValue As EnlargeScaleFrameEnum
 objSimulation.ChangeEnlargeScaleFrame(enScale)
 </code>
 </example>
 <param name="enScaleFrame">scale frame value to be set. Value of parameter comes from Okuma.CLCMDAPI.Enumerations.EnlargeScaleFrameEnum.</param>
 <exception cref="T:System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
 <exception cref="T:System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
 <Figure>ANIMATED SIMULATION - ANIMATED SIMULATION (2D GRAPHIC) - ENLARGE SCALE
 <para>
 <img src="../media/Lathe.AnimateSimulation.EnlargeScale.jpg"/>
 </para>
 </Figure>
 <history>
 	[Lhuynh]	10/22/2007	Created
     Support in LCMDAPI.exe version 1.0.2.1, Lathe.dll 2.0.2.7
 </history>
 
</member>
<member name="M:Okuma.CLCMDAPI.CommandAPI.CSimulation.ShiftEnlargeScaleFrame(Okuma.CLCMDAPI.Enumerations.EnlargeScaleFrameShiftEnum)">
 <summary>
 Shift animate enlarge scale frame to Right/Left/Up/Down
 </summary>
 <example> This example shows how to call the ShiftEnlargeScaleFrame method.
 <code escaped="true" language="vbnet">
 Dim objSimulation As New CSimulation
 Dim enValue as EnlargeScaleFrameEnum
 objSimulation.ShiftEnlargeScaleFrame(enScale)
 </code>
 </example>
 <param name="enShift">scale frame value to be set. Value of parameter comes from Okuma.CLCMDAPI.Enumerations.EnlargeScaleFrameEnum.</param>
 <exception cref="T:System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
 <exception cref="T:System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
 <Figure>ANIMATED SIMULATION - ANIMATED SIMULATION (2D GRAPHIC) - ENLARGE SCALE
 <para>
 <img src="../media/Lathe.AnimateSimulation.EnlargeScale.jpg"/>
 </para>
 </Figure>
 <history>
 	[Lhuynh]	10/22/2007	Created
     Support in LCMDAPI.exe version 1.0.2.1, Lathe.dll 2.0.2.7
 </history>
 
</member>
<member name="T:Okuma.CLCMDAPI.CommandAPI.CSpec">
 -----------------------------------------------------------------------------
 Project	 : Okuma.CLCMDAPI
 Class	 : CLCMDAPI.CommandAPI.CSpec
 
 -----------------------------------------------------------------------------
 <summary>
 Class provides general machine specification.
 </summary>
 <remarks>
 </remarks>
 <history>
 	[Lhuynh]	1/20/2007	Created
 </history>
 -----------------------------------------------------------------------------
</member>
<member name="M:Okuma.CLCMDAPI.CommandAPI.CSpec.GetControlType">
 -----------------------------------------------------------------------------
 <summary>
 Get control type of machine
 </summary>
 <example> This sample shows how to call the GetControlType method.
 <para>Dim objSpec As new CSpec </para>
 <para>Dim enValue As ControlTypeEnum </para>
 <para>	enValue = objSpec.GetControlType() </para>
 </example>
 <returns>A ControlTypeEnum value.  </returns>
 <history>
 	[lhuynh]	10/18/2015	Created
 </history>
 -----------------------------------------------------------------------------
</member>
<member name="M:Okuma.CLCMDAPI.CommandAPI.CSpec.#ctor(System.String)">
 -----------------------------------------------------------------------------
 <summary>
 Create an instance of this class.
 In addition to library name, the provided logging name will be used for logging all function calls 
 </summary>
 <param name="strLoggingName">Logging Name.  Globally, The logging name will be combined with library name as the logging name for all logging message.</param>
 <remarks>
 </remarks>
 <history>
 	[Lhuynh]	12/4/2007	Created
 </history>
 -----------------------------------------------------------------------------
</member>
<member name="M:Okuma.CLCMDAPI.CommandAPI.CSpec.GetInterfaceVersion">
 <summary>
 Get the current version of this library.
 </summary>
 <example> This example shows how to call the GetInterfaceVersion method.
 <code escaped="true" language="vbnet">
 Dim curSpecEnum As OptionSpecEnum
 Try
     Me.specSaddleSpec.Text = objSpec.Get2SaddleSpec
     specInterfaceVersion.Text = objCMDSpec.GetInterfaceVersion()
 Catch ae As ApplicationException
     doError("CSpec", ae.Message)
 Catch ex As Exception
     doError("CSpec", ex.Message)
 End Try
 </code>
 </example>
 <returns>A System.String value that represents the version of this library.  Version format: Major.Minor.Build.Revision </returns>
 <figure>
 </figure>
</member>
<member name="M:Okuma.CLCMDAPI.CommandAPI.CSpec.GetSpec(Okuma.CLCMDAPI.Enumerations.OSPSpecEnum)">
 <summary>
 Get the current state of given OSP spec. enum value
 </summary>
 <param name="enSpec">OSP specification</param>
 <returns>A System.Boolean value.  It returns TRUE if spec is active, otherwise it returns false.</returns>
</member>
<member name="T:Okuma.CLCMDAPI.CommandAPI.CTools">
 -----------------------------------------------------------------------------
 Project	 : Okuma.CLCMDAPI
 Class	 : CLCMDAPI.CommandAPI.CTools
 
 -----------------------------------------------------------------------------
 <summary>
 Class provides tool offset/Nose Radius Compensation operations.
 </summary>
 <remarks>
 </remarks>
 <history>
 	[Lhuynh]	1/20/2007	Created
 </history>
 -----------------------------------------------------------------------------
</member>
<member name="M:Okuma.CLCMDAPI.CommandAPI.CTools.#ctor(System.String)">
 -----------------------------------------------------------------------------
 <summary>
 Create an instance of this class.
 In addition to library name, the provided logging name will be used for logging all function calls 
 </summary>
 <param name="strLoggingName">Logging Name.  Globally, The logging name will be combined with library name as the logging name for all logging message.</param>
 <remarks>
 </remarks>
 <history>
 	[Lhuynh]	12/4/2007	Created
 </history>
 -----------------------------------------------------------------------------
</member>
<member name="M:Okuma.CLCMDAPI.CommandAPI.CTools.SetDataUnit(Okuma.CLCMDAPI.Enumerations.DataUnitEnum)">
 <summary>Sets current data unit for this class instance.</summary>
 <example> This example shows how to call the SetDataUnit method.
 <code escaped="true" language="vbnet">
 Dim objTools As New CTools
 objTools.SetDataUnit(DataUnitEnum.Unit_Inch)
 </code>
 </example>
 <param name="enValue">Data Unit to be set</param>
 <exception cref="T:System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
 <exception cref="T:System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
 <remarks>
 If applicable, this setting is applied to data in this class instance only, not for NC Data Unit.
 For example: If NC Data unit is set to mm, and the data unit for this class instance is in inch, 
 then offset value will be converted to inch from NC offset data and vice versa.
 </remarks>
 <Figure> DATA SET UNIT - Data Unit in mm or inch.  This is for NC Data only. 
 <para>
 <img src="../media/ParametersScreen.DataUnit.jpg"/>
 </para>
 </Figure>
</member>
<member name="M:Okuma.CLCMDAPI.CommandAPI.CTools.AddConstantToolOffset(System.Int32,Okuma.CLCMDAPI.Enumerations.OffsetAxisIndexEnum,Okuma.CLCMDAPI.Enumerations.SubSystemEnum)">
 <overloads>This method, AddConstantToolOffset, has 2 overload methods for adding constant tool offset value</overloads>
 <summary>
 Adding a constant value, set with a related parameter, from the tool offset value at the specified offset index.
 </summary>
 <DataUnit>
  Data unit is current setting of NC Data Unit.
 </DataUnit>
 <example> This example shows how to call the AddConstantToolOffset method.
 <code escaped="true" language="vbnet">
 Dim objTools As New CTools
 Dim intOffsetNo As Integer
 Dim enAxisIndex As OffsetAxisIndexEnum
 Dim enSubSystem As SubSystemEnum
 objTools.AddConstantToolOffset(intOffsetNo, enAxisIndex, enSubSystem)
 </code>
 </example>
 <param name="intOffsetNo">Offset number.</param>
 <param name="enAxisIndex">Axis Index. Value of parameter comes from Okuma.CLCMDAPI.Enumerations.OffsetAxisIndexEnum.</param>
 <param name="enSubSystem">Sub System. Value of parameter comes from Okuma.CLCMDAPI.Enumerations.SubSystemEnum.</param>
 <exception cref="T:System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
 <exception cref="T:System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
 <Figure>TOOL OFFSET/NOSE R COMPENSATION - TOOL OFFSET - CONST ADD. 0.012 FOR INDEX 1, X AXIS, B Turret
 <para>
 <img src="../media/Lathe.ToolOffset.AddConst.BTurret.jpg"/>
 </para>
 </Figure>
 <remarks>
 <para> Add/Sub constant value depends on parameter setting as shown below:</para>
 <Figure>TOOL OFFSET/NOSE R COMPENSATION - PARAMETER SETTING  
 <para>
 <img src="../media/Lathe.ToolOffset.NoseRComp.AddSub.ParameterSetting.jpg"/>
 </para>
 </Figure>
 <para>
 Compatible Chart of this function for different OSP controls:
 <list type="table">
 <listheader>
 <term>OSP Control</term>
 <description>Compatible</description>
 </listheader>
 <item>
 <term>P100II</term>
 <description>Yes</description>
 </item>
 <item>
 <term>P200</term>
 <description>Yes</description>
 </item>
 <item>
 <term>P300L and newer controls</term>
 <description>Yes</description>
 </item>
 <item>
 <term>P300S/TD Mode and newer controls</term>
 <description>Yes IF NC Spec Code 2 [3,6] TMIM = OFF</description>
 </item>
 <item>
 <term>P300S/TL Mode and newer controls</term>
 <description>Yes</description>
 </item>
 </list>
 </para>
 </remarks>
</member>
<member name="M:Okuma.CLCMDAPI.CommandAPI.CTools.AddConstantNoseRadiusCompensation(System.Int32,Okuma.CLCMDAPI.Enumerations.OffsetAxisIndex2Enum,Okuma.CLCMDAPI.Enumerations.SubSystemEnum)">
 <overloads>This method, AddConstantNoseRadiusCompensation, has 2 overload methods for adding constant Nose Radius Compensation value</overloads>
 <summary>
 Adding a constant value, set with a related parameter, from the compensation value at the specified offset index.
 </summary>
 <DataUnit>
  Data unit is current setting of NC Data Unit.
 </DataUnit>
 <example> This example shows how to call the AddConstantNoseRadiusCompensation method.
 <code escaped="true" language="vbnet">
 Dim objTools As New CTools
 Dim intOffsetNo As Integer
 Dim enAxisIndex As OffsetAxisIndex2Enum
 Dim enSubSystem As SubSystemEnum
 objTools.AddConstantNoseRadiusCompensation(intOffsetNo, enAxisIndex, enSubSystem)
 </code>
 </example>
 <param name="intOffsetNo">Offset number.</param>
 <param name="enAxisIndex">Axis Index. Value of parameter comes from Okuma.CLCMDAPI.Enumerations.OffsetAxisIndex2Enum.</param>
 <param name="enSubSystem">Sub System. Value of parameter comes from Okuma.CLCMDAPI.Enumerations.SubSystemEnum.</param>
 <exception cref="T:System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
 <exception cref="T:System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
 <Figure>TOOL OFFSET/NOSE R COMPENSATION - NOSE R COMPENSATION - CONST ADD. 0.012 FOR INDEX 1, X AXIS, B Turret
 <para>
 <img src="../media/Lathe.NoseRComp.AddConst.BTurret.jpg"/>
 </para>
 </Figure>
 <remarks>
 <para> Add/Sub constant value depends on parameter setting as shown below:</para>
 <Figure>TOOL OFFSET/NOSE R COMPENSATION - PARAMETER SETTING  
 <para>
 <img src="../media/Lathe.ToolOffset.NoseRComp.AddSub.ParameterSetting.jpg"/>
 </para>
 </Figure>
 <para>
 Compatible Chart of this function for different OSP controls:
 <list type="table">
 <listheader>
 <term>OSP Control</term>
 <description>Compatible</description>
 </listheader>
 <item>
 <term>P100II</term>
 <description>Yes</description>
 </item>
 <item>
 <term>P200</term>
 <description>Yes</description>
 </item>
 <item>
 <term>P300L and newer controls</term>
 <description>Yes</description>
 </item>
 <item>
 <term>P300S/TD Mode and newer controls</term>
 <description>Yes IF NC Spec Code 2 [3,6] TMIM = OFF</description>
 </item>
 <item>
 <term>P300S/TL Mode and newer controls</term>
 <description>Yes</description>
 </item>
 </list>
 </para>
 </remarks>
</member>
<member name="M:Okuma.CLCMDAPI.CommandAPI.CTools.AddConstantToolWear(System.Int32,Okuma.CLCMDAPI.Enumerations.OffsetAxisIndex2Enum,Okuma.CLCMDAPI.Enumerations.SubSystemEnum)">
 <overloads>This method, AddConstantToolWear, has 2 overload methods for adding constant Tool Wear value</overloads>
 <summary>
 Adding a constant value, set with a related parameter, from the tool wear value at the specified offset index.
 </summary>
 <DataUnit>
  Data unit is current setting of NC Data Unit.
 </DataUnit>
 <example> This example shows how to call the AddConstantToolWear method.
 <code escaped="true" language="vbnet">
 Dim objTools As New CTools
 Dim intOffsetNo As Integer
 Dim enAxisIndex As OffsetAxisIndex2Enum
 Dim enSubSystem As SubSystemEnum
 objTools.AddConstantToolWear(intOffsetNo, enAxisIndex, enSubSystem)
 </code>
 </example>
 <param name="intOffsetNo">Offset number.</param>
 <param name="enAxisIndex">Axis Index. Value of parameter comes from Okuma.CLCMDAPI.Enumerations.OffsetAxisIndex2Enum.</param>
 <param name="enSubSystem">Sub System. Value of parameter comes from Okuma.CLCMDAPI.Enumerations.SubSystemEnum.</param>
 <exception cref="T:System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
 <exception cref="T:System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
 <Figure>TOOL WEAR OFFSET - CONST ADD. 0.012 FOR INDEX 1, X AXIS, B Turret
 <para>
 <img src="../media/Lathe.ToolWear.AddConst.BTurret.jpg"/>
 </para>
 </Figure>
 <remarks>
 <para> Add/Sub constant value depends on parameter setting as shown below:</para>
 <Figure>TOOL OFFSET/NOSE R COMPENSATION - PARAMETER SETTING  
 <para>
 <img src="../media/Lathe.ToolOffset.NoseRComp.AddSub.ParameterSetting.jpg"/>
 </para>
 </Figure>
 <para>
 Compatible Chart of this function for different OSP controls:
 <list type="table">
 <listheader>
 <term>OSP Control</term>
 <description>Compatible</description>
 </listheader>
 <item>
 <term>P100II</term>
 <description>Yes</description>
 </item>
 <item>
 <term>P200</term>
 <description>Yes</description>
 </item>
 <item>
 <term>P300L and newer controls</term>
 <description>Yes</description>
 </item>
 <item>
 <term>P300S/TD Mode and newer controls</term>
 <description>Yes IF NC Spec Code 2 [3,6] TMIM = OFF</description>
 </item>
 <item>
 <term>P300S/TL Mode and newer controls</term>
 <description>Yes</description>
 </item>
 </list>
 </para>
 </remarks>
</member>
<member name="M:Okuma.CLCMDAPI.CommandAPI.CTools.SubtractConstantToolOffset(System.Int32,Okuma.CLCMDAPI.Enumerations.OffsetAxisIndexEnum,Okuma.CLCMDAPI.Enumerations.SubSystemEnum)">
 <overloads>This method, SubtractConstantToolOffset, has 2 overload methods for subtracting constant Tool Offset value</overloads>
 <summary>
 Subtracts a constant value, set with a related parameter, from the tool offset value at the specified offset index.
 </summary>
 <example> This example shows how to call the SubtractConstantToolOffset method.
 <code escaped="true" language="vbnet">
 Dim objTools As New CTools
 Dim intOffsetNo As Integer
 Dim enAxisIndex As OffsetAxisIndexEnum
 Dim enSubSystem As SubSystemEnum
 objTools.SubtractConstantToolOffset(intOffsetNo, enAxisIndex, enSubSystem, enCuttingPosition)
 </code>
 </example>
 <param name="intOffsetNo">Offset number.</param>
 <param name="enAxisIndex">Axis Index. Value of parameter comes from Okuma.CLCMDAPI.Enumerations.OffsetAxisIndexEnum.</param>
 <param name="enSubSystem">Sub System. Value of parameter comes from Okuma.CLCMDAPI.Enumerations.SubSystemEnum.</param>
 <exception cref="T:System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
 <exception cref="T:System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
 <Figure>TOOL OFFSET/NOSE R COMPENSATION - TOOL OFFSET - CONST SUB. 0.012 FOR INDEX 1, X Axis, B Turret
 <para>
 <img src="../media/Lathe.ToolOffset.SubConst.BTurret.jpg"/>
 </para>
 </Figure>
 <remarks>
 <para> Add/Sub constant value depends on parameter setting as shown below:</para>
 <Figure>TOOL OFFSET/NOSE R COMPENSATION - PARAMETER SETTING  
 <para>
 <img src="../media/Lathe.ToolOffset.NoseRComp.AddSub.ParameterSetting.jpg"/>
 </para>
 </Figure>
 <para>
 Compatible Chart of this function for different OSP controls:
 <list type="table">
 <listheader>
 <term>OSP Control</term>
 <description>Compatible</description>
 </listheader>
 <item>
 <term>P100II</term>
 <description>Yes</description>
 </item>
 <item>
 <term>P200</term>
 <description>Yes</description>
 </item>
 <item>
 <term>P300L and newer controls</term>
 <description>Yes</description>
 </item>
 <item>
 <term>P300S/TD Mode and newer controls</term>
 <description>Yes IF NC Spec Code 2 [3,6] TMIM = OFF</description>
 </item>
 <item>
 <term>P300S/TL Mode and newer controls</term>
 <description>Yes</description>
 </item>
 </list>
 </para>
 </remarks>
</member>
<member name="M:Okuma.CLCMDAPI.CommandAPI.CTools.SubtractConstantNoseRadiusCompensation(System.Int32,Okuma.CLCMDAPI.Enumerations.OffsetAxisIndex2Enum,Okuma.CLCMDAPI.Enumerations.SubSystemEnum)">
 <overloads>This method, SubtractConstantNoseRadiusCompensation, has 2 overload methods for subtracting constant Nose Radius Compensation value</overloads>
 <summary>
 Subtracts a constant value, set with a related parameter, from the compensation value at the specified offset index.
 </summary>
 <example> This example shows how to call the SubtractConstantNoseRadiusCompensation method.
 <code escaped="true" language="vbnet">
 Dim objTools As New CTools
 Dim intOffsetNo As Integer
 Dim enAxisIndex As OffsetAxisIndex2Enum
 Dim enSubSystem As SubSystemEnum
 objTools.SubtractConstantNoseRadiusCompensation(intOffsetNo, enAxisIndex, enSubSystem)
 </code>
 </example>
 <param name="intOffsetNo">Offset number.</param>
 <param name="enAxisIndex">Axis Index. Value of parameter comes from Okuma.CLCMDAPI.Enumerations.OffsetAxisIndex2Enum.</param>
 <param name="enSubSystem">Sub System. Value of parameter comes from Okuma.CLCMDAPI.Enumerations.SubSystemEnum.</param>
 <exception cref="T:System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
 <exception cref="T:System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
 <Figure>TOOL OFFSET/NOSE R COMPENSATION - NOSE-R COMPENSATION - CONST SUB. 0.012 FOR INDEX 1, X AXIS, B Turret
 <para>
 <img src="../media/Lathe.NoseRComp.SubConst.BTurret.jpg"/>
 </para>
 </Figure>
 <remarks>
 <para> Add/Sub constant value depends on parameter setting as shown below:</para>
 <Figure>TOOL OFFSET/NOSE R COMPENSATION - PARAMETER SETTING  
 <para>
 <img src="../media/Lathe.ToolOffset.NoseRComp.AddSub.ParameterSetting.jpg"/>
 </para>
 </Figure>
 <para>
 Compatible Chart of this function for different OSP controls:
 <list type="table">
 <listheader>
 <term>OSP Control</term>
 <description>Compatible</description>
 </listheader>
 <item>
 <term>P100II</term>
 <description>Yes</description>
 </item>
 <item>
 <term>P200</term>
 <description>Yes</description>
 </item>
 <item>
 <term>P300L and newer controls</term>
 <description>Yes</description>
 </item>
 <item>
 <term>P300S/TD Mode and newer controls</term>
 <description>Yes IF NC Spec Code 2 [3,6] TMIM = OFF</description>
 </item>
 <item>
 <term>P300S/TL Mode and newer controls</term>
 <description>Yes</description>
 </item>
 </list>
 </para>
 </remarks>
</member>
<member name="M:Okuma.CLCMDAPI.CommandAPI.CTools.SubtractConstantToolWear(System.Int32,Okuma.CLCMDAPI.Enumerations.OffsetAxisIndex2Enum,Okuma.CLCMDAPI.Enumerations.SubSystemEnum)">
 <overloads>This method, SubtractConstantToolWear, has 2 overload methods for subtracting constant Tool Wear value</overloads>
 <summary>
 Subtracts a constant value, set with a related parameter, from the compensation value at the specified offset index.
 </summary>
 <example> This example shows how to call the SubtractConstantToolWear method.
 <code escaped="true" language="vbnet">
 Dim objTools As New CTools
 Dim intOffsetNo As Integer
 Dim enAxisIndex As OffsetAxisIndex2Enum
 Dim enSubSystem As SubSystemEnum
 objTools.SubtractConstantToolWear(intOffsetNo, enAxisIndex, enSubSystem)
 </code>
 </example>
 <param name="intOffsetNo">Offset number.</param>
 <param name="enAxisIndex">Axis Index. Value of parameter comes from Okuma.CLCMDAPI.Enumerations.OffsetAxisIndex2Enum.</param>
 <param name="enSubSystem">Sub System. Value of parameter comes from Okuma.CLCMDAPI.Enumerations.SubSystemEnum.</param>
 <exception cref="T:System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
 <exception cref="T:System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
 <Figure>TOOL WEAR OFFSET - CONST SUB. 0.012 FOR INDEX 1, X AXIS, B Turret
 <para>
 <img src="../media/Lathe.ToolWear.SubConst.BTurret.jpg"/>
 </para>
 </Figure>
 <remarks>
 <para> Add/Sub constant value depends on parameter setting as shown below:</para>
 <Figure>TOOL OFFSET/NOSE R COMPENSATION - PARAMETER SETTING  
 <para>
 <img src="../media/Lathe.ToolOffset.NoseRComp.AddSub.ParameterSetting.jpg"/>
 </para>
 </Figure>
 <para>
 Compatible Chart of this function for different OSP controls:
 <list type="table">
 <listheader>
 <term>OSP Control</term>
 <description>Compatible</description>
 </listheader>
 <item>
 <term>P100II</term>
 <description>Yes</description>
 </item>
 <item>
 <term>P200</term>
 <description>Yes</description>
 </item>
 <item>
 <term>P300L and newer controls</term>
 <description>Yes</description>
 </item>
 <item>
 <term>P300S/TD Mode and newer controls</term>
 <description>Yes IF NC Spec Code 2 [3,6] TMIM = OFF</description>
 </item>
 <item>
 <term>P300S/TL Mode and newer controls</term>
 <description>Yes</description>
 </item>
 </list>
 </para>
 </remarks>
</member>
<member name="M:Okuma.CLCMDAPI.CommandAPI.CTools.CalculateToolOffset(System.Int32,Okuma.CLCMDAPI.Enumerations.OffsetAxisIndexEnum,Okuma.CLCMDAPI.Enumerations.SubSystemEnum,System.Double)">
 <summary>
 Determines the offset value based on the input value and actual position.
 </summary>
 <DataUnit>
  Data unit is current setting of NC Data Unit.
 </DataUnit>
 <example> This example shows how to call the CalculateToolOffset method.
 <code escaped="true" language="vbnet">
 Dim objTools As New CTools
 Dim intOffsetNo As Integer
 Dim enAxisIndex As OffsetAxisIndexEnum
 Dim enSubSystem As SubSystemEnum
 Dim dblValue As Double
 objTools.CalculateToolOffset(intOffsetNo, enAxisIndex, enSubSystem, dblValue)
 </code>
 </example>
 <param name="intOffsetNo">Offset number.</param>
 <param name="enAxisIndex">Axis Index. Value of parameter comes from Okuma.CLCMDAPI.Enumerations.OffsetAxisIndexEnum.</param>
 <param name="enSubSystem">Sub System. Value of parameter comes from Okuma.CLCMDAPI.Enumerations.SubSystemEnum.</param>
 <param name="dblValue">Input value to be calculated from</param>
 <exception cref="T:System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
 <exception cref="T:System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
 <Figure>TOOL OFFSET/NOSE R COMPENSATION - CAL FOR INDEX 1, X AXIS, A Turret
 <para>
 <img src="../media/Lathe.ToolOffset.Cal.ATurret.jpg"/>
 </para>
 </Figure>
 <remarks>
 <para>********************* This function cannot be supported in OSP-P100 II machines. ************************</para>
 <para>The internal calculation in the NC is as follows: </para>
 <para>Tool offset value = Calculated value (actual tool position relative to machine zero) - Zero offset value - Input value (value measured with a micrometer) </para>
 <para>
 Compatible Chart of this function for different OSP controls:
 <list type="table">
 <listheader>
 <term>OSP Control</term>
 <description>Compatible</description>
 </listheader>
 <item>
 <term>P100II</term>
 <description>No</description>
 </item>
 <item>
 <term>P200</term>
 <description>Yes</description>
 </item>
 <item>
 <term>P300L and newer controls</term>
 <description>Yes</description>
 </item>
 <item>
 <term>P300S/TD Mode and newer controls</term>
 <description>Yes IF NC Spec Code 2 [3,6] TMIM = OFF</description>
 </item>
 <item>
 <term>P300S/TL Mode and newer controls</term>
 <description>Yes</description>
 </item>
 </list>
 </para>
 </remarks>
 <history>
 	[Lhuynh]	10/22/2007	Created
 	[Lhuynh]	3/25/2008 add control-type check routine
 </history>
 -----------------------------------------------------------------------------
</member>
<member name="M:Okuma.CLCMDAPI.CommandAPI.CTools.OneTouchCalculateToolOffset(System.Int32,Okuma.CLCMDAPI.Enumerations.OffsetAxisIndex2Enum,Okuma.CLCMDAPI.Enumerations.SubSystemEnum)">
 <summary>
 Performs one-touch calculation of tool offset values. 
 </summary>
 <DataUnit>
  Data unit is current setting of NC Data Unit.
 </DataUnit>
 <example> This example shows how to call the OneTouchCalculateToolOffset method.
 <code escaped="true" language="vbnet">
 Dim objTools As New CTools
 Dim intOffsetNo As Integer
 Dim enAxisIndex As OffsetAxisIndex2Enum
 Dim enSubSystem As SubSystemEnum
 objTools.OneTouchCalculateToolOffset(intOffsetNo, enAxisIndex, enSubSystem)
 </code>
 </example>
 <param name="intOffsetNo">Offset number.</param>
 <param name="enAxisIndex">Axis Index. Value of parameter comes from Okuma.CLCMDAPI.Enumerations.OffsetAxisIndex2Enum.</param>
 <param name="enSubSystem">Sub System. Value of parameter comes from Okuma.CLCMDAPI.Enumerations.SubSystemEnum.</param>
 <exception cref="T:System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
 <exception cref="T:System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
 <Figure>TOOL OFFSET/NOSE R COMPENSATION - ONE TOUCH CAL FOR INDEX 1, X AXIS, CUTTING POSITION BASE A
 <para>
 <img src="../media/Lathe.ToolOffset.MeasureAutoCal.jpg"/>
 </para>
 </Figure>
 <remarks>
 <para>
 Compatible Chart of this function for different OSP controls:
 <list type="table">
 <listheader>
 <term>OSP Control</term>
 <description>Compatible</description>
 </listheader>
 <item>
 <term>P100II</term>
 <description>Yes</description>
 </item>
 <item>
 <term>P200</term>
 <description>Yes</description>
 </item>
 <item>
 <term>P300L and newer controls</term>
 <description>Yes</description>
 </item>
 <item>
 <term>P300S/TD Mode and newer controls</term>
 <description>Yes IF NC Spec Code 2 [3,6] TMIM = OFF</description>
 </item>
 <item>
 <term>P300S/TL Mode and newer controls</term>
 <description>Yes</description>
 </item>
 </list>
 </para>
 </remarks>
</member>
<member name="M:Okuma.CLCMDAPI.CommandAPI.CTools.MeasureCalculateToolOffset(System.Int32,Okuma.CLCMDAPI.Enumerations.OffsetAxisIndex2Enum,Okuma.CLCMDAPI.Enumerations.SensorDirectionEnum,Okuma.CLCMDAPI.Enumerations.SubSystemEnum)">
 <summary>
 Tool offset Measurement operation is carried out.
 </summary>
 <example> This example shows how to call the MeasureCalculateToolOffset method.
 <code escaped="true" language="vbnet">
 Dim objTools As New CTools
 Dim intOffsetNo As Integer
 Dim enAxisIndex As OffsetAxisIndex2Enum
 Dim enSensorDirection As SensorDirectionEnum
 Dim enSubSystem As SubSystemEnum
 Dim dblValue As Double
 objTools.CalculateToolOffset(intOffsetNo, enAxisIndex, enSubSystem, dblValue)
 </code>
 </example>
 <param name="intOffsetNo">Offset number.</param>
 <param name="enAxisIndex">Axis Index. Value of parameter comes from Okuma.CLCMDAPI.Enumerations.OffsetAxisIndex2Enum.</param>
 <param name="enSensorDirection">Sensor Direction. Value of parameter comes from Okuma.CLCMDAPI.Enumerations.SensorDirectionEnum.</param>
 <param name="enSubSystem">Sub System. Value of parameter comes from Okuma.CLCMDAPI.Enumerations.SubSystemEnum.</param>
 <exception cref="T:System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
 <exception cref="T:System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
 <Figure>TOOL OFFSET/NOSE R COMPENSATION - CAL FOR INDEX 1, X AXIS, CUTTING POSITION BASE A
 <para>
 <img src="../media/Lathe.ToolOffset.MeasureAutoCal.jpg"/>
 </para>
 <para> SENSOR TOUCH SURFACE
 <img src="../media/Lathe.ToolOffset.MeasureCal.Sensor.jpg"/>
 </para>        
 </Figure>
 <remarks>
 <para>
 Compatible Chart of this function for different OSP controls:
 <list type="table">
 <listheader>
 <term>OSP Control</term>
 <description>Compatible</description>
 </listheader>
 <item>
 <term>P100II</term>
 <description>Yes</description>
 </item>
 <item>
 <term>P200</term>
 <description>Yes</description>
 </item>
 <item>
 <term>P300L and newer controls</term>
 <description>Yes</description>
 </item>
 <item>
 <term>P300S/TD Mode and newer controls</term>
 <description>Yes IF NC Spec Code 2 [3,6] TMIM = OFF</description>
 </item>
 <item>
 <term>P300S/TL Mode and newer controls</term>
 <description>Yes</description>
 </item>
 </list>
 </para>
 </remarks>
</member>
<member name="M:Okuma.CLCMDAPI.CommandAPI.CTools.AddConstantToolOffset(System.Int32,Okuma.CLCMDAPI.Enumerations.OffsetAxisIndexEnum,Okuma.CLCMDAPI.Enumerations.SubSystemEnum,Okuma.CLCMDAPI.Enumerations.CuttingPositionEnum)">
 <summary>
 For Tool Offset Multi-System function, Adding a constant value, set with a related parameter, from the tool offset value at the specified offset index, and cutting position.
 </summary>
 <DataUnit>
  Data unit is current setting of NC Data Unit.
 </DataUnit>
 <example> This example shows how to call the AddConstantToolOffset method.
 <code escaped="true" language="vbnet">
 Dim objTools As New CTools
 Dim intOffsetNo As Integer
 Dim enAxisIndex As OffsetAxisIndexEnum
 Dim enSubSystem As SubSystemEnum
 Dim enCuttingPosition As CuttingPositionEnum
 objTools.AddConstantToolOffset(intOffsetNo, enAxisIndex, enSubSystem, enCuttingPosition)
 </code>
 </example>
 <param name="intOffsetNo">Offset number.</param>
 <param name="enAxisIndex">Axis Index. Value of parameter comes from Okuma.CLCMDAPI.Enumerations.OffsetAxisIndexEnum.</param>
 <param name="enSubSystem">Sub System. Value of parameter comes from Okuma.CLCMDAPI.Enumerations.SubSystemEnum.</param>
 <param name="enCuttingPosition">Cutting postion. Value of parameter comes from Okuma.CLCMDAPI.Enumerations.CuttingPositionEnum.</param>
 <exception cref="T:System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
 <exception cref="T:System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
 <Figure>TOOL OFFSET/NOSE R COMPENSATION - TOOL OFFSET - CONST ADD. 0.012 FOR INDEX 1, YI AXIS, CUTTING POSITION BASE A
 <para>
 <img src="../media/Lathe.Multi.ToolOffset.AddConst.jpg"/>
 </para>
 </Figure>
 <remarks>
 <para>********************* This function cannot be supported in OSP-P100 II machines. ************************</para>
 <para> Add/Sub constant value depends on parameter setting as shown below:</para>
 <Figure>TOOL OFFSET/NOSE R COMPENSATION - PARAMETER SETTING  
 <para>
 <img src="../media/Lathe.ToolOffset.NoseRComp.AddSub.ParameterSetting.jpg"/>
 </para>
 </Figure>
 
 <para>
 The following specifications for cutting position PrincipalAxis1_BaseA must be met in order to function:
 <list type="table">
 <listheader>
 <term>Specification</term>
 <description>Valid/Invalid</description>
 </listheader>
 <item>
 <term>tool offset multi-system specification NC spec [21,6] </term>
 <description>Valid</description>
 </item>
 </list>
 </para>

 <para>
 The following specifications for cutting position PrincipalAxis1_BaseB must be met in order to function:
 <list type="table">
 <listheader>
 <term>Specification</term>
 <description>Valid/Invalid</description>
 </listheader>
 <item>
 <term>tool offset multi-system specification NC spec [21,6] </term>
 <description>Valid</description>
 </item>
 <item>
 <term>L Tool index specification NC spec [3,4]</term>
 <description>Valid</description>
 </item>
 </list>
 </para>

 <para>
 The following specifications for cutting position PrincipalAxis1_VerticalA must be met in order to function:
 <list type="table">
 <listheader>
 <term>Specification</term>
 <description>Valid/Invalid</description>
 </listheader>
 <item>
 <term>tool offset multi-system specification NC spec [21,6] </term>
 <description>Valid</description>
 </item>
 </list>
 </para>

 <para>
 The following specifications for cutting position PrincipalAxis1_VerticalB must be met in order to function:
 <list type="table">
 <listheader>
 <term>Specification</term>
 <description>Valid/Invalid</description>
 </listheader>
 <item>
 <term>tool offset multi-system specification NC spec [21,6] </term>
 <description>Valid</description>
 </item>
 <item>
 <term>L Tool index specification NC spec [3,4]</term>
 <description>Valid</description>
 </item>
 </list>
 </para>

 <para>
 The following specifications for cutting position PrincipalAxis2_BaseA must be met in order to function:
 <list type="table">
 <listheader>
 <term>Specification</term>
 <description>Valid/Invalid</description>
 </listheader>
 <item>
 <term>tool offset multi-system specification NC spec [21,6] </term>
 <description>Valid</description>
 </item>
 <item>
 <term>Sub spindle specification NC spec [4,1]</term>
 <description>Valid</description>
 </item>
 </list>
 </para>

 <para>
 The following specifications for cutting position PrincipalAxis2_BaseB must be met in order to function:
 <list type="table">
 <listheader>
 <term>Specification</term>
 <description>Valid/Invalid</description>
 </listheader>
 <item>
 <term>tool offset multi-system specification NC spec [21,6] </term>
 <description>Valid</description>
 </item>
 <item>
 <term>L Tool index specification NC spec [3,4]</term>
 <description>Valid</description>
 </item>
 <item>
 <term>Sub spindle specification NC spec [4,1]</term>
 <description>Valid</description>
 </item>
 </list>
 </para>

 <para>
 The following specifications for cutting position PrincipalAxis2_VerticalA must be met in order to function:
 <list type="table">
 <listheader>
 <term>Specification</term>
 <description>Valid/Invalid</description>
 </listheader>
 <item>
 <term>tool offset multi-system specification NC spec [21,6] </term>
 <description>Valid</description>
 </item>
 <item>
 <term>Sub spindle specification NC spec [4,1]</term>
 <description>Valid</description>
 </item>
 </list>
 </para>

 <para>
 The following specifications for cutting position PrincipalAxis2_VerticalB must be met in order to function:
 <list type="table">
 <listheader>
 <term>Specification</term>
 <description>Valid/Invalid</description>
 </listheader>
 <item>
 <term>tool offset multi-system specification NC spec [21,6] </term>
 <description>Valid</description>
 </item>
 <item>
 <term>L Tool index specification NC spec [3,4]</term>
 <description>Valid</description>
 </item>
 <item>
 <term>Sub spindle specification NC spec [4,1]</term>
 <description>Valid</description>
 </item>
 </list>
 </para>
 <para>
 Compatible Chart of this function for different OSP controls:
 <list type="table">
 <listheader>
 <term>OSP Control</term>
 <description>Compatible</description>
 </listheader>
 <item>
 <term>P100II</term>
 <description>No</description>
 </item>
 <item>
 <term>P200</term>
 <description>Yes</description>
 </item>
 <item>
 <term>P300L and newer controls</term>
 <description>Yes</description>
 </item>
 <item>
 <term>P300S/TD Mode and newer controls</term>
 <description>Yes IF NC Spec Code 2 [3,6] TMIM = OFF</description>
 </item>
 <item>
 <term>P300S/TL Mode and newer controls</term>
 <description>Yes</description>
 </item>
 </list>
 </para>
 </remarks>
 <history>
 	[Lhuynh]	10/22/2007	Created
 	[Lhuynh]	3/25/2008 add control-type check routine
 </history>
 -----------------------------------------------------------------------------
</member>
<member name="M:Okuma.CLCMDAPI.CommandAPI.CTools.AddConstantNoseRadiusCompensation(System.Int32,Okuma.CLCMDAPI.Enumerations.OffsetAxisIndex2Enum,Okuma.CLCMDAPI.Enumerations.SubSystemEnum,Okuma.CLCMDAPI.Enumerations.CuttingPositionEnum)">
 <summary>
 For Tool Offset Multi-System function, Adding a constant value, set with a related parameter, from the compensation value at the specified offset index, and cutting position.
 </summary>
 <DataUnit>
  Data unit is current setting of NC Data Unit.
 </DataUnit>
 <example> This example shows how to call the AddConstantNoseRadiusCompensation method.
 <code escaped="true" language="vbnet">
 Dim objTools As New CTools
 Dim intOffsetNo As Integer
 Dim enAxisIndex As OffsetAxisIndex2Enum
 Dim enSubSystem As SubSystemEnum
 Dim enCuttingPosition As CuttingPositionEnum
 objTools.AddConstantNoseRadiusCompensation(intOffsetNo, enAxisIndex, enSubSystem, enCuttingPosition)
 </code>
 </example>
 <param name="intOffsetNo">Offset number.</param>
 <param name="enAxisIndex">Axis Index. Value of parameter comes from Okuma.CLCMDAPI.Enumerations.OffsetAxisIndex2Enum.</param>
 <param name="enSubSystem">Sub System. Value of parameter comes from Okuma.CLCMDAPI.Enumerations.SubSystemEnum.</param>
 <param name="enCuttingPosition">Cutting postion. Value of parameter comes from Okuma.CLCMDAPI.Enumerations.CuttingPositionEnum.</param>
 <exception cref="T:System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
 <exception cref="T:System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
 <Figure>TOOL OFFSET/NOSE R COMPENSATION - NOSE R COMPENSATION - CONST ADD. 0.012 FOR INDEX 1, X AXIS, CUTTING POSITION BASE A
 <para>
 <img src="../media/Lathe.Multi.NoseRComp.AddConst.jpg"/>
 </para>
 </Figure>
 <remarks>
 <para>********************* This function cannot be supported in OSP-P100 II machines. ************************</para>
 <para> Add/Sub constant value depends on parameter setting as shown below:</para>
 <Figure>TOOL OFFSET/NOSE R COMPENSATION - PARAMETER SETTING  
 <para>
 <img src="../media/Lathe.ToolOffset.NoseRComp.AddSub.ParameterSetting.jpg"/>
 </para>
 </Figure>

 <para>
 The following specifications for cutting position PrincipalAxis1_BaseA must be met in order to function:
 <list type="table">
 <listheader>
 <term>Specification</term>
 <description>Valid/Invalid</description>
 </listheader>
 <item>
 <term>tool offset multi-system specification NC spec [21,6] </term>
 <description>Valid</description>
 </item>
 </list>
 </para>

 <para>
 The following specifications for cutting position PrincipalAxis1_BaseB must be met in order to function:
 <list type="table">
 <listheader>
 <term>Specification</term>
 <description>Valid/Invalid</description>
 </listheader>
 <item>
 <term>tool offset multi-system specification NC spec [21,6] </term>
 <description>Valid</description>
 </item>
 <item>
 <term>L Tool index specification NC spec [3,4]</term>
 <description>Valid</description>
 </item>
 </list>
 </para>

 <para>
 The following specifications for cutting position PrincipalAxis1_VerticalA must be met in order to function:
 <list type="table">
 <listheader>
 <term>Specification</term>
 <description>Valid/Invalid</description>
 </listheader>
 <item>
 <term>tool offset multi-system specification NC spec [21,6] </term>
 <description>Valid</description>
 </item>
 </list>
 </para>

 <para>
 The following specifications for cutting position PrincipalAxis1_VerticalB must be met in order to function:
 <list type="table">
 <listheader>
 <term>Specification</term>
 <description>Valid/Invalid</description>
 </listheader>
 <item>
 <term>tool offset multi-system specification NC spec [21,6] </term>
 <description>Valid</description>
 </item>
 <item>
 <term>L Tool index specification NC spec [3,4]</term>
 <description>Valid</description>
 </item>
 </list>
 </para>

 <para>
 The following specifications for cutting position PrincipalAxis2_BaseA must be met in order to function:
 <list type="table">
 <listheader>
 <term>Specification</term>
 <description>Valid/Invalid</description>
 </listheader>
 <item>
 <term>tool offset multi-system specification NC spec [21,6] </term>
 <description>Valid</description>
 </item>
 <item>
 <term>Sub spindle specification NC spec [4,1]</term>
 <description>Valid</description>
 </item>
 </list>
 </para>

 <para>
 The following specifications for cutting position PrincipalAxis2_BaseB must be met in order to function:
 <list type="table">
 <listheader>
 <term>Specification</term>
 <description>Valid/Invalid</description>
 </listheader>
 <item>
 <term>tool offset multi-system specification NC spec [21,6] </term>
 <description>Valid</description>
 </item>
 <item>
 <term>L Tool index specification NC spec [3,4]</term>
 <description>Valid</description>
 </item>
 <item>
 <term>Sub spindle specification NC spec [4,1]</term>
 <description>Valid</description>
 </item>
 </list>
 </para>

 <para>
 The following specifications for cutting position PrincipalAxis2_VerticalA must be met in order to function:
 <list type="table">
 <listheader>
 <term>Specification</term>
 <description>Valid/Invalid</description>
 </listheader>
 <item>
 <term>tool offset multi-system specification NC spec [21,6] </term>
 <description>Valid</description>
 </item>
 <item>
 <term>Sub spindle specification NC spec [4,1]</term>
 <description>Valid</description>
 </item>
 </list>
 </para>

 <para>
 The following specifications for cutting position PrincipalAxis2_VerticalB must be met in order to function:
 <list type="table">
 <listheader>
 <term>Specification</term>
 <description>Valid/Invalid</description>
 </listheader>
 <item>
 <term>tool offset multi-system specification NC spec [21,6] </term>
 <description>Valid</description>
 </item>
 <item>
 <term>L Tool index specification NC spec [3,4]</term>
 <description>Valid</description>
 </item>
 <item>
 <term>Sub spindle specification NC spec [4,1]</term>
 <description>Valid</description>
 </item>
 </list>
 </para>
 <para>
 Compatible Chart of this function for different OSP controls:
 <list type="table">
 <listheader>
 <term>OSP Control</term>
 <description>Compatible</description>
 </listheader>
 <item>
 <term>P100II</term>
 <description>No</description>
 </item>
 <item>
 <term>P200</term>
 <description>Yes</description>
 </item>
 <item>
 <term>P300L and newer controls</term>
 <description>Yes</description>
 </item>
 <item>
 <term>P300S/TD Mode and newer controls</term>
 <description>Yes IF NC Spec Code 2 [3,6] TMIM = OFF</description>
 </item>
 <item>
 <term>P300S/TL Mode and newer controls</term>
 <description>Yes</description>
 </item>
 </list>
 </para>
 </remarks>
 <history>
 	[Lhuynh]	10/22/2007	Created
 	[Lhuynh]	3/25/2008 add control-type check routine
 </history>
 -----------------------------------------------------------------------------
</member>
<member name="M:Okuma.CLCMDAPI.CommandAPI.CTools.AddConstantToolWear(System.Int32,Okuma.CLCMDAPI.Enumerations.OffsetAxisIndex2Enum,Okuma.CLCMDAPI.Enumerations.SubSystemEnum,Okuma.CLCMDAPI.Enumerations.CuttingPositionEnum)">
 <summary>
 For Tool Offset Multi-System function, Adding a constant value, set with a related parameter, from the tool wear offset value at the specified offset index, and cutting position.
 </summary>
 <DataUnit>
  Data unit is current setting of NC Data Unit.
 </DataUnit>
 <example> This example shows how to call the AddConstantToolWear method.
 <code escaped="true" language="vbnet">
 Dim objTools As New CTools
 Dim intOffsetNo As Integer
 Dim enAxisIndex As OffsetAxisIndex2Enum
 Dim enSubSystem As SubSystemEnum
 Dim enCuttingPosition As CuttingPositionEnum
 objTools.AddConstantToolWear(intOffsetNo, enAxisIndex, enSubSystem)
 </code>
 </example>
 <param name="intOffsetNo">Offset number.</param>
 <param name="enAxisIndex">Axis Index. Value of parameter comes from Okuma.CLCMDAPI.Enumerations.OffsetAxisIndex2Enum.</param>
 <param name="enSubSystem">Sub System. Value of parameter comes from Okuma.CLCMDAPI.Enumerations.SubSystemEnum.</param>
 <param name="enCuttingPosition">Cutting postion. Value of parameter comes from Okuma.CLCMDAPI.Enumerations.CuttingPositionEnum.</param>
 <exception cref="T:System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
 <exception cref="T:System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
 <Figure>TOOL WEAR OFFSET - CONST ADD. 0.012 FOR X AXIS, CUTTING POSITION BASE A
 <para>
 <img src="../media/Lathe.Multi.ToolWear.AddConst.jpg"/>
 </para>
 </Figure>
 <remarks>
 <para>********************* This function cannot be supported in OSP-P100 II machines. ************************</para>
 <para> Add/Sub constant value depends on parameter setting as shown below:</para>
 <Figure>TOOL OFFSET/NOSE R COMPENSATION - PARAMETER SETTING  
 <para>
 <img src="../media/Lathe.ToolOffset.NoseRComp.AddSub.ParameterSetting.jpg"/>
 </para>
 </Figure>

 <para>
 The following specifications for cutting position PrincipalAxis1_BaseA must be met in order to function:
 <list type="table">
 <listheader>
 <term>Specification</term>
 <description>Valid/Invalid</description>
 </listheader>
 <item>
 <term>Tool wear compensation specification NC spec [21,5]</term>
 <description>Valid</description>
 </item>
 <item>
 <term>tool offset multi-system specification NC spec [21,6] </term>
 <description>Valid</description>
 </item>
 </list>
 </para>

 <para>
 The following specifications for cutting position PrincipalAxis1_BaseB must be met in order to function:
 <list type="table">
 <listheader>
 <term>Specification</term>
 <description>Valid/Invalid</description>
 </listheader>
 <item>
 <term>Tool wear compensation specification NC spec [21,5]</term>
 <description>Valid</description>
 </item>
 <item>
 <term>tool offset multi-system specification NC spec [21,6] </term>
 <description>Valid</description>
 </item>
 <item>
 <term>L Tool index specification NC spec [3,4]</term>
 <description>Valid</description>
 </item>
 </list>
 </para>

 <para>
 The following specifications for cutting position PrincipalAxis1_VerticalA must be met in order to function:
 <list type="table">
 <listheader>
 <term>Specification</term>
 <description>Valid/Invalid</description>
 </listheader>
 <item>
 <term>Tool wear compensation specification NC spec [21,5]</term>
 <description>Valid</description>
 </item>
 <item>
 <term>tool offset multi-system specification NC spec [21,6] </term>
 <description>Valid</description>
 </item>
 </list>
 </para>

 <para>
 The following specifications for cutting position PrincipalAxis1_VerticalB must be met in order to function:
 <list type="table">
 <listheader>
 <term>Specification</term>
 <description>Valid/Invalid</description>
 </listheader>
 <item>
 <term>Tool wear compensation specification NC spec [21,5]</term>
 <description>Valid</description>
 </item>
 <item>
 <term>tool offset multi-system specification NC spec [21,6] </term>
 <description>Valid</description>
 </item>
 <item>
 <term>L Tool index specification NC spec [3,4]</term>
 <description>Valid</description>
 </item>
 </list>
 </para>

 <para>
 The following specifications for cutting position PrincipalAxis2_BaseA must be met in order to function:
 <list type="table">
 <listheader>
 <term>Specification</term>
 <description>Valid/Invalid</description>
 </listheader>
 <item>
 <term>Tool wear compensation specification NC spec [21,5]</term>
 <description>Valid</description>
 </item>
 <item>
 <term>tool offset multi-system specification NC spec [21,6] </term>
 <description>Valid</description>
 </item>
 <item>
 <term>Sub spindle specification NC spec [4,1]</term>
 <description>Valid</description>
 </item>
 </list>
 </para>

 <para>
 The following specifications for cutting position PrincipalAxis2_BaseB must be met in order to function:
 <list type="table">
 <listheader>
 <term>Specification</term>
 <description>Valid/Invalid</description>
 </listheader>
 <item>
 <term>Tool wear compensation specification NC spec [21,5]</term>
 <description>Valid</description>
 </item>
 <item>
 <term>tool offset multi-system specification NC spec [21,6] </term>
 <description>Valid</description>
 </item>
 <item>
 <term>L Tool index specification NC spec [3,4]</term>
 <description>Valid</description>
 </item>
 <item>
 <term>Sub spindle specification NC spec [4,1]</term>
 <description>Valid</description>
 </item>
 </list>
 </para>

 <para>
 The following specifications for cutting position PrincipalAxis2_VerticalA must be met in order to function:
 <list type="table">
 <listheader>
 <term>Specification</term>
 <description>Valid/Invalid</description>
 </listheader>
 <item>
 <term>Tool wear compensation specification NC spec [21,5]</term>
 <description>Valid</description>
 </item>
 <item>
 <term>tool offset multi-system specification NC spec [21,6] </term>
 <description>Valid</description>
 </item>
 <item>
 <term>Sub spindle specification NC spec [4,1]</term>
 <description>Valid</description>
 </item>
 </list>
 </para>

 <para>
 The following specifications for cutting position PrincipalAxis2_VerticalB must be met in order to function:
 <list type="table">
 <listheader>
 <term>Specification</term>
 <description>Valid/Invalid</description>
 </listheader>
 <item>
 <term>Tool wear compensation specification NC spec [21,5]</term>
 <description>Valid</description>
 </item>
 <item>
 <term>tool offset multi-system specification NC spec [21,6] </term>
 <description>Valid</description>
 </item>
 <item>
 <term>L Tool index specification NC spec [3,4]</term>
 <description>Valid</description>
 </item>
 <item>
 <term>Sub spindle specification NC spec [4,1]</term>
 <description>Valid</description>
 </item>
 </list>
 </para>
 <para>
 Compatible Chart of this function for different OSP controls:
 <list type="table">
 <listheader>
 <term>OSP Control</term>
 <description>Compatible</description>
 </listheader>
 <item>
 <term>P100II</term>
 <description>No</description>
 </item>
 <item>
 <term>P200</term>
 <description>Yes</description>
 </item>
 <item>
 <term>P300L and newer controls</term>
 <description>Yes</description>
 </item>
 <item>
 <term>P300S/TD Mode and newer controls</term>
 <description>Yes IF NC Spec Code 2 [3,6] TMIM = OFF</description>
 </item>
 <item>
 <term>P300S/TL Mode and newer controls</term>
 <description>Yes</description>
 </item>
 </list>
 </para>
 </remarks>
 <history>
 	[Lhuynh]	10/22/2007	Created
 	[Lhuynh]	3/25/2008 add control-type check routine
 </history>
 -----------------------------------------------------------------------------
</member>
<member name="M:Okuma.CLCMDAPI.CommandAPI.CTools.SubtractConstantToolOffset(System.Int32,Okuma.CLCMDAPI.Enumerations.OffsetAxisIndexEnum,Okuma.CLCMDAPI.Enumerations.SubSystemEnum,Okuma.CLCMDAPI.Enumerations.CuttingPositionEnum)">
 <summary>
 For Tool Offset Multi-System function, Subtracts a constant value, set with a related parameter, from the tool offset value at the specified offset index, and cutting position.
 </summary>
 <example> This example shows how to call the SubtractConstantToolOffset method.
 <code escaped="true" language="vbnet">
 Dim objTools As New CTools
 Dim intOffsetNo As Integer
 Dim enAxisIndex As OffsetAxisIndexEnum
 Dim enSubSystem As SubSystemEnum
 Dim enCuttingPosition As CuttingPositionEnum
 objTools.SubtractConstantToolOffset(intOffsetNo, enAxisIndex, enSubSystem, enCuttingPosition)
 </code>
 </example>
 <param name="intOffsetNo">Offset number.</param>
 <param name="enAxisIndex">Axis Index. Value of parameter comes from Okuma.CLCMDAPI.Enumerations.OffsetAxisIndexEnum.</param>
 <param name="enSubSystem">Sub System. Value of parameter comes from Okuma.CLCMDAPI.Enumerations.SubSystemEnum.</param>
 <param name="enCuttingPosition">Cutting postion. Value of parameter comes from Okuma.CLCMDAPI.Enumerations.CuttingPositionEnum.</param>
 <exception cref="T:System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
 <exception cref="T:System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
 <Figure>TOOL OFFSET/NOSE R COMPENSATION - TOOL OFFSET - CONST SUB. 0.012 FOR INDEX 1, YI AXIS, CUTTING POSITION BASE A
 <para>
 <img src="../media/Lathe.Multi.ToolOffset.SubConst.jpg"/>
 </para>
 </Figure>
 <remarks>
 <para>********************* This function cannot be supported in OSP-P100 II machines. ************************</para>
 <para> Add/Sub constant value depends on parameter setting as shown below:</para>
 <Figure>TOOL OFFSET/NOSE R COMPENSATION - PARAMETER SETTING  
 <para>
 <img src="../media/Lathe.ToolOffset.NoseRComp.AddSub.ParameterSetting.jpg"/>
 </para>
 </Figure>
 
 <para>
 The following specifications for cutting position PrincipalAxis1_BaseA must be met in order to function:
 <list type="table">
 <listheader>
 <term>Specification</term>
 <description>Valid/Invalid</description>
 </listheader>
 <item>
 <term>tool offset multi-system specification NC spec [21,6] </term>
 <description>Valid</description>
 </item>
 </list>
 </para>

 <para>
 The following specifications for cutting position PrincipalAxis1_BaseB must be met in order to function:
 <list type="table">
 <listheader>
 <term>Specification</term>
 <description>Valid/Invalid</description>
 </listheader>
 <item>
 <term>tool offset multi-system specification NC spec [21,6] </term>
 <description>Valid</description>
 </item>
 <item>
 <term>L Tool index specification NC spec [3,4]</term>
 <description>Valid</description>
 </item>
 </list>
 </para>

 <para>
 The following specifications for cutting position PrincipalAxis1_VerticalA must be met in order to function:
 <list type="table">
 <listheader>
 <term>Specification</term>
 <description>Valid/Invalid</description>
 </listheader>
 <item>
 <term>tool offset multi-system specification NC spec [21,6] </term>
 <description>Valid</description>
 </item>
 </list>
 </para>

 <para>
 The following specifications for cutting position PrincipalAxis1_VerticalB must be met in order to function:
 <list type="table">
 <listheader>
 <term>Specification</term>
 <description>Valid/Invalid</description>
 </listheader>
 <item>
 <term>tool offset multi-system specification NC spec [21,6] </term>
 <description>Valid</description>
 </item>
 <item>
 <term>L Tool index specification NC spec [3,4]</term>
 <description>Valid</description>
 </item>
 </list>
 </para>

 <para>
 The following specifications for cutting position PrincipalAxis2_BaseA must be met in order to function:
 <list type="table">
 <listheader>
 <term>Specification</term>
 <description>Valid/Invalid</description>
 </listheader>
 <item>
 <term>tool offset multi-system specification NC spec [21,6] </term>
 <description>Valid</description>
 </item>
 <item>
 <term>Sub spindle specification NC spec [4,1]</term>
 <description>Valid</description>
 </item>
 </list>
 </para>

 <para>
 The following specifications for cutting position PrincipalAxis2_BaseB must be met in order to function:
 <list type="table">
 <listheader>
 <term>Specification</term>
 <description>Valid/Invalid</description>
 </listheader>
 <item>
 <term>tool offset multi-system specification NC spec [21,6] </term>
 <description>Valid</description>
 </item>
 <item>
 <term>L Tool index specification NC spec [3,4]</term>
 <description>Valid</description>
 </item>
 <item>
 <term>Sub spindle specification NC spec [4,1]</term>
 <description>Valid</description>
 </item>
 </list>
 </para>

 <para>
 The following specifications for cutting position PrincipalAxis2_VerticalA must be met in order to function:
 <list type="table">
 <listheader>
 <term>Specification</term>
 <description>Valid/Invalid</description>
 </listheader>
 <item>
 <term>tool offset multi-system specification NC spec [21,6] </term>
 <description>Valid</description>
 </item>
 <item>
 <term>Sub spindle specification NC spec [4,1]</term>
 <description>Valid</description>
 </item>
 </list>
 </para>

 <para>
 The following specifications for cutting position PrincipalAxis2_VerticalB must be met in order to function:
 <list type="table">
 <listheader>
 <term>Specification</term>
 <description>Valid/Invalid</description>
 </listheader>
 <item>
 <term>tool offset multi-system specification NC spec [21,6] </term>
 <description>Valid</description>
 </item>
 <item>
 <term>L Tool index specification NC spec [3,4]</term>
 <description>Valid</description>
 </item>
 <item>
 <term>Sub spindle specification NC spec [4,1]</term>
 <description>Valid</description>
 </item>
 </list>
 </para>
 <para>
 Compatible Chart of this function for different OSP controls:
 <list type="table">
 <listheader>
 <term>OSP Control</term>
 <description>Compatible</description>
 </listheader>
 <item>
 <term>P100II</term>
 <description>No</description>
 </item>
 <item>
 <term>P200</term>
 <description>Yes</description>
 </item>
 <item>
 <term>P300L and newer controls</term>
 <description>Yes</description>
 </item>
 <item>
 <term>P300S/TD Mode and newer controls</term>
 <description>Yes IF NC Spec Code 2 [3,6] TMIM = OFF</description>
 </item>
 <item>
 <term>P300S/TL Mode and newer controls</term>
 <description>Yes</description>
 </item>
 </list>
 </para>
 </remarks>
</member>
<member name="M:Okuma.CLCMDAPI.CommandAPI.CTools.SubtractConstantNoseRadiusCompensation(System.Int32,Okuma.CLCMDAPI.Enumerations.OffsetAxisIndex2Enum,Okuma.CLCMDAPI.Enumerations.SubSystemEnum,Okuma.CLCMDAPI.Enumerations.CuttingPositionEnum)">
 <summary>
 For Tool Offset Multi-System function, Subtracts a constant value, set with a related parameter, from the compensation value at the specified offset index, and cutting position.
 </summary>
 <example> This example shows how to call the SubtractConstantNoseRadiusCompensation method.
 <code escaped="true" language="vbnet">
 Dim objTools As New CTools
 Dim intOffsetNo As Integer
 Dim enAxisIndex As OffsetAxisIndex2Enum
 Dim enSubSystem As SubSystemEnum
 Dim enCuttingPosition As CuttingPositionEnum
 objTools.SubtractConstantNoseRadiusCompensation(intOffsetNo, enAxisIndex, enSubSystem, enCuttingPosition)
 </code>
 </example>
 <param name="intOffsetNo">Offset number.</param>
 <param name="enAxisIndex">Axis Index. Value of parameter comes from Okuma.CLCMDAPI.Enumerations.OffsetAxisIndex2Enum.</param>
 <param name="enSubSystem">Sub System. Value of parameter comes from Okuma.CLCMDAPI.Enumerations.SubSystemEnum.</param>
 <param name="enCuttingPosition">Cutting postion. Value of parameter comes from Okuma.CLCMDAPI.Enumerations.CuttingPositionEnum.</param>
 <exception cref="T:System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
 <exception cref="T:System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
 <Figure>TOOL OFFSET/NOSE R COMPENSATION - NOSE-R COMPENSATION - CONST SUB. 0.012 FOR INDEX 1, X AXIS, CUTTING POSITION BASE A
 <para>
 <img src="../media/Lathe.Multi.NoseRComp.SubConst.jpg"/>
 </para>
 </Figure>
 <remarks>
 <para>********************* This function cannot be supported in OSP-P100 II machines. ************************</para>
 <para> Add/Sub constant value depends on parameter setting as shown below:</para>
 <Figure>TOOL OFFSET/NOSE R COMPENSATION - PARAMETER SETTING  
 <para>
 <img src="../media/Lathe.ToolOffset.NoseRComp.AddSub.ParameterSetting.jpg"/>
 </para>
 </Figure>

 <para>
 The following specifications for cutting position PrincipalAxis1_BaseA must be met in order to function:
 <list type="table">
 <listheader>
 <term>Specification</term>
 <description>Valid/Invalid</description>
 </listheader>
 <item>
 <term>tool offset multi-system specification NC spec [21,6] </term>
 <description>Valid</description>
 </item>
 </list>
 </para>

 <para>
 The following specifications for cutting position PrincipalAxis1_BaseB must be met in order to function:
 <list type="table">
 <listheader>
 <term>Specification</term>
 <description>Valid/Invalid</description>
 </listheader>
 <item>
 <term>tool offset multi-system specification NC spec [21,6] </term>
 <description>Valid</description>
 </item>
 <item>
 <term>L Tool index specification NC spec [3,4]</term>
 <description>Valid</description>
 </item>
 </list>
 </para>

 <para>
 The following specifications for cutting position PrincipalAxis1_VerticalA must be met in order to function:
 <list type="table">
 <listheader>
 <term>Specification</term>
 <description>Valid/Invalid</description>
 </listheader>
 <item>
 <term>tool offset multi-system specification NC spec [21,6] </term>
 <description>Valid</description>
 </item>
 </list>
 </para>

 <para>
 The following specifications for cutting position PrincipalAxis1_VerticalB must be met in order to function:
 <list type="table">
 <listheader>
 <term>Specification</term>
 <description>Valid/Invalid</description>
 </listheader>
 <item>
 <term>tool offset multi-system specification NC spec [21,6] </term>
 <description>Valid</description>
 </item>
 <item>
 <term>L Tool index specification NC spec [3,4]</term>
 <description>Valid</description>
 </item>
 </list>
 </para>

 <para>
 The following specifications for cutting position PrincipalAxis2_BaseA must be met in order to function:
 <list type="table">
 <listheader>
 <term>Specification</term>
 <description>Valid/Invalid</description>
 </listheader>
 <item>
 <term>tool offset multi-system specification NC spec [21,6] </term>
 <description>Valid</description>
 </item>
 <item>
 <term>Sub spindle specification NC spec [4,1]</term>
 <description>Valid</description>
 </item>
 </list>
 </para>

 <para>
 The following specifications for cutting position PrincipalAxis2_BaseB must be met in order to function:
 <list type="table">
 <listheader>
 <term>Specification</term>
 <description>Valid/Invalid</description>
 </listheader>
 <item>
 <term>tool offset multi-system specification NC spec [21,6] </term>
 <description>Valid</description>
 </item>
 <item>
 <term>L Tool index specification NC spec [3,4]</term>
 <description>Valid</description>
 </item>
 <item>
 <term>Sub spindle specification NC spec [4,1]</term>
 <description>Valid</description>
 </item>
 </list>
 </para>

 <para>
 The following specifications for cutting position PrincipalAxis2_VerticalA must be met in order to function:
 <list type="table">
 <listheader>
 <term>Specification</term>
 <description>Valid/Invalid</description>
 </listheader>
 <item>
 <term>tool offset multi-system specification NC spec [21,6] </term>
 <description>Valid</description>
 </item>
 <item>
 <term>Sub spindle specification NC spec [4,1]</term>
 <description>Valid</description>
 </item>
 </list>
 </para>

 <para>
 The following specifications for cutting position PrincipalAxis2_VerticalB must be met in order to function:
 <list type="table">
 <listheader>
 <term>Specification</term>
 <description>Valid/Invalid</description>
 </listheader>
 <item>
 <term>tool offset multi-system specification NC spec [21,6] </term>
 <description>Valid</description>
 </item>
 <item>
 <term>L Tool index specification NC spec [3,4]</term>
 <description>Valid</description>
 </item>
 <item>
 <term>Sub spindle specification NC spec [4,1]</term>
 <description>Valid</description>
 </item>
 </list>
 </para>
 <para>
 Compatible Chart of this function for different OSP controls:
 <list type="table">
 <listheader>
 <term>OSP Control</term>
 <description>Compatible</description>
 </listheader>
 <item>
 <term>P100II</term>
 <description>No</description>
 </item>
 <item>
 <term>P200</term>
 <description>Yes</description>
 </item>
 <item>
 <term>P300L and newer controls</term>
 <description>Yes</description>
 </item>
 <item>
 <term>P300S/TD Mode and newer controls</term>
 <description>Yes IF NC Spec Code 2 [3,6] TMIM = OFF</description>
 </item>
 <item>
 <term>P300S/TL Mode and newer controls</term>
 <description>Yes</description>
 </item>
 </list>
 </para>
 </remarks>
</member>
<member name="M:Okuma.CLCMDAPI.CommandAPI.CTools.SubtractConstantToolWear(System.Int32,Okuma.CLCMDAPI.Enumerations.OffsetAxisIndex2Enum,Okuma.CLCMDAPI.Enumerations.SubSystemEnum,Okuma.CLCMDAPI.Enumerations.CuttingPositionEnum)">
 <summary>
 For Tool Offset Multi-System function, Subtracts a constant value, set with a related parameter, from the tool wear value at the specified offset index, and cutting position.
 </summary>
 <example> This example shows how to call the SubtractConstantToolWear method.
 <code escaped="true" language="vbnet">
 Dim objTools As New CTools
 Dim intOffsetNo As Integer
 Dim enAxisIndex As OffsetAxisIndex2Enum
 Dim enSubSystem As SubSystemEnum
 Dim enCuttingPosition As CuttingPositionEnum
 objTools.SubtractConstantToolWear(intOffsetNo, enAxisIndex, enSubSystem, enCuttingPosition)
 </code>
 </example>
 <param name="intOffsetNo">Offset number.</param>
 <param name="enAxisIndex">Axis Index. Value of parameter comes from Okuma.CLCMDAPI.Enumerations.OffsetAxisIndex2Enum.</param>
 <param name="enSubSystem">Sub System. Value of parameter comes from Okuma.CLCMDAPI.Enumerations.SubSystemEnum.</param>
 <param name="enCuttingPosition">Cutting postion. Value of parameter comes from Okuma.CLCMDAPI.Enumerations.CuttingPositionEnum.</param>
 <exception cref="T:System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
 <exception cref="T:System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
 <Figure>TOOL WEAR OFFSET - CONST SUB. 0.012 FOR INDEX 1, X AXIS, CUTTING POSITION BASE A
 <para>
 <img src="../media/Lathe.Multi.ToolWear.SubConst.jpg"/>
 </para>
 </Figure>
 <remarks>
 <para>********************* This function cannot be supported in OSP-P100 II machines. ************************</para>
 <para> Add/Sub constant value depends on parameter setting as shown below:</para>
 <Figure>TOOL OFFSET/NOSE R COMPENSATION - PARAMETER SETTING  
 <para>
 <img src="../media/Lathe.ToolOffset.NoseRComp.AddSub.ParameterSetting.jpg"/>
 </para>
 </Figure>

 <para>
 The following specifications for cutting position PrincipalAxis1_BaseA must be met in order to function:
 <list type="table">
 <listheader>
 <term>Specification</term>
 <description>Valid/Invalid</description>
 </listheader>
 <item>
 <term>Tool wear compensation specification NC spec [21,5]</term>
 <description>Valid</description>
 </item>
 <item>
 <term>tool offset multi-system specification NC spec [21,6] </term>
 <description>Valid</description>
 </item>
 </list>
 </para>

 <para>
 The following specifications for cutting position PrincipalAxis1_BaseB must be met in order to function:
 <list type="table">
 <listheader>
 <term>Specification</term>
 <description>Valid/Invalid</description>
 </listheader>
 <item>
 <term>Tool wear compensation specification NC spec [21,5]</term>
 <description>Valid</description>
 </item>
 <item>
 <term>tool offset multi-system specification NC spec [21,6] </term>
 <description>Valid</description>
 </item>
 <item>
 <term>L Tool index specification NC spec [3,4]</term>
 <description>Valid</description>
 </item>
 </list>
 </para>

 <para>
 The following specifications for cutting position PrincipalAxis1_VerticalA must be met in order to function:
 <list type="table">
 <listheader>
 <term>Specification</term>
 <description>Valid/Invalid</description>
 </listheader>
 <item>
 <term>Tool wear compensation specification NC spec [21,5]</term>
 <description>Valid</description>
 </item>
 <item>
 <term>tool offset multi-system specification NC spec [21,6] </term>
 <description>Valid</description>
 </item>
 </list>
 </para>

 <para>
 The following specifications for cutting position PrincipalAxis1_VerticalB must be met in order to function:
 <list type="table">
 <listheader>
 <term>Specification</term>
 <description>Valid/Invalid</description>
 </listheader>
 <item>
 <term>Tool wear compensation specification NC spec [21,5]</term>
 <description>Valid</description>
 </item>
 <item>
 <term>tool offset multi-system specification NC spec [21,6] </term>
 <description>Valid</description>
 </item>
 <item>
 <term>L Tool index specification NC spec [3,4]</term>
 <description>Valid</description>
 </item>
 </list>
 </para>

 <para>
 The following specifications for cutting position PrincipalAxis2_BaseA must be met in order to function:
 <list type="table">
 <listheader>
 <term>Specification</term>
 <description>Valid/Invalid</description>
 </listheader>
 <item>
 <term>Tool wear compensation specification NC spec [21,5]</term>
 <description>Valid</description>
 </item>
 <item>
 <term>tool offset multi-system specification NC spec [21,6] </term>
 <description>Valid</description>
 </item>
 <item>
 <term>Sub spindle specification NC spec [4,1]</term>
 <description>Valid</description>
 </item>
 </list>
 </para>

 <para>
 The following specifications for cutting position PrincipalAxis2_BaseB must be met in order to function:
 <list type="table">
 <listheader>
 <term>Specification</term>
 <description>Valid/Invalid</description>
 </listheader>
 <item>
 <term>Tool wear compensation specification NC spec [21,5]</term>
 <description>Valid</description>
 </item>
 <item>
 <term>tool offset multi-system specification NC spec [21,6] </term>
 <description>Valid</description>
 </item>
 <item>
 <term>L Tool index specification NC spec [3,4]</term>
 <description>Valid</description>
 </item>
 <item>
 <term>Sub spindle specification NC spec [4,1]</term>
 <description>Valid</description>
 </item>
 </list>
 </para>

 <para>
 The following specifications for cutting position PrincipalAxis2_VerticalA must be met in order to function:
 <list type="table">
 <listheader>
 <term>Specification</term>
 <description>Valid/Invalid</description>
 </listheader>
 <item>
 <term>Tool wear compensation specification NC spec [21,5]</term>
 <description>Valid</description>
 </item>
 <item>
 <term>tool offset multi-system specification NC spec [21,6] </term>
 <description>Valid</description>
 </item>
 <item>
 <term>Sub spindle specification NC spec [4,1]</term>
 <description>Valid</description>
 </item>
 </list>
 </para>

 <para>
 The following specifications for cutting position PrincipalAxis2_VerticalB must be met in order to function:
 <list type="table">
 <listheader>
 <term>Specification</term>
 <description>Valid/Invalid</description>
 </listheader>
 <item>
 <term>Tool wear compensation specification NC spec [21,5]</term>
 <description>Valid</description>
 </item>
 <item>
 <term>tool offset multi-system specification NC spec [21,6] </term>
 <description>Valid</description>
 </item>
 <item>
 <term>L Tool index specification NC spec [3,4]</term>
 <description>Valid</description>
 </item>
 <item>
 <term>Sub spindle specification NC spec [4,1]</term>
 <description>Valid</description>
 </item>
 </list>
 </para>
 <para>
 Compatible Chart of this function for different OSP controls:
 <list type="table">
 <listheader>
 <term>OSP Control</term>
 <description>Compatible</description>
 </listheader>
 <item>
 <term>P100II</term>
 <description>No</description>
 </item>
 <item>
 <term>P200</term>
 <description>Yes</description>
 </item>
 <item>
 <term>P300L and newer controls</term>
 <description>Yes</description>
 </item>
 <item>
 <term>P300S/TD Mode and newer controls</term>
 <description>Yes IF NC Spec Code 2 [3,6] TMIM = OFF</description>
 </item>
 <item>
 <term>P300S/TL Mode and newer controls</term>
 <description>Yes</description>
 </item>
 </list>
 </para>
 </remarks>
</member>
<member name="M:Okuma.CLCMDAPI.CommandAPI.CTools.InitToolLife(System.Int32)">
 <summary>
 <para> Initialization of the Tool Life Management Tables</para>
 <para> After the tool group numbers have been designated for tool numbers and tool offset numbers and</para>
 <para> the life conditions have been set, the tool life management tables must be initialized.</para>
 <para> Tool life management tables initialization clears the current number of machined workpieces,</para>
 <para> time, tool wear amount and the NG flag in tool gauging NG. It also returns the “tool life</para>
 <para> flag” and “tool group life flag” statuses to "OK". The tool wear amount of the tool offset no. set to the</para>
 <para> group is also cleared, and the tool number is set as the smallest number registered in the group.</para>
 <para> After changing all the tools in a setup change, it is essential to initialize the tool life management</para>
 <para> tables.        </para>
 <para> Notes: Tool wear offset is cleared at tool life management initialization</para>
 <para> The tool wear clearing setting at group initialization can be changed by setting the</para>
 <para> following parameter.</para>
 <para> Optional Parameter (Long, Word, Bit): No.6 Bit 7</para>
 <para> 0: Cleared 1: Not cleared</para>
 <para> Default setting is 0 or cleared at initialization</para>
 </summary>
 <example> This example shows how to call the InitToolLife method for all of the attached tools having group number 1 only
 <code escaped="true" language="vbnet">
 Dim objTools As New CTools
 Dim intGroupNo As Integer = 1
 objTools.InitToolLife(intGroupNo)
 </code>
 </example>
 <param name="intGroupNo">
 <para>Tool Group number.</para> 
 <para> If group number is zero then all of the attached tools will be initialized.</para>
 <para> If group number is greater than zero then all of the attached tools having that group number will be initialized.</para>
 </param>
 <exception cref="T:System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
 <exception cref="T:System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
 <Figure>TOOL DATA SETTING - TOOL LIFE (ALL) - INIT
 <para>
 <img src="../media/Lathe.P300.TD.ToolLife.Init.jpg"/>
 </para>
 </Figure>
 <remarks>
 <para>
 Compatible Chart of this function for different OSP controls:
 <list type="table">
 <listheader>
 <term>OSP Control</term>
 <description>Compatible</description>
 </listheader>
 <item>
 <term>P100II</term>
 <description>No</description>
 </item>
 <item>
 <term>P200</term>
 <description>No</description>
 </item>
 <item>
 <term>P300L and newer controls</term>
 <description>No</description>
 </item>
 <item>
 <term>P300S/TD Mode and newer controls</term>
 <description>Yes IF NC Spec Code 2 [3,6] TMIM = ON</description>
 </item>
 <item>
 <term>P300S/TL Mode and newer controls</term>
 <description>Yes IF NC Spec Code 2 [3,6] TMIM = ON</description>
 </item>
 </list>
 </para>
 </remarks>
 <history>
 	[Lhuynh]	11/07/2022	Created
 </history>
 -----------------------------------------------------------------------------
</member>
<member name="T:Okuma.CLCMDAPI.CommandAPI.CTools2">
 -----------------------------------------------------------------------------
 Project	 : Okuma.CLCMDAPI
 Class	 : CLCMDAPI.CommandAPI.CTools2
 
 -----------------------------------------------------------------------------
 <summary>
 Class provides tool offset/Nose Radius Compensation operations for 8 digits Tool ID.
 </summary>
 <remarks>
 </remarks>
 <history>
 	[Lhuynh]	2/22/2010	Created
 </history>
 -----------------------------------------------------------------------------
</member>
<member name="M:Okuma.CLCMDAPI.CommandAPI.CTools2.#ctor(System.String)">
 -----------------------------------------------------------------------------
 <summary>
 Create an instance of this class.
 In addition to library name, the provided logging name will be used for logging all function calls 
 </summary>
 <param name="strLoggingName">Logging Name.  Globally, The logging name will be combined with library name as the logging name for all logging message.</param>
 <remarks>
 </remarks>
 <history>
 	[Lhuynh]	02/22/2010	Created
 </history>
 -----------------------------------------------------------------------------
</member>
<member name="M:Okuma.CLCMDAPI.CommandAPI.CTools2.AddConstantToolOffset1(System.Int32,Okuma.CLCMDAPI.Enumerations.OffsetAxisIndexEnum,Okuma.CLCMDAPI.Enumerations.TurretEnum)">
 <summary>
 Adding a constant value, set with a related parameter, from the tool offset 1 value at the specified offset index.
 </summary>
 <DataUnit>
  Data unit is current setting of NC Data Unit.
 </DataUnit>
 <example> This example shows how to call the AddConstantToolOffset1 method.
 <code escaped="true" language="vbnet">
 Dim intOffsetNo As Integer
 Dim enTurret As TurretEnum
 Dim enAxisIndex As OffsetAxisIndexEnum
 objCMDTool2.AddConstantToolOffset1(intOffsetNo, enAxisIndex, enTurret)
 </code>
 </example>
 <param name="intOffsetNo">Offset number.</param>
 <param name="enAxisIndex">Axis Index. Value of parameter comes from Okuma.CLCMDAPI.Enumerations.OffsetAxisIndexEnum.</param>
 <param name="enTurret">Turret System. Value of parameter comes from Okuma.CLCMDAPI.Enumerations.TurretEnum.</param>
 <exception cref="T:System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
 <exception cref="T:System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
 <Figure>MG Tool ID Information - INDICATION DATA / MG - OFFSET1 - X/OFFSET Z/OFFSET Y/OFFSET
 <para>
 <img src="../media/Lathe.ToolID.ToolData.MGToolID.Offset1.jpg"/>
 </para>
 </Figure>
 <remarks>
 <para>
 The following specifications must be met for each axis in order to function correctly:
 <list type="table">
 <listheader>
 <term>Axis</term>
 <description>Specifications</description>
 </listheader>
 <item>
 <term>X-Axis</term>
 <description>
 <para>* A Turret</para>
 <para>* B Turret and Steady Rest ZB Axial Control  spec. is not enabled</para>
 </description>
 </item>
 <item>
 <term>YI-Axis</term>
 <description>A Turret</description>
 </item>
 </list>
 </para>
 </remarks>
</member>
<member name="M:Okuma.CLCMDAPI.CommandAPI.CTools2.SubtractConstantToolOffset1(System.Int32,Okuma.CLCMDAPI.Enumerations.OffsetAxisIndexEnum,Okuma.CLCMDAPI.Enumerations.TurretEnum)">
 <summary>
 Subtracting a constant value, set with a related parameter, from the tool offset 1 value at the specified offset index.
 </summary>
 <DataUnit>
  Data unit is current setting of NC Data Unit.
 </DataUnit>
 <example> This example shows how to call the SubtractConstantToolOffset1 method.
 <code escaped="true" language="vbnet">
 Dim intOffsetNo As Integer
 Dim enTurret As TurretEnum
 Dim enAxisIndex As OffsetAxisIndexEnum
 objCMDTool2.SubtractConstantToolOffset1(intOffsetNo, enAxisIndex, enTurret)
 </code>
 </example>
 <param name="intOffsetNo">Offset number.</param>
 <param name="enAxisIndex">Axis Index. Value of parameter comes from Okuma.CLCMDAPI.Enumerations.OffsetAxisIndexEnum.</param>
 <param name="enTurret">Turret System. Value of parameter comes from Okuma.CLCMDAPI.Enumerations.TurretEnum.</param>
 <exception cref="T:System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
 <exception cref="T:System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
 <Figure>MG Tool ID Information - INDICATION DATA / MG - OFFSET1 - X/OFFSET Z/OFFSET Y/OFFSET
 <para>
 <img src="../media/Lathe.ToolID.ToolData.MGToolID.Offset1.jpg"/>
 </para>
 </Figure>
 <remarks>
 <para>
 The following specifications must be met for each axis in order to function correctly:
 <list type="table">
 <listheader>
 <term>Axis</term>
 <description>Specifications</description>
 </listheader>
 <item>
 <term>X-Axis</term>
 <description>
 <para>* A Turret</para>
 <para>* B Turret and Steady Rest ZB Axial Control  spec. is not enabled</para>
 </description>
 </item>
 <item>
 <term>YI-Axis</term>
 <description>A Turret</description>
 </item>
 </list>
 </para>
 </remarks>
</member>
<member name="M:Okuma.CLCMDAPI.CommandAPI.CTools2.AddConstantToolOffset2(System.Int32,Okuma.CLCMDAPI.Enumerations.OffsetAxisIndexEnum,Okuma.CLCMDAPI.Enumerations.TurretEnum)">
 <summary>
 Adding a constant value, set with a related parameter, from the tool offset 2 value at the specified offset index.
 </summary>
 <DataUnit>
  Data unit is current setting of NC Data Unit.
 </DataUnit>
 <example> This example shows how to call the AddConstantToolOffset2 method.
 <code escaped="true" language="vbnet">
 Dim intOffsetNo As Integer
 Dim enTurret As TurretEnum
 Dim enAxisIndex As OffsetAxisIndexEnum
 objCMDTool2.AddConstantToolOffset2(intOffsetNo, enAxisIndex, enTurret)
 </code>
 </example>
 <param name="intOffsetNo">Offset number.</param>
 <param name="enAxisIndex">Axis Index. Value of parameter comes from Okuma.CLCMDAPI.Enumerations.OffsetAxisIndexEnum.</param>
 <param name="enTurret">Turret System. Value of parameter comes from Okuma.CLCMDAPI.Enumerations.TurretEnum.</param>
 <exception cref="T:System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
 <exception cref="T:System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
 <Figure>MG Tool ID Information - Tool Offset 1 - OFFSET1 - OFFSET X/OFFSET Z/OFFSET Y
 <para>
 <img src="../media/Lathe.ToolID.ToolData.MGToolID.Offset2.jpg"/>
 </para>
 </Figure>
 <remarks>
 <para>
 The following specifications must be met for each axis in order to function correctly:
 <list type="table">
 <listheader>
 <term>Axis</term>
 <description>Specifications</description>
 </listheader>
 <item>
 <term>X-Axis</term>
 <description>
 <para>* A Turret</para>
 <para>* B Turret and Steady Rest ZB Axial Control  spec. is not enabled</para>
 </description>
 </item>
 <item>
 <term>YI-Axis</term>
 <description>A Turret</description>
 </item>
 </list>
 </para>
 </remarks>
</member>
<member name="M:Okuma.CLCMDAPI.CommandAPI.CTools2.SubtractConstantToolOffset2(System.Int32,Okuma.CLCMDAPI.Enumerations.OffsetAxisIndexEnum,Okuma.CLCMDAPI.Enumerations.TurretEnum)">
 <summary>
 Subtracting a constant value, set with a related parameter, from the tool offset 2 value at the specified offset index.
 </summary>
 <DataUnit>
  Data unit is current setting of NC Data Unit.
 </DataUnit>
 <example> This example shows how to call the SubtractConstantToolOffset2 method.
 <code escaped="true" language="vbnet">
 Dim intOffsetNo As Integer
 Dim enTurret As TurretEnum
 Dim enAxisIndex As OffsetAxisIndexEnum
 objCMDTool2.SubtractConstantToolOffset2(intOffsetNo, enAxisIndex, enTurret)
 </code>
 </example>
 <param name="intOffsetNo">Offset number.</param>
 <param name="enAxisIndex">Axis Index. Value of parameter comes from Okuma.CLCMDAPI.Enumerations.OffsetAxisIndexEnum.</param>
 <param name="enTurret">Turret System. Value of parameter comes from Okuma.CLCMDAPI.Enumerations.TurretEnum.</param>
 <exception cref="T:System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
 <exception cref="T:System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
 <Figure>MG Tool ID Information - INDICATION DATA / MG - OFFSET2 - X/OFFSET Z/OFFSET Y/OFFSET
 <para>
 <img src="../media/Lathe.ToolID.ToolData.MGToolID.Offset2.jpg"/>
 </para>
 </Figure>
 <remarks>
 <para>
 The following specifications must be met for each axis in order to function correctly:
 <list type="table">
 <listheader>
 <term>Axis</term>
 <description>Specifications</description>
 </listheader>
 <item>
 <term>X-Axis</term>
 <description>
 <para>* A Turret</para>
 <para>* B Turret and Steady Rest ZB Axial Control  spec. is not enabled</para>
 </description>
 </item>
 <item>
 <term>YI-Axis</term>
 <description>A Turret</description>
 </item>
 </list>
 </para>
 </remarks>
</member>
<member name="M:Okuma.CLCMDAPI.CommandAPI.CTools2.AddConstantNoseRadiusCompensation1(System.Int32,Okuma.CLCMDAPI.Enumerations.TurretEnum)">
 <summary>
 Adding a constant value, set with a related parameter, from the Nose radius compensation 1 value at the specified offset index.
 </summary>
 <DataUnit>
  Data unit is current setting of NC Data Unit.
 </DataUnit>
 <example> This example shows how to call the AddConstantNoseRadiusCompensation1 method.
 <code escaped="true" language="vbnet">
 Dim intOffsetNo As Integer
 Dim enTurret As TurretEnum
 objCMDTool2.AddConstantNoseRadiusCompensation1(intOffsetNo, enTurret)
 </code>
 </example>
 <param name="intOffsetNo">Offset number.</param>
 <param name="enTurret">Turret System. Value of parameter comes from Okuma.CLCMDAPI.Enumerations.TurretEnum.</param>
 <exception cref="T:System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
 <exception cref="T:System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
 <Figure>MG Tool ID Information - Tool Offset 1 - OFFSET1 - NOSE-R
 <img src="../media/Lathe.ToolID.ToolData.MGToolID.Offset1.jpg"/>
 </Figure>
</member>
<member name="M:Okuma.CLCMDAPI.CommandAPI.CTools2.AddConstantNoseRadiusCompensation2(System.Int32,Okuma.CLCMDAPI.Enumerations.TurretEnum)">
 <summary>
 Adding a constant value, set with a related parameter, from the Nose radius compensation 2 value at the specified offset index.
 </summary>
 <DataUnit>
  Data unit is current setting of NC Data Unit.
 </DataUnit>
 <example> This example shows how to call the AddConstantNoseRadiusCompensation2 method.
 <code escaped="true" language="vbnet">
 Dim intOffsetNo As Integer
 Dim enTurret As TurretEnum
 objCMDTool2.AddConstantNoseRadiusCompensation2(intOffsetNo, enTurret)
 </code>
 </example>
 <param name="intOffsetNo">Offset number.</param>
 <param name="enTurret">Turret System. Value of parameter comes from Okuma.CLCMDAPI.Enumerations.TurretEnum.</param>
 <exception cref="T:System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
 <exception cref="T:System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
 <Figure>MG Tool ID Information - Tool Offset 2 - OFFSET2 - NOSE-R
 <img src="../media/Lathe.ToolID.ToolData.MGToolID.Offset2.jpg"/>
 </Figure>
</member>
<member name="M:Okuma.CLCMDAPI.CommandAPI.CTools2.SubtractConstantNoseRadiusCompensation1(System.Int32,Okuma.CLCMDAPI.Enumerations.TurretEnum)">
 <summary>
 Subtracting a constant value, set with a related parameter, from the Nose radius compensation 1 value at the specified offset index.
 </summary>
 <DataUnit>
  Data unit is current setting of NC Data Unit.
 </DataUnit>
 <example> This example shows how to call the SubtractConstantNoseRadiusCompensation1 method.
 <code escaped="true" language="vbnet">
 Dim intOffsetNo As Integer
 Dim enTurret As TurretEnum
 objCMDTool2.SubtractConstantNoseRadiusCompensation1(intOffsetNo, enTurret)
 </code>
 </example>
 <param name="intOffsetNo">Offset number.</param>
 <param name="enTurret">Turret System. Value of parameter comes from Okuma.CLCMDAPI.Enumerations.TurretEnum.</param>
 <exception cref="T:System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
 <exception cref="T:System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
 <Figure>MG Tool ID Information - Tool Offset 1 - OFFSET1 - NOSE-R
 <img src="../media/Lathe.ToolID.ToolData.MGToolID.Offset1.jpg"/>
 </Figure>
</member>
<member name="M:Okuma.CLCMDAPI.CommandAPI.CTools2.SubtractConstantNoseRadiusCompensation2(System.Int32,Okuma.CLCMDAPI.Enumerations.TurretEnum)">
 <summary>
 Subtracting a constant value, set with a related parameter, from the Nose radius compensation 2 value at the specified offset index.
 </summary>
 <DataUnit>
  Data unit is current setting of NC Data Unit.
 </DataUnit>
 <example> This example shows how to call the SubtractConstantNoseRadiusCompensation2 method.
 <code escaped="true" language="vbnet">
 Dim intOffsetNo As Integer
 Dim enTurret As TurretEnum
 objCMDTool2.SubtractConstantNoseRadiusCompensation2(intOffsetNo, enTurret)
 </code>
 </example>
 <param name="intOffsetNo">Offset number.</param>
 <param name="enTurret">Turret System. Value of parameter comes from Okuma.CLCMDAPI.Enumerations.TurretEnum.</param>
 <exception cref="T:System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
 <exception cref="T:System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
 <Figure>MG Tool ID Information - Tool Offset 2 - OFFSET2 - NOSE-R
 <img src="../media/Lathe.ToolID.ToolData.MGToolID.Offset2.jpg"/>
 </Figure>
</member>
<member name="M:Okuma.CLCMDAPI.CommandAPI.CTools2.AddConstantToolWearOffset1(System.Int32,Okuma.CLCMDAPI.Enumerations.OffsetAxisIndex2Enum,Okuma.CLCMDAPI.Enumerations.TurretEnum)">
 <summary>
 Adding a constant value, set with a related parameter, from the tool wear offset 1 value at the specified offset index.
 </summary>
 <DataUnit>
  Data unit is current setting of NC Data Unit.
 </DataUnit>
 <example> This example shows how to call the AddConstantToolWearOffset1 method.
 <code escaped="true" language="vbnet">
 Dim intOffsetNo As Integer
 Dim enTurret As TurretEnum
 Dim enAxisIndex As OffsetAxisIndexEnum
 objCMDTool2.AddConstantToolWearOffset1(intOffsetNo, enAxisIndex, enTurret)
 </code>
 </example>
 <param name="intOffsetNo">Offset number.</param>
 <param name="enAxisIndex">Axis Index. Value of parameter comes from Okuma.CLCMDAPI.Enumerations.OffsetAxisIndexEnum.</param>
 <param name="enTurret">Turret System. Value of parameter comes from Okuma.CLCMDAPI.Enumerations.TurretEnum.</param>
 <exception cref="T:System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
 <exception cref="T:System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
 <Figure>MG Tool ID Information - Tool Wear Offset - WEAR - OFFSET1 - WEAR X/WEAR Z
 <para>
 <img src="../media/Lathe.ToolID.ToolData.MGToolID.WearOffset.jpg"/>
 </para>
 </Figure>
 <remarks>
 <para>
 The following specifications must be met for each axis in order to function correctly:
 <list type="table">
 <listheader>
 <term>Axis</term>
 <description>Specifications</description>
 </listheader>
 <item>
 <term>X-Axis</term>
 <description>
 <para>* A Turret</para>
 <para>* B Turret and Steady Rest ZB Axial Control  spec. is not enabled</para>
 </description>
 </item>
 </list>
 </para>
 </remarks>
</member>
<member name="M:Okuma.CLCMDAPI.CommandAPI.CTools2.AddConstantToolWearOffset2(System.Int32,Okuma.CLCMDAPI.Enumerations.OffsetAxisIndex2Enum,Okuma.CLCMDAPI.Enumerations.TurretEnum)">
 <summary>
 Adding a constant value, set with a related parameter, from the tool wear offset 2 value at the specified offset index.
 </summary>
 <DataUnit>
  Data unit is current setting of NC Data Unit.
 </DataUnit>
 <example> This example shows how to call the AddConstantToolWearOffset2 method.
 <code escaped="true" language="vbnet">
 Dim intOffsetNo As Integer
 Dim enTurret As TurretEnum
 Dim enAxisIndex As OffsetAxisIndexEnum
 objCMDTool2.AddConstantToolWearOffset2(intOffsetNo, enAxisIndex, enTurret)
 </code>
 </example>
 <param name="intOffsetNo">Offset number.</param>
 <param name="enAxisIndex">Axis Index. Value of parameter comes from Okuma.CLCMDAPI.Enumerations.OffsetAxisIndexEnum.</param>
 <param name="enTurret">Turret System. Value of parameter comes from Okuma.CLCMDAPI.Enumerations.TurretEnum.</param>
 <exception cref="T:System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
 <exception cref="T:System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
 <Figure>MG Tool ID Information - Tool Wear Offset - WEAR - OFFSET2 - WEAR X/WEAR Z
 <para>
 <img src="../media/Lathe.ToolID.ToolData.MGToolID.WearOffset.jpg"/>
 </para>
 </Figure>
 <remarks>
 <para>
 The following specifications must be met for each axis in order to function correctly:
 <list type="table">
 <listheader>
 <term>Axis</term>
 <description>Specifications</description>
 </listheader>
 <item>
 <term>X-Axis</term>
 <description>
 <para>* A Turret</para>
 <para>* B Turret and Steady Rest ZB Axial Control  spec. is not enabled</para>
 </description>
 </item>
 </list>
 </para>
 </remarks>
</member>
<member name="M:Okuma.CLCMDAPI.CommandAPI.CTools2.SubtractConstantToolWearOffset1(System.Int32,Okuma.CLCMDAPI.Enumerations.OffsetAxisIndex2Enum,Okuma.CLCMDAPI.Enumerations.TurretEnum)">
 <summary>
 Subtracting a constant value, set with a related parameter, from the tool wear offset 1 value at the specified offset index.
 </summary>
 <DataUnit>
  Data unit is current setting of NC Data Unit.
 </DataUnit>
 <example> This example shows how to call the SubtractConstantToolWearOffset1 method.
 <code escaped="true" language="vbnet">
 Dim intOffsetNo As Integer
 Dim enTurret As TurretEnum
 Dim enAxisIndex As OffsetAxisIndex2Enum
 objCMDTool2.SubtractConstantToolWearOffset1(intOffsetNo, enAxisIndex, enTurret)
 </code>
 </example>
 <param name="intOffsetNo">Offset number.</param>
 <param name="enAxisIndex">Axis Index. Value of parameter comes from Okuma.CLCMDAPI.Enumerations.OffsetAxisIndex2Enum.</param>
 <param name="enTurret">Turret System. Value of parameter comes from Okuma.CLCMDAPI.Enumerations.TurretEnum.</param>
 <exception cref="T:System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
 <exception cref="T:System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
 <Figure>MG Tool ID Information - Tool Wear Offset - WEAR - OFFSET1 - WEAR X/WEAR Z
 <para>
 <img src="../media/Lathe.ToolID.ToolData.MGToolID.WearOffset.jpg"/>
 </para>
 </Figure>
 <remarks>
 <para>
 The following specifications must be met for each axis in order to function correctly:
 <list type="table">
 <listheader>
 <term>Axis</term>
 <description>Specifications</description>
 </listheader>
 <item>
 <term>X-Axis</term>
 <description>
 <para>* A Turret</para>
 <para>* B Turret and Steady Rest ZB Axial Control  spec. is not enabled</para>
 </description>
 </item>
 </list>
 </para>
 </remarks>
</member>
<member name="M:Okuma.CLCMDAPI.CommandAPI.CTools2.SubtractConstantToolWearOffset2(System.Int32,Okuma.CLCMDAPI.Enumerations.OffsetAxisIndex2Enum,Okuma.CLCMDAPI.Enumerations.TurretEnum)">
 <summary>
 Subtracting a constant value, set with a related parameter, from the tool wear offset 2 value at the specified offset index.
 </summary>
 <DataUnit>
  Data unit is current setting of NC Data Unit.
 </DataUnit>
 <example> This example shows how to call the SubtractConstantToolWearOffset2 method.
 <code escaped="true" language="vbnet">
 Dim intOffsetNo As Integer
 Dim enTurret As TurretEnum
 Dim enAxisIndex As OffsetAxisIndex2Enum
 objCMDTool2.SubtractConstantToolWearOffset2(intOffsetNo, enAxisIndex, enTurret)
 </code>
 </example>
 <param name="intOffsetNo">Offset number.</param>
 <param name="enAxisIndex">Axis Index. Value of parameter comes from Okuma.CLCMDAPI.Enumerations.OffsetAxisIndex2Enum.</param>
 <param name="enTurret">Turret System. Value of parameter comes from Okuma.CLCMDAPI.Enumerations.TurretEnum.</param>
 <exception cref="T:System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
 <exception cref="T:System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
 <Figure>MG Tool ID Information - Tool Wear Offset - WEAR - OFFSET2 - WEAR X/WEAR Z
 <para>
 <img src="../media/Lathe.ToolID.ToolData.MGToolID.WearOffset.jpg"/>
 </para>
 </Figure>
 <remarks>
 <para>
 The following specifications must be met for each axis in order to function correctly:
 <list type="table">
 <listheader>
 <term>Axis</term>
 <description>Specifications</description>
 </listheader>
 <item>
 <term>X-Axis</term>
 <description>
 <para>* A Turret</para>
 <para>* B Turret and Steady Rest ZB Axial Control  spec. is not enabled</para>
 </description>
 </item>
 </list>
 </para>
 </remarks>
</member>
<member name="T:Okuma.CLCMDAPI.CommandAPI.CViews">
 -----------------------------------------------------------------------------
 Project	 : Okuma.CLCMDAPI
 Class	 : CLCMDAPI.CommandAPI.CViews
 
 -----------------------------------------------------------------------------
 <summary>
 Class provides screen change operations.
 </summary>
 <remarks>
 </remarks>
 <history>
 	[Lhuynh]	1/20/2007	Created
 </history>
 -----------------------------------------------------------------------------
</member>
<member name="M:Okuma.CLCMDAPI.CommandAPI.CViews.#ctor(System.String)">
 -----------------------------------------------------------------------------
 <summary>
 Create an instance of this class.
 In addition to library name, the provided logging name will be used for logging all function calls 
 </summary>
 <param name="strLoggingName">Logging Name.  Globally, The logging name will be combined with library name as the logging name for all logging message.</param>
 <remarks>
 </remarks>
 <history>
 	[Lhuynh]	12/4/2007	Created
 </history>
 -----------------------------------------------------------------------------
</member>
<member name="M:Okuma.CLCMDAPI.CommandAPI.CViews.ChangeScreen(Okuma.CLCMDAPI.Enumerations.PanelGroupEnum,System.String)">
 <summary>
 Allow changing current screen on NC to different screen by specified the panel group name and screen name.
 </summary>
 <example> This example shows how to call the ChangeScreen method to display Tool Data screen
 <code escaped="true" language="vbnet">
 Dim objview As New Okuma.CLCMDAPI.CommandAPI.CViews
 Dim enPanelGroup As PanelGroupEnum = PanelGroupEnum.ToolDataSettingMode
 Dim strScreenName As String = ""
 objview.ChangeScreen(enPanelGroup,strScreenName)
 </code>
 </example>
 <param name="enPanelGroup">Panel group name where the screen resides. Value of parameter comes from Okuma.CLCMDAPI.Enumerations.PanelGroupEnum</param>
 <param name="strScreenName">Screen name to be displayed as active screen on NC.</param>
 <exception cref="T:System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
 <exception cref="T:System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
 <figure>
 </figure>
</member>
<member name="M:Okuma.CLCMDAPI.CommandAPI.CViews.HomeScreen">
 <summary>
 Allow changing current screen on NC to HOME screen.
 </summary>
 <example> This example shows how to call the HomeScreen method to move to HOME screen before calling any User Management methods such as Log In/Out
 <code source="../ThincLathe/CDataApi_Samples.vb" region="CUserManagement - Log In/Out Samples" language="vbnet" removeRegionMarkers="false" />
 </example>
 <exception cref="T:System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
 <exception cref="T:System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system.</exception>
 <remarks>
 <para>
 The following specifications must be met in order to function on OSP-P300A:
 <list type="table">
 <listheader>
 <term>Specification</term>
 <description>Valid/Invalid</description>
 </listheader>
 <item>
 <term>OSP Suite NC B spec [27,6] SUITE</term>
 <description>Valid</description>
 </item>
 </list>
 </para>
 </remarks>
 <Figure>OSP SUITE - HOME SCREEN
 <para>
 <img src="../media/HomeScreen.jpg"/>
 </para>
 </Figure>
</member>
<member name="T:Okuma.CLCMDAPI.Enumerations.OSPSpecEnum">
 <summary>
 List of OSP specification
 </summary>
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.OSPSpecEnum.DualChainedMagazineVTRA">
  <summary>
 Dual Chained Magazine For VTR-A machine
 <para>
 OSP-P300S or newer controls :
 <para>PLC1 No.26 bit4   MULTI - MAGAZINE</para>
 <para>PLC2 No.30 bit0   MCTYPE VTR - A</para>      
 </para>
 </summary>
</member>
<member name="T:Okuma.CLCMDAPI.Enumerations.SettingToolKind2Enum">
 <summary>
 Specify tool kind 2 for a ATC Panel Tool
 </summary>
 <history>
 	[Lhuynh] 08/29/2019	Revised for USNR machine spec with ATC Panel functions. add 5, 6
 </history>
 -----------------------------------------------------------------------------
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.SettingToolKind2Enum.L_Tool">
  <summary>
 A Lathe tool.
 <para>
 OSP-P300 L:
 <para>Valid for tool assign to A Turret when NC spec No.3 bit 0 is ON </para>
 <para>Valid for tool assign to B Turret when NC spec No.3 bit 0 is ON </para>
 <para>Valid for tool assign to C Turret when NC spec No.3 bit 0 is ON </para>
 </para>
 </summary>
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.SettingToolKind2Enum.M_Tool">
 <summary>
 A Milling tool
 <para>Valid for tool assign to A Turret when CCM(NC1 No.3 bit0)=ON and MWOC(NC1 No.3 bit2)=OFF</para>
 <para>Valid for tool assign to B Turret when BRTL(NC1 No.3 bit1)=ON and BCWOM(NC2 No.26 bit2)=OFF </para>
 <para>Valid for tool assign to C Turret when CTSP(NC2 No.21 bit5)=ON </para>
 </summary>
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.SettingToolKind2Enum.SensorTool">
 <summary>
 A Sensor tool
 </summary>
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.SettingToolKind2Enum.DummyTool">
 <summary>
 A dummy tool. 
 <para>Not valid for multi-edges tool (Tool Edge > 0) </para>
 </summary>
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.SettingToolKind2Enum.LMDNozzle">
 <summary>
 A LMD Nozzle 
 </summary>
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.SettingToolKind2Enum.GrindingTool">
 <summary>
 A grinding tool
 </summary>
</member>
<member name="T:Okuma.CLCMDAPI.Enumerations.SettingToolSize2Enum">
 <summary>
 <para>Specify tool size for a registered tool.</para>
 <para>OSP-P300L: Not applicable</para>
 </summary>
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.SettingToolSize2Enum.Standard">
 <summary>
 Standard tool
 </summary>
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.SettingToolSize2Enum.B_Tool">
 <summary>
 Left-Large diameter tool
 </summary>
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.SettingToolSize2Enum.BR_Tool">
 <summary>
 Right-Large diameter tool
 </summary>
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.SettingToolSize2Enum.E_Tool">
 <summary>
 Super Large diameter tool
 </summary>
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.SettingToolSize2Enum.H_Tool">
 <summary>
 Heavy Tool. ATC arm acceleration/deceleration is reduced.
 </summary>
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.SettingToolSize2Enum.SL_Tool">
 <summary>
 Large Diameter tool 
 </summary>
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.SettingToolSize2Enum.ME_Tool">
 <summary>
 ME Super-Large Diameter tool. It is applicable when Extended Magazine Tool Data PLC3 spec code [72,7] is ON
 Note: Physical pots on magazine must be designated for large tool in order to be valid and can be varied per machine spec.
 All tools having either one of these attributes ME, MR, or ML can share its dummy pots with each other.
 For example: Tool 309, 311, and 313 with ML, ME, and MR attribute, respectively can be inserted into magazine pot 309, 311, 313, respectively
 </summary>
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.SettingToolSize2Enum.ML_Tool">
 <summary>
 ML Left-Large Diameter Tool. It is applicable when Extended Magazine Tool Data PLC3 spec code [72,7] is ON
 Note: Physical pots on magazine must be designated for large tool in order to be valid and can be varied per machine spec.
 All tools having either one of these attributes ME, MR, or ML can share its dummy pots with each other.
 For example: Tool 309, 311, and 313 with ML, ME, and MR attribute, respectively can be inserted into magazine pot 309, 311, 313, respectively
 </summary>
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.SettingToolSize2Enum.MR_Tool">
 <summary>
 MR Right-Large Diameter Tool. It is applicable when Extended Magazine Tool Data PLC3 spec code [72,7] is ON
 Note: Physical pots on magazine must be designated for large tool in order to be valid and can be varied per machine spec.
 All tools having either one of these attributes ME, MR, or ML can share its dummy pots with each other.
 For example: Tool 309, 311, and 313 with ML, ME, and MR attribute, respectively can be inserted into magazine pot 309, 311, 313, respectively
 </summary>
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.SettingToolSize2Enum.SpecialTool">
 <summary>
 Special Tool
 </summary>
</member>
<member name="T:Okuma.CLCMDAPI.Enumerations.OnOffStateEnum">
 <summary>
 Represents an ON/OFF state
 </summary>
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.OnOffStateEnum.OFF">
 <summary>
 Off State
 </summary>
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.OnOffStateEnum.ON">
 <summary>
 On State
 </summary>
</member>
<member name="T:Okuma.CLCMDAPI.Enumerations.LoggingLevelEnum">
 <summary>
 Represents different levels of logging.
 </summary>
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.LoggingLevelEnum.logException">
 <summary>
 Level 1 – All exceptions will be logged by the system. (not settable).
 It is highly not recommended to have polling routines that produce exceptions for any purposes. 
 </summary>
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.LoggingLevelEnum.logSet">
 <summary>
 Level 2 – Level 1 + all write functions to the API (default value for all class instances)
 </summary>
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.LoggingLevelEnum.logGet">
 <summary>
 Level 3 – Level 2 + all read functions. 
 Setting the level to 3 or greater will force logging of ALL calls to the API to facilitate debugging of your application. 
 This function is CPU intensive and should only be used for debugging purposes. 
 </summary>
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.LoggingLevelEnum.logAll">
 <summary>
 Level 4 – all logging events regardless of level.
 Setting the level to 3 or greater will force logging of ALL calls to the API to facilitate debugging of your application. 
 This function is CPU intensive and should only be used for debugging purposes. 
 </summary>
</member>
<member name="T:Okuma.CLCMDAPI.Enumerations.ValidateLevelEnum">
 -----------------------------------------------------------------------------
 <summary>
 Validate level enumeration. For internal data structure only
 </summary>
 <remarks>
 </remarks>
 <history>
 	[Lhuynh] 07/02/2013	Created
 </history>
 -----------------------------------------------------------------------------
 
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.ValidateLevelEnum.Exact">
 <summary>
 Exact same level
 </summary>
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.ValidateLevelEnum.SameOrHigher">
 <summary>
 Same or higher level
 </summary>
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.ValidateLevelEnum.SameOrLower">
 <summary>
 Same or lower level
 </summary>
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.ValidateLevelEnum.All">
 <summary>
 All control if applicable
 </summary>
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.ValidateLevelEnum.Higher">
 <summary>
 Higher control if applicable
 </summary>
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.ValidateLevelEnum.Lower">
 <summary>
 Lower control if applicable
 </summary>
</member>
<member name="T:Okuma.CLCMDAPI.Enumerations.ToolOffsetAxisIndexEnum">
 -----------------------------------------------------------------------------
 <summary>
 Specifies list of available axes for Add/Subtract/Cal tool offset.
 </summary>
 <remarks>
 </remarks>
 <history>
 	[lhuynh]	6/17/2013	Created
 </history>
 -----------------------------------------------------------------------------
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.ToolOffsetAxisIndexEnum.X_Axis">
 -----------------------------------------------------------------------------
 <summary>
 X axis
 </summary>
 <remarks>
 Valid for Tool offset ONLY.
 </remarks>
 <history>
 	[Lhuynh]	1/24/2007	Created
 </history>
 -----------------------------------------------------------------------------
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.ToolOffsetAxisIndexEnum.Z_Axis">
 -----------------------------------------------------------------------------
 <summary>
 Z axis
 </summary>
 <remarks>
 Valid for Tool offset ONLY.
 </remarks>
 <history>
 	[Lhuynh]	1/24/2007	Created
 </history>
 -----------------------------------------------------------------------------
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.ToolOffsetAxisIndexEnum.YI_Axis">
 -----------------------------------------------------------------------------
 <summary>
 YI axis
 </summary>
 <remarks>
 Valid for Tool offset ONLY.
 </remarks>
 <history>
 	[Lhuynh]	1/24/2007	Created
 </history>
 -----------------------------------------------------------------------------
</member>
<member name="T:Okuma.CLCMDAPI.Enumerations.ToolSubSystemEnum">
 -----------------------------------------------------------------------------
 <summary>
 Tool Sub System
 </summary>
 <remarks>
 </remarks>
 <history>
 	[lhuynh]	6/24/2013	Created
 </history>
 -----------------------------------------------------------------------------
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.ToolSubSystemEnum.NC_AL">
 -----------------------------------------------------------------------------
 <summary>
 <para>If applicable, the machine data will be for:</para>
 <para> - A Turret of first machine/R side of 2 sides machine</para>
 <para> - Main spindle of first machine/R side of 2 sides machine</para>
 </summary>
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.ToolSubSystemEnum.NC_AR">
 -----------------------------------------------------------------------------
 <summary>
 <para>If applicable, the machine data will be for:</para>
 <para> - A Turret of first machine/left side of 2 sides machine</para>
 <para> - Sub/second spindle of first machine/left side of 2 sides machine</para>
 <para> - Required Sub spindle specification </para>
 </summary>
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.ToolSubSystemEnum.NC_BL">
 -----------------------------------------------------------------------------
 <summary>
 <para>If applicable, the machine data will be for:</para>
 <para> - B Turret of first machine/left side of 2 sides machine</para>
 <para> - Main spindle of first machine/left side of 2 sides machine</para>
 <para> - Required 4-axis and 2 Turrets specification </para>
 </summary>
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.ToolSubSystemEnum.NC_BR">
 -----------------------------------------------------------------------------
 <summary>
 <para>If applicable, the machine data will be for:</para>
 <para> - B Turret of first machine/left side of 2 sides machine</para>
 <para> - Sub/second spindle of first machine/left side of 2 sides machine</para>
 <para> - Required Sub spindle and 4-axis and 2 Turrets specification </para>
 </summary>
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.ToolSubSystemEnum.NC_2AL">
 -----------------------------------------------------------------------------
 <summary>
 <para>If applicable, the machine data will be for:</para>
 <para> - A Turret of second machine/L side of 2 sides machine</para>
 <para> - Main spindle of second machine/L side of 2 sides machine</para>
 <para> - Required parallel 2 spindles specification </para>
 </summary>
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.ToolSubSystemEnum.NC_CL">
 -----------------------------------------------------------------------------
 <summary>
 <para> If applicable, the machine data will be for:</para>
 <para> - C Turret of first machine</para>
 <para> - Main spindle of first machine</para>
 <para> - Required 3 Turrets specification </para>
 </summary>
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.ToolSubSystemEnum.NC_CR">
 -----------------------------------------------------------------------------
 <summary>
 <para> If applicable, the machine data will be for:</para>
 <para> - C Turret of first machine</para>
 <para> - Sub/second spindle of first machine</para>
 <para> - Required Sub spindle and 3 Turrets specification </para>
 </summary>
</member>
<member name="T:Okuma.CLCMDAPI.Enumerations.ToolLocationEnum">
 -----------------------------------------------------------------------------
 <summary>
    Represent different tool locations. 
 </summary>
 <remarks>
 Per tool location it is applicable per machine specification.
 </remarks>
 <history>
 	[lhuynh]	5/7/2013	Created
 </history>
 -----------------------------------------------------------------------------
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.ToolLocationEnum.A_Turret">
 <summary>
 A turret.
 </summary>
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.ToolLocationEnum.B_Turret">
 <summary>
 B turret.
 </summary>
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.ToolLocationEnum.C_Turret">
 <summary>
 C turret.
 </summary>
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.ToolLocationEnum.Magazine">
 <summary>
 ATC Magazine
 </summary>
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.ToolLocationEnum.H1_Turret">
 <summary>
 H1 turret on P300 S machine only.
 </summary>
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.ToolLocationEnum.A2_Turret">
 <summary>
 A turret of second machine
 </summary>
</member>
<member name="T:Okuma.CLCMDAPI.Enumerations.ToolCuttingPositionEnum">
 <summary>
 Represents 20 tool cutting positions.
 </summary> 
 <Figure>
 <para>
 <img src="../media/Lathe.P300.TD.ToolDataSetting.ToolIndexList.jpg"/>
 </para>
 </Figure>
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.ToolCuttingPositionEnum.CuttingPosition_1">
 <summary>
 First Spindle (Principal axis 1) Position 1/Base A/ BA = 0 
 </summary>
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.ToolCuttingPositionEnum.CuttingPosition_2">
 <summary>
 First Spindle (Principal axis 1) Position 2/Base B/ BA = 0 
 </summary>
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.ToolCuttingPositionEnum.CuttingPosition_3">
 <summary>
 First Spindle (Principal axis 1) Position 3/Base A/ BA =45 
 </summary>
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.ToolCuttingPositionEnum.CuttingPosition_4">
 <summary>
 First Spindle (Principal axis 1) Position 4/Base B/ BA =45 
 </summary>
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.ToolCuttingPositionEnum.CuttingPosition_5">
 <summary>
 First Spindle (Principal axis 1) Position 5/Vertical A/ BA =0
 </summary>
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.ToolCuttingPositionEnum.CuttingPosition_6">
 <summary>
 First Spindle (Principal axis 1) Position 6/Vertical B/ BA =0					
 </summary>
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.ToolCuttingPositionEnum.CuttingPosition_7">
 <summary>
 Second Spindle (Principal axis 2) Position 7/Base A/ BA =0
 </summary>
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.ToolCuttingPositionEnum.CuttingPosition_8">
 <summary>
 Second Spindle (Principal axis 2) Position 8/Base B/ BA =0
 </summary>
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.ToolCuttingPositionEnum.CuttingPosition_9">
 <summary>
 Second Spindle (Principal axis 2) Position 9/Base A/ BA =45
 </summary>
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.ToolCuttingPositionEnum.CuttingPosition_10">
 <summary>
 Second Spindle (Principal axis 2) Position 10/Base B/ BA =45
 </summary>
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.ToolCuttingPositionEnum.CuttingPosition_11">
 <summary>
 Second Spindle (Principal axis 2) Position 11/Vertical A/ BA =0
 </summary>
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.ToolCuttingPositionEnum.CuttingPosition_12">
 <summary>
 Second Spindle (Principal axis 2) Position 12/Vertical B/ BA =0
 </summary>
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.ToolCuttingPositionEnum.CuttingPosition_13">
 <summary>
 Cutting Position 13
 </summary>
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.ToolCuttingPositionEnum.CuttingPosition_14">
 <summary>
 Cutting Position 14
 </summary>
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.ToolCuttingPositionEnum.CuttingPosition_15">
 <summary>
 Cutting Position 15
 </summary>
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.ToolCuttingPositionEnum.CuttingPosition_16">
 <summary>
 Cutting Position 16
 </summary>
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.ToolCuttingPositionEnum.CuttingPosition_17">
 <summary>
 Cutting Position 17
 </summary>
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.ToolCuttingPositionEnum.CuttingPosition_18">
 <summary>
 Cutting Position 18
 </summary>
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.ToolCuttingPositionEnum.CuttingPosition_19">
 <summary>
 Cutting Position 19
 </summary>
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.ToolCuttingPositionEnum.CuttingPosition_20">
 <summary>
 Cutting Position 20
 </summary>
</member>
<member name="T:Okuma.CLCMDAPI.Enumerations.ToolEdgeEnum">
 <summary> Represent the edge number for Multi-Edges Tool specification
 <Figure>
 <para>OSP-P300S: </para>
 <para>Multi-Edges Tool specification is NC spec code [5,3] ON</para>
 <para>12 Edges specification is PLC spec code 2 [34, 0] ON</para>
 <para>8 Edges specification is PLC spec code 2 [34, 1] ON</para>
 <para>4 Edges specification is PLC spec code 2 [34, 4] ON</para>
 <para> ENo
 <img src="../media/Lathe.P300.TD.ToolDataSetting.jpg"/>				
 </para>
 </Figure>
 <Figure>
 <para>OSP-P300L: </para>
 <para>Machines with Multi-Tool spec (NC Spec Code 2 [24, 7] MLTL = ON): It can only support up to 8 edges per tool. </para>
 <para>TOOL DATA - TOOL LIFE MANAGEMENT</para>
 <para>ENO.
 <img src="../media/Lathe.P300L.TLM.MultiTool.NoOfWork.jpg"/>
 </para>
 </Figure>
 </summary> 
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.ToolEdgeEnum.None">
 <summary>
 No Tool Edge  
 </summary>
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.ToolEdgeEnum.ToolEdge_01">
 <summary>
Tool Edge number 1.  
 </summary>
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.ToolEdgeEnum.ToolEdge_02">
 <summary>
 Tool Edge number 2
 </summary>
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.ToolEdgeEnum.ToolEdge_03">
 <summary>
 Tool Edge number 3
 </summary>
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.ToolEdgeEnum.ToolEdge_04">
 <summary>
 Tool Edge number 4
 </summary>
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.ToolEdgeEnum.ToolEdge_05">
 <summary>
 Tool Edge number 5
 </summary>
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.ToolEdgeEnum.ToolEdge_06">
 <summary>
 Tool Edge number 6
 </summary>
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.ToolEdgeEnum.ToolEdge_07">
 <summary>
 Tool Edge number 7
 </summary>
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.ToolEdgeEnum.ToolEdge_08">
 <summary>
 Tool Edge number 8
 </summary>
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.ToolEdgeEnum.ToolEdge_09">
 <summary>
 Tool Edge number 9
 </summary>
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.ToolEdgeEnum.ToolEdge_10">
 <summary>
 Tool Edge number 10
 </summary>
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.ToolEdgeEnum.ToolEdge_11">
 <summary>
 Tool Edge number 11
 </summary>
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.ToolEdgeEnum.ToolEdge_12">
 <summary>
 Tool Edge number 12
 </summary>
</member>
<member name="T:Okuma.CLCMDAPI.Enumerations.BaseCuttingPositionSettingEnum">
 <summary>
 <para>Represent different types of tool cutting position</para>
 <para>B-axis control spec = NC Standard No.8 bit7</para>
 <para>L Tool Index spec = NC Standard No.3 bit4</para>
 </summary>
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.BaseCuttingPositionSettingEnum.None">
 <summary>
 None.  Applicable when B-axis control spec and L Tool Index spec are OFF.
 </summary>
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.BaseCuttingPositionSettingEnum.Base">
 <summary>
 Base position. Applicable when B-axis control spec is ON and L Tool Index spec is OFF.
 </summary>
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.BaseCuttingPositionSettingEnum.Vertical">
 <summary>
 Vertical Position. Applicable when B-axis control spec is ON and L Tool Index spec is OFF.
 </summary>
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.BaseCuttingPositionSettingEnum.Base_A">
 <summary>
 Base A position. Applicable when B-axis control spec is ON and L Tool Index spec is ON.
 </summary>
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.BaseCuttingPositionSettingEnum.Base_B">
 <summary>
 Base B position. Applicable when B-axis control spec is ON and L Tool Index spec is ON.
 </summary>
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.BaseCuttingPositionSettingEnum.Vertical_A">
 <summary>
 Vertical A position. Applicable when B-axis control spec and L Tool Index are ON.
 </summary>
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.BaseCuttingPositionSettingEnum.Vertical_B">
 <summary>
 Vertical B position.  Applicable when B-axis control spec and L Tool Index are ON.
 </summary>
</member>
<member name="T:Okuma.CLCMDAPI.Enumerations.BasicPositionSpindleEnum">
 -----------------------------------------------------------------------------
 <summary>
 Represent Base position of spindle 
 </summary>
 <remarks>
 </remarks>
 <history>
 	[lhuynh]	6/14/2013	Created
 </history>
 -----------------------------------------------------------------------------
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.BasicPositionSpindleEnum.None">
 <summary> 
 <para>Applicable if sub spindle spec NC spec [4,1] is OFF</para>
 </summary>
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.BasicPositionSpindleEnum.Spindle_1">
 <summary>
 First spindle - Applicable if sub spindle spec NC spec [4,1] is ON 
 </summary>
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.BasicPositionSpindleEnum.Spindle_2">
 <summary>
 Second spindle.   - Applicable if sub spindle spec NC[4,1] is ON
 </summary>
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.BasicPositionSpindleEnum.Spindle_12">
 <summary>
 <para>OSP-P300S - Not applicable</para>
 <para>OSP-P300L: 1 and 2 spindle - Applicable if sub spindle spec NC[4,1] is ON</para>
 </summary>
</member>
<member name="T:Okuma.CLCMDAPI.Enumerations.TurretKindSettingEnum">
 -----------------------------------------------------------------------------
 <summary>
 Represents turrent kind
 </summary>
 <remarks>
 </remarks>
 <history>
 	[lhuynh]	6/13/2013	Created
 </history>
 -----------------------------------------------------------------------------
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.TurretKindSettingEnum.TurretKind_1">
 <summary>
 <para>OSP-P300S - H1 Turret</para>
 <para>OSP-P300L - A Turret</para>
 </summary>
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.TurretKindSettingEnum.TurretKind_2">
 <summary>
 <para>OSP-P300S - V Turret</para>
 <para>OSP-P300L - B Turret</para>
 </summary>
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.TurretKindSettingEnum.TurretKind_3">
 <summary>
 <para>OSP-P300L - C Turret</para>
 </summary>
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.TurretKindSettingEnum.TurretKind_4">
 <summary>
 <para>OSP-P300L - A Turret on L side of machine.  Applicable for dual side machine machine specification only.</para>
 </summary>
</member>
<member name="T:Okuma.CLCMDAPI.Enumerations.UserAlarmSubSystemEnum">
 -----------------------------------------------------------------------------
 <summary>
 Represents User Alarm Sub systems
 </summary>
 <remarks>
 </remarks>
 <history>
 	[Lhuynh]	11/7/2012	Created
 </history>
 -----------------------------------------------------------------------------
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.UserAlarmSubSystemEnum.All">
 <summary>
 All systems if applicable
 </summary>
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.UserAlarmSubSystemEnum.Machine_1">
 <summary>
 <para> First machine/Right side of machine on single/dual sides machine spec</para> 
 </summary>
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.UserAlarmSubSystemEnum.Machine_2">
 <summary>
 <para> Second machine/Left side of machine on dual sides machine spec</para> 
 <para> Required machine with Parallel 2 spindles specification</para> 
 </summary>
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.UserAlarmSubSystemEnum.Loader_1">
 <summary>
 <para> First Loader/Right Loader on single/dual sides machine spec</para> 
 <para> Required machine with Loader specification</para> 
 </summary>
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.UserAlarmSubSystemEnum.Loader_2">
 <summary>
 <para> Second Loader/Left Loader on dual sides machine spec</para> 
 <para> Required machine with Parallel 2 spindles/Loaders/2 Carriers specification</para> 
 </summary>
</member>
<member name="T:Okuma.CLCMDAPI.Enumerations.UserAlarmEnum">
 -----------------------------------------------------------------------------
 <summary>
 Represents User Alarm level
 </summary>
 <remarks>
 </remarks>
 <history>
 	[Lhuynh]	10/10/2012	Created
 </history>
 -----------------------------------------------------------------------------
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.UserAlarmEnum.D">
 <summary>
 Alarm D
 </summary>
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.UserAlarmEnum.C">
 <summary>
 Alarm C
 </summary>
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.UserAlarmEnum.B">
 <summary>
 Alarm B
 </summary>
</member>
<member name="T:Okuma.CLCMDAPI.Enumerations.ToolIDOffsetTypeEnum">
 -----------------------------------------------------------------------------
 <summary>
 Specifies the offset type to be 
 </summary>
 <remarks>
 </remarks>
 <history>
 	[Lhuynh]	1/20/2007	Created
 </history>
 -----------------------------------------------------------------------------
</member>
<member name="T:Okuma.CLCMDAPI.Enumerations.TurretEnum">
 <summary>
 Specify turret side of machine
 </summary>
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.TurretEnum.A_Turret">
 <summary>
 A Turret
 </summary>
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.TurretEnum.B_Turret">
 <summary>
 B Turret
 </summary>
</member>
<member name="T:Okuma.CLCMDAPI.Enumerations.ToolIDSettingToolSizeEnum">
 <summary>
 Specify tool size for a registered tool
 </summary>
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.ToolIDSettingToolSizeEnum.None">
 <summary>
 No attribute
 </summary>
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.ToolIDSettingToolSizeEnum.E_Tool">
 <summary>
 Super Large diameter tool
 </summary>
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.ToolIDSettingToolSizeEnum.BR_Tool">
 <summary>
 BR tool size  (Right Side large tool)
 </summary>
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.ToolIDSettingToolSizeEnum.B_Tool">
 <summary>
 B Tool size (Left Side large tool)
 </summary>
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.ToolIDSettingToolSizeEnum.SL_Tool">
 <summary>
 Large Diameter tool and represented as 'SL'
 </summary>
</member>
<member name="T:Okuma.CLCMDAPI.Enumerations.ToolIDSettingToolKindEnum">
 <summary>
 Specify tool kind for a registered tool
 </summary>
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.ToolIDSettingToolKindEnum.M_Tool">
 <summary>
 A M tool
 </summary>
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.ToolIDSettingToolKindEnum.L_Tool">
  <summary>
 A L tool.
 </summary>
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.ToolIDSettingToolKindEnum.SensorTool">
 <summary>
 Sensor tool
 </summary>
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.ToolIDSettingToolKindEnum.DummyTool">
 <summary>
 A dummy tool
 </summary>
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.ToolIDSettingToolKindEnum.MultiPoint">
 <summary>
 Multi-point Tool
 </summary>
</member>
<member name="T:Okuma.CLCMDAPI.Enumerations.FeatureSetEnum">
 -----------------------------------------------------------------------------
 <summary>
 
 Feature Set enumeration
 </summary>
 <remarks>
 </remarks>
 <history>
 	[Lhuynh]	3/25/2008	Created
 </history>
 -----------------------------------------------------------------------------
</member>
<member name="T:Okuma.CLCMDAPI.Enumerations.TurretStationEnum">
 <summary>
 Represents Turret stations
 </summary>
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.TurretStationEnum.TurretStationNo1">
 <summary>
 Station 1
 </summary>
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.TurretStationEnum.TurretStationNo2">
 <summary>
 Station 2
 </summary>
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.TurretStationEnum.TurretStationNo3">
 <summary>
 Station 3
 </summary>
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.TurretStationEnum.TurretStationNo4">
 <summary>
 Station 4
 </summary>
</member>
<member name="T:Okuma.CLCMDAPI.Enumerations.ReturnMagazineEnum">
 <summary>
 Specify the return magazine for a registered tool for multi-magazine specification machine.
 </summary>
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.ReturnMagazineEnum.MG1">
 <summary>
 First Magazine
 </summary>
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.ReturnMagazineEnum.MG2">
 <summary>
 Second magazine
 </summary>
</member>
<member name="T:Okuma.CLCMDAPI.Enumerations.SettingToolSizeEnum">
 <summary>
 <para>Specify tool size for a registered tool.</para>
 <para>OSP-P300L: Not applicable</para>
 </summary>
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.SettingToolSizeEnum.SL_Tool">
 <summary>
 <para>Large Diameter tool and can only support on MULTUS machines equipped with ATC Type G or H.  </para>
 <para>ATC Type G ---- PLC spec No. 23, bit 2. Use CSpec.GetPLCSpecCode to check for its spec code</para>
 <para>ATC Type H ---- PLC spec No. 15, bit 4. Use CSpec.GetPLCSpecCode to check for its spec code</para>
 <para>Not valid for Matrix Magazine ATC Type. Use CATC.GetMagazineProperty function to check for its magazine type</para>
 <para>***** For OSPSpecEnum.DualChainedMagazineVTRA spec. on OSP-P300 S or newer controls: Large Tool, Non-Heavy Tool. (L)</para>
 </summary>
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.SettingToolSizeEnum.H_Tool">
 <summary>
 Heavy Tool. ATC arm acceleration/deceleration is reduced.
 <para>***** For OSPSpecEnum.DualChainedMagazineVTRA spec. on OSP-P300 S or newer controls: Not Large tool. Heavy tool (H)</para>
 </summary>
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.SettingToolSizeEnum.E_Tool">
 <summary>
 Large diameter tool.
 <para>***** For OSPSpecEnum.DualChainedMagazineVTRA spec. on OSP-P300 S or newer controls: Large Tool and Heavy Tool (L/H)</para>
 </summary>
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.SettingToolSizeEnum.B_Tool">
 <summary>
 Super Large diameter tool left
 </summary>
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.SettingToolSizeEnum.BR_Tool">
 <summary>
 Right-Large diameter tool
 </summary>
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.SettingToolSizeEnum.Standard">
 <summary>
 Standard tool.
 <para>***** For OSPSpecEnum.DualChainedMagazineVTRA spec. on OSP-P300 S or newer controls: Not Large and Not Heavy Tool</para>
 </summary>
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.SettingToolSizeEnum.ME_Tool">
 <summary>
 ME Super-Large Diameter tool. It is applicable when Extended Magazine Tool Data PLC3 spec code [72,7] is ON
 Note: Physical pots on magazine must be designated for large tool in order to be valid and can be varied per machine spec.
 All tools having either one of these attributes ME, MR, or ML can share its dummy pots with each other.
 For example: Tool 309, 311, and 313 with ML, ME, and MR attribute, respectively can be inserted into magazine pot 309, 311, 313, respectively
 </summary>
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.SettingToolSizeEnum.ML_Tool">
 <summary>
 ML Left-Large Diameter Tool. It is applicable when Extended Magazine Tool Data PLC3 spec code [72,7] is ON
 Note: Physical pots on magazine must be designated for large tool in order to be valid and can be varied per machine spec.
 All tools having either one of these attributes ME, MR, or ML can share its dummy pots with each other.
 For example: Tool 309, 311, and 313 with ML, ME, and MR attribute, respectively can be inserted into magazine pot 309, 311, 313, respectively
 </summary>
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.SettingToolSizeEnum.MR_Tool">
 <summary>
 MR Right-Large Diameter Tool. It is applicable when Extended Magazine Tool Data PLC3 spec code [72,7] is ON
 Note: Physical pots on magazine must be designated for large tool in order to be valid and can be varied per machine spec.
 All tools having either one of these attributes ME, MR, or ML can share its dummy pots with each other.
 For example: Tool 309, 311, and 313 with ML, ME, and MR attribute, respectively can be inserted into magazine pot 309, 311, 313, respectively
 </summary>
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.SettingToolSizeEnum.SpecialTool">
 <summary>
 Special Tool
 </summary>
</member>
<member name="T:Okuma.CLCMDAPI.Enumerations.SettingToolKindEnum">
 <summary>
 Specify tool kind for a registered tool
 </summary>
 <history>
 	[Lhuynh] 08/29/2019	Revised for USNR machine spec with ATC Panel functions. add 5, 6
 </history>
 -----------------------------------------------------------------------------
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.SettingToolKindEnum.DummyTool">
 <summary>
 A dummy tool. 
 <para>Not valid for multi-edges tool (Tool Edge > 0) </para>
 </summary>
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.SettingToolKindEnum.L_Tool">
  <summary>
 A Lathe tool.
 <para>
 For OSP-P300 L:
 <para>Valid for tool assign to A Turret when NC spec No.3 bit 0 is ON </para>
 <para>Valid for tool assign to B Turret when NC spec No.3 bit 0 is ON </para>
 <para>Valid for tool assign to C Turret when NC spec No.3 bit 0 is ON </para>
 </para>    
 <para>
 <para>***** For OSPSpecEnum.DualChainedMagazineVTRA spec. on OSP-P300 S or newer controls: *****</para>
 </para>
 <para>Valid for tool assign to magazine with Dual magazine VTR-A machine with the following specs must be ON:</para>
 <para>PLC1 No.26 bit4   MULTI - MAGAZINE</para>
 <para>PLC2 No.30 bit0   MCTYPE VTR - A</para>         
 </summary>
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.SettingToolKindEnum.M_Tool">
 <summary>
 A Milling tool
 <para>Valid for tool assign to A Turret when CCM(NC1 No.3 bit0)=ON and MWOC(NC1 No.3 bit2)=OFF</para>
 <para>Valid for tool assign to B Turret when BRTL(NC1 No.3 bit1)=ON and BCWOM(NC2 No.26 bit2)=OFF </para>
 <para>Valid for tool assign to C Turret when CTSP(NC2 No.21 bit5)=ON </para>   
 <para>
 <para>***** For OSPSpecEnum.DualChainedMagazineVTRA spec. on OSP-P300 S or newer controls: *****</para>
 </para>
 <para>Valid for tool assign to magazine with Dual magazine VTR-A machine with the following specs must be ON:</para>
 <para>PLC1 No.26 bit4   MULTI - MAGAZINE</para>
 <para>PLC2 No.30 bit0   MCTYPE VTR - A</para>         
 </summary>
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.SettingToolKindEnum.SensorTool">
 <summary>
 A Sensor tool      
 <para>
 <para>***** For OSPSpecEnum.DualChainedMagazineVTRA spec. on OSP-P300 S or newer controls: *****</para>
 </para>
 <para>Valid for tool assign to magazine with Dual magazine VTR-A machine with the following specs must be ON:</para>
 <para>PLC1 No.26 bit4   MULTI - MAGAZINE</para>
 <para>PLC2 No.30 bit0   MCTYPE VTR - A</para>         
 </summary>
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.SettingToolKindEnum.LMDNozzle">
 <summary>
 A LMD Nozzle 
 </summary>
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.SettingToolKindEnum.GrindingTool">
 <summary>
 A grinding tool
 </summary>
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.SettingToolKindEnum.VTR_Through">
 <summary>
 VTR Through tool
 <para>
 <para>***** For OSPSpecEnum.DualChainedMagazineVTRA spec. on OSP-P300 S or newer controls: *****</para>
 </para>
 <para>Valid for tool assign to magazine with Dual magazine VTR-A machine with the following specs must be ON:</para>
 <para>PLC1 No.26 bit4   MULTI - MAGAZINE</para>
 <para>PLC2 No.30 bit0   MCTYPE VTR - A</para>        
 </summary>
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.SettingToolKindEnum.VTR_SideThrough">
 <summary>
 VTR Side Through tool
 <para>
 <para>***** For OSPSpecEnum.DualChainedMagazineVTRA spec. on OSP-P300 S or newer controls: *****</para>
 </para>
 <para>Valid for tool assign to magazine with Dual magazine VTR-A machine with the following specs must be ON:</para>
 <para>PLC1 No.26 bit4   MULTI - MAGAZINE</para>
 <para>PLC2 No.30 bit0   MCTYPE VTR - A</para>        
 </summary>
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.SettingToolKindEnum.VTR_Attachment">
 <summary>
 VTR Attachment Tool
 <para>
 <para>***** For OSPSpecEnum.DualChainedMagazineVTRA spec. on OSP-P300 S or newer controls: *****</para>
 </para>
 <para>Valid for tool assign to magazine with Dual magazine VTR-A machine with the following specs must be ON:</para>
 <para>PLC1 No.26 bit4   MULTI - MAGAZINE</para>
 <para>PLC2 No.30 bit0   MCTYPE VTR - A</para>        
 </summary>
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.SettingToolKindEnum.VTR_SpecialInnerDiameterTurning">
 <summary>
 VTR Special Inner Diameter Turning
 <para>
 <para>***** For OSPSpecEnum.DualChainedMagazineVTRA spec. on OSP-P300 S or newer controls: *****</para>
 </para>
 <para>Valid for tool assign to magazine with Dual magazine VTR-A machine with the following specs must be ON:</para>
 <para>PLC1 No.26 bit4   MULTI - MAGAZINE</para>
 <para>PLC2 No.30 bit0   MCTYPE VTR - A</para>        
 </summary>
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.SettingToolKindEnum.VTR_SpecialOuterDiameterTurning">
 <summary>
 VTR Special Outer Diameter Turning
 <para>
 <para>***** For OSPSpecEnum.DualChainedMagazineVTRA spec. on OSP-P300 S or newer controls: *****</para>
 </para>
 <para>Valid for tool assign to magazine with Dual magazine VTR-A machine with the following specs must be ON:</para>
 <para>PLC1 No.26 bit4   MULTI - MAGAZINE</para>
 <para>PLC2 No.30 bit0   MCTYPE VTR - A</para>        
 </summary>
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.SettingToolKindEnum.VTR_Adapter">
 <summary>
 VTR Adapter Tool
 <para>
 <para>***** For OSPSpecEnum.DualChainedMagazineVTRA spec. on OSP-P300 S or newer controls: *****</para>
 </para>
 <para>Valid for tool assign to magazine with Dual magazine VTR-A machine with the following specs must be ON:</para>
 <para>PLC1 No.26 bit4   MULTI - MAGAZINE</para>
 <para>PLC2 No.30 bit0   MCTYPE VTR - A</para>        
 </summary>
</member>
<member name="T:Okuma.CLCMDAPI.Enumerations.FunctionIndexEnum">
 -----------------------------------------------------------------------------
 <summary>
 Function Index enumeration
 </summary>
 <remarks>
 </remarks>
 <history>
 	[Lhuynh]	3/25/2008	Created
 </history>
 -----------------------------------------------------------------------------
 
</member>
<member name="T:Okuma.CLCMDAPI.Enumerations.ControlTypeEnum">
 -----------------------------------------------------------------------------
 <summary>
 Control type enumeration
 </summary>
 <remarks>
 </remarks>
 <history>
 	[Lhuynh]	3/25/2008	Created
 	[Lhuynh]	02/18/2013	Change to public type 
 </history>
 -----------------------------------------------------------------------------
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.ControlTypeEnum.None">
 <summary>
 Un-determined control type
 </summary>        
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.ControlTypeEnum.P100">
 <summary>
 P100 Type II OSP-P control 
 </summary>
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.ControlTypeEnum.P200">
 <summary>
 P200 OSP-P control 
 </summary>
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.ControlTypeEnum.P300SLP">
 <summary>
 P300 Special Lathe OSP-P control 
 </summary>
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.ControlTypeEnum.P300L">
 <summary>
 P300 Lathe OSP-P control 
 </summary>
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.ControlTypeEnum.P300SMP">
 <summary>
 P300 Special Machining Center OSP-P control 
 </summary>
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.ControlTypeEnum.P300M">
 <summary>
 P300 Machining Center OSP-P control 
 </summary>
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.ControlTypeEnum.P300G">
 <summary>
 P300 Grinder OSP-P control 
 </summary>
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.ControlTypeEnum.P500SLP">
 <summary>
 P500S OSP-P control 
 </summary>
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.ControlTypeEnum.P500L">
 <summary>
 P500L OSP-P control 
 </summary>
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.ControlTypeEnum.P500SMP">
 <summary>
 P500SM OSP-P control 
 </summary>
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.ControlTypeEnum.P500M">
 <summary>
 P500M OSP-P control 
 </summary>
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.ControlTypeEnum.P500G">
 <summary>
 P500G OSP-P control 
 </summary>
</member>
<member name="T:Okuma.CLCMDAPI.Enumerations.DataUnitEnum">
 -----------------------------------------------------------------------------
 <summary>
 Specified the data unit to be used in function for conversion, if applicable
 </summary>
 <remarks>
 </remarks>
 <history>
 	[Lhuynh]	1/18/2007	Created
 </history>
 -----------------------------------------------------------------------------
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.DataUnitEnum.Unit_mm">
 -----------------------------------------------------------------------------
 <summary>
 Millimeter unit
 </summary>
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.DataUnitEnum.Unit_Inch">
 -----------------------------------------------------------------------------
 <summary>
 Inch unit
 </summary>
</member>
<member name="T:Okuma.CLCMDAPI.Enumerations.PanelGroupEnum">
 -----------------------------------------------------------------------------
 <summary>
 Specified the panel name
 </summary>
 <remarks>
 </remarks>
 <history>
 	[Lhuynh]	1/18/2007	Created
 </history>
 -----------------------------------------------------------------------------
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.PanelGroupEnum.OperationMode">
 -----------------------------------------------------------------------------
 <summary>
 Mode at which NC is under either Auto/MDI/Manual mode.
 </summary>
 <remarks>
 Auto/MDI/Manual mode cannot be changed by this panel mode, but the screen can be changed while NC in one of these modes.
 <para>For example, screen can be changed from ACTUAL POSITION to MAIN PROGRAM.</para>
 </remarks>   
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.PanelGroupEnum.ProgramMode">
 -----------------------------------------------------------------------------
 <summary>
 In this mode program and data files can be edited, input/output, displayed, and deleted
 </summary>
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.PanelGroupEnum.ParameterMode">
 -----------------------------------------------------------------------------
 <summary>
 In this mode the parameter data necessary for numerical control can be set, changed, an displayed.
 </summary>
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.PanelGroupEnum.ZeroSetMode">
 -----------------------------------------------------------------------------
 <summary>
 In this mode the zero offset data and zero offset shift data which define a program coordinate
 system can be set, changed, or checked.
 </summary>
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.PanelGroupEnum.ToolDataSettingMode">
 -----------------------------------------------------------------------------
 <summary>
 In this mode the tool offset data, nose radius compensation data, tool shape data, and load monitor
 data can be set, changed, or displayed
 </summary>
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.PanelGroupEnum.MacManMode">
 -----------------------------------------------------------------------------
 <summary>
 In this mode the machining management function can be used.
 </summary>
</member>
<member name="T:Okuma.CLCMDAPI.Enumerations.CuttingPositionEnum">
 -----------------------------------------------------------------------------
 <summary>
 Specifies the cutting position in relation of tool index, turrent index, and spindle position
 </summary>
 <Figure>
 <para>
 <img src="../media/Lathe.Multi.CuttingPosition.jpg"/>
 </para>
 </Figure>
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.CuttingPositionEnum.PrincipalAxis1_BaseA">
 -----------------------------------------------------------------------------
 <summary>
 First Spindle (Principal axis 1) Base position, Side A
 </summary>
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.CuttingPositionEnum.PrincipalAxis1_BaseB">
 -----------------------------------------------------------------------------
 <summary>
 First Spindle (Principal axis 1) Base position, Side B
 </summary>
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.CuttingPositionEnum.PrincipalAxis1_VerticalA">
 -----------------------------------------------------------------------------
 <summary>
 First Spindle (Principal axis 1) Vertical position, Side A
 </summary>
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.CuttingPositionEnum.PrincipalAxis1_VerticalB">
 -----------------------------------------------------------------------------
 <summary>
 First Spindle (Principal axis 1) Vertical position, Side B
 </summary>
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.CuttingPositionEnum.PrincipalAxis2_BaseA">
 -----------------------------------------------------------------------------
 <summary>
 Second Spindle (Principal axis 2) Base position, Side A
 </summary>
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.CuttingPositionEnum.PrincipalAxis2_BaseB">
 -----------------------------------------------------------------------------
 <summary>
 Second Spindle (Principal axis 2) Base position, Side B
 </summary>
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.CuttingPositionEnum.PrincipalAxis2_VerticalA">
 -----------------------------------------------------------------------------
 <summary>
 Second Spindle (Principal axis 2) Vertical position, Side A
 </summary>
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.CuttingPositionEnum.PrincipalAxis2_VerticalB">
 -----------------------------------------------------------------------------
 <summary>
 Second Spindle (Principal axis 2) Vertical position, Side B
 </summary>
</member>
<member name="T:Okuma.CLCMDAPI.Enumerations.SensorDirectionEnum">
 -----------------------------------------------------------------------------
 <summary>
 Specifies the sensor direction for using in CTools.MeasureCalculateToolOffset
 </summary>
 <remarks>
 </remarks>
 <history>
 	[Lhuynh]	1/20/2007	Created
 </history>
 -----------------------------------------------------------------------------
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.SensorDirectionEnum.PositiveDirection">
 -----------------------------------------------------------------------------
 <summary>
 Positive (+) The direction of a sensor( Machine)
 </summary>
 <remarks>
 </remarks>
 <history>
 	[Lhuynh]	1/20/2007	Created
 </history>
 -----------------------------------------------------------------------------
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.SensorDirectionEnum.NegativeDirection">
 -----------------------------------------------------------------------------
 <summary>
 Negative (-) The direction of a sensor( Machine)
 </summary>
 <remarks>
 </remarks>
 <history>
 	[Lhuynh]	1/20/2007	Created
 </history>
 -----------------------------------------------------------------------------
</member>
<member name="T:Okuma.CLCMDAPI.Enumerations.OffsetTypeEnum">
 -----------------------------------------------------------------------------
 <summary>
 Specifies the offset type to be 
 </summary>
 <remarks>
 </remarks>
 <history>
 	[Lhuynh]	1/20/2007	Created
 </history>
 -----------------------------------------------------------------------------
</member>
<member name="T:Okuma.CLCMDAPI.Enumerations.OffsetAxisIndexEnum">
 -----------------------------------------------------------------------------
 <summary>
 Specifies list of available axes for Add/Subtract/Cal tool offset.
 </summary>
 ''' <history>
 	[Lhuynh]	1/20/2007	Created
 </history>
 -----------------------------------------------------------------------------
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.OffsetAxisIndexEnum.X_Axis">
 -----------------------------------------------------------------------------
 <summary>
 X axis
 </summary>
 <remarks>
 </remarks>
 <history>
 	[Lhuynh]	1/24/2007	Created
 </history>
 -----------------------------------------------------------------------------
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.OffsetAxisIndexEnum.Z_Axis">
 -----------------------------------------------------------------------------
 <summary>
 Z axis
 </summary>
 <remarks>
 </remarks>
 <history>
 	[Lhuynh]	1/24/2007	Created
 </history>
 -----------------------------------------------------------------------------
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.OffsetAxisIndexEnum.YI_Axis">
 -----------------------------------------------------------------------------
 <summary>
 YI axis
 </summary>
 <remarks>
 Valid for Tool offset ONLY.
 </remarks>
 <history>
 	[Lhuynh]	1/24/2007	Created
 </history>
 -----------------------------------------------------------------------------
</member>
<member name="T:Okuma.CLCMDAPI.Enumerations.OffsetAxisIndex2Enum">
 -----------------------------------------------------------------------------
 <summary>
 Specifies list of available axes for Add/Subtract/Measure/Calculate for Nose Radius Compensation, and Tool Wear.
 </summary>
 <remarks>
 </remarks>
 <history>
 	[Lhuynh]	1/24/2007	Created
 </history>
 -----------------------------------------------------------------------------
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.OffsetAxisIndex2Enum.X_Axis">
 -----------------------------------------------------------------------------
 <summary>
 X axis
 </summary>
 <remarks>
 </remarks>
 <history>
 	[Lhuynh]	1/24/2007	Created
 </history>
 -----------------------------------------------------------------------------
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.OffsetAxisIndex2Enum.Z_Axis">
 -----------------------------------------------------------------------------
 <summary>
 Z axis
 </summary>
 <remarks>
 </remarks>
 <history>
 	[Lhuynh]	1/24/2007	Created
 </history>
 -----------------------------------------------------------------------------
</member>
<member name="T:Okuma.CLCMDAPI.Enumerations.SubSystemEnum">
 <summary>
 <para>List of available sub systems to functions, if applicable.</para> 
 <para>By default, the sub system is NC-AL for every instance of classes in the Okuma.CLCMDAPI.CommandAPI namespace if applicable.</para>
 </summary> 
 <remarks>
 <para></para>
 For Lathe/Multus/Macturn, the machine data area is logically divided into 4 main logical data areas
 as shown in the figure below.
 <Figure>
 <para>
 The following four coordinate systems are available by the combination of 2 turrets and 2 spindles
 <img src="../media/Lathe.SubSystem.2SP2Turrets.jpg"/>
 </para>
 <para>
 The following multi-coordinate systems are available by the combination of 3 turrets and 2 spindles
 <img src="../media/Lathe.SubSystem.2SP3Turrets.jpg"/>
 </para>
 <para> The chart below shows the validity of each sub system based on machine specification if applicable.
 <img src="../media/Lathe.SubSystemIndexChart.jpg"/>
 </para>
 </Figure>
 <para>*****************************************************</para>
 <para> Application Notes 1:</para> 
 The following subsystem should be never used for getting/setting distinctive logical data.
 It can be used for displaying purpose since these subsystems will 
 return values based on current Panel selection or Program Command Selection on NC.
 <para>NC-RUN,NC-RUN-1/2/3, NC-PANEL, NC-PANEL-1/2/3</para>
 <para>*****************************************************</para>
 <para> Application Notes 2:</para> 
 To assure that you are always get/set the same logical data areas 
 mentioned above you can always set the subsystem accordingly.
 <para>For example:</para>
 <para> 1/ Machine equipped with main spindle and single turret:</para>  
 <para> NC-AL => Data area in the upper left corner as shown in figure</para>
 <para></para>
 <para> 2/ Machine equipped with multiple spindles and turrets:</para>  
 <para> NC-AL => Data area in the upper left corner as shown in figure</para>
 <para> NC-AR => Data area in the upper right corner as shown in figure</para>
 <para> NC-BL => Data area in the lower left corner as shown in figure</para>
 <para> NC-BR => Data area in the lower right corner as shown in figure</para>
 <para> NC-CL => Data area in the upper left corner as shown in figure</para>
 <para> NC-CR => Data area in the upper right corner as shown in figure</para>
 <para></para>
 <para> 3/ Machine equipped with main spindle, sub spindle, and single turret</para> 
 <para> NC-AL => Data area in the upper left corner as shown in figure</para>
 <para> NC-AR => Data area in the upper right corner as shown in figure</para>
 <para></para>
 <para>4/ NC-RUN-1/2/3 should not be used on certain machine data 
 in this machine configuration since it depends on Program Command G140 
 or G141 (spindle selection) which gets/sets data differently.</para>
 <para></para>
 <para> 
 5/ For machine that has left and right side or parallel 2 spindles 
 specification, the sub system NC-2-AL is used to designate the upper 
 left data area on second side of machine which is the L side.  
 The R side machine can be addressed by other subsystem as normal single 
 side machine.
 </para>
 <para>*****************************************************</para>
 <para>Application Notes 3:</para>
 <para> Not all machines support all subsystems.</para>
 <para> It is necessary to specify the sub system to obtain different machine data if applicable.</para>
 <para>For example:</para>
 <para>In order to get tool offset values for machine that has 3 turrets - A, B, and C turret, the sub system must be set for A, B, and C turret as shown below:  </para>
 <para> objToolsAL.SetSubSystem(SubSystemEnum.NC_AL) 'set current subsystem to A Turret</para>
 <para> objToolsAL.GetToolOffset(intOffsetIndex, enAxisIndex) 'obtain tool offset value in A turret for the specified offset index and axis index</para>
 <para> objToolsBL.SetSubSystem(SubSystemEnum.NC_BL) 'set current subsystem to B Turret</para>
 <para> objToolsBL.GetToolOffset(intOffsetIndex, enAxisIndex) 'obtain tool offset value in B turret for the specified offset index and axis index</para>
 <para> objToolsCL.SetSubSystem(SubSystemEnum.NC_CL) 'set current subsystem to C Turret</para>
 <para> objToolsCL.GetToolOffset(intOffsetIndex, enAxisIndex) 'obtain tool offset value in C turret for the specified offset index and axis index</para>
 <para> objToolsAR.SetSubSystem(SubSystemEnum.NC_AR) 'set current subsystem to A Turret for right spindle</para>
 <para> objToolsAR.GetToolOffset(intOffsetIndex, enAxisIndex) 'obtain tool offset value in A turret for the specified offset index and axis index</para>
 <para> objToolsBR.SetSubSystem(SubSystemEnum.NC_BR) 'set current subsystem to B Turret for right spindle</para>
 <para> objToolsBR.GetToolOffset(intOffsetIndex, enAxisIndex) 'obtain tool offset value in B turret for the specified offset index and axis index</para>
 <para> objToolsCR.SetSubSystem(SubSystemEnum.NC_CR) 'set current subsystem to C Turret for right spindle</para>
 <para> objToolsCR.GetToolOffset(intOffsetIndex, enAxisIndex) 'obtain tool offset value in C turret for the specified offset index and axis index</para>
 <para></para>
 <para> For machine that has only A turret, tool offset value can be obtained by setting sub system to NC-AL.</para>
 <para> A NotSupportedException will be thrown if trying to access tool offset values in B Turret</para>
 <para> By default, the sub system is NC_AL.  The data will be the upper left data area of the machine.</para>
 <para> For 2 sides machines, Left and Right side, the data on second machine or L side of machine can be obtained by specifying NC_2AL.  </para>
 <para> The data on first machine or R side of machine can be obtained by specifying other sub systems.  </para>
 <para>For example:</para>
 <para> objTools1.SetSubSystem(SubSystemEnum.NC_2AL) 'set current subsystem to A turret on second machine (second machine or L side of 2 sides machine)</para>
 <para> objTools1.GetToolOffset(intOffsetIndex, enAxisIndex) 'obtain tool offset value in A turret for the specified offset index and axis index on second machine (L side of 2 sides machine)</para>
 <para>*****************************************************</para>
 <para>Application Notes 4:</para>
 <para>All exceptions generated by API and all set/add/cal functions will be logged.  Therefore, the application must be designed to minimize</para> 
 <para>unnecessary log by utilizing Object-Oriented Programming practices or preventing perform set/add/cal functions in a loop.</para> 
 </remarks>
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.SubSystemEnum.NC_RUN">
 -----------------------------------------------------------------------------
 <summary>
 <para>If applicable, the machine data will be for:</para>
 <para> - Current selection of machine side on NC panel</para>
 <para> - Current selection of turret on NC panel</para>
 <para> - Command selection spindle</para>
 </summary>
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.SubSystemEnum.NC_RUN_1">
 -----------------------------------------------------------------------------
 <summary>
 <para>If applicable, the machine data will be for:</para>
 <para> - A Turret</para>
 <para> - Current selection of machine side on NC panel</para>
 <para> - Command selection spindle</para>
 </summary>
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.SubSystemEnum.NC_RUN_2">
 -----------------------------------------------------------------------------
 <summary>
 <para>If applicable, the machine data will be for:</para>
 <para> - B Turret</para>
 <para> - Current selection of machine side on NC panel</para>
 <para> - Command selection spindle</para>
 <para> - Required 4-axis and 2 Turrets specification </para>
 </summary>
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.SubSystemEnum.NC_PANEL">
 <summary>
 <para>If applicable, the machine data will be for:</para>
 <para> - Current selection of turret on NC panel</para>
 <para> - Current selection of machine side on NC panel</para>
 <para> - Current selection of spindle on NC panel</para>
 </summary>
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.SubSystemEnum.NC_PANEL_1">
 -----------------------------------------------------------------------------
 <summary>
 <para>If applicable, the machine data will be for:</para>
 <para> - A Turret</para>
 <para> - Current selection of machine side on NC panel</para>
 <para> - Current selection of spindle on NC panel</para>
 </summary>
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.SubSystemEnum.NC_PANEL_2">
 -----------------------------------------------------------------------------
 <summary>
 <para>If applicable, the machine data will be for:</para>
 <para> - B Turret</para>
 <para> - Current selection of machine side on NC panel</para>
 <para> - Current selection of spindle on NC panel</para>
 <para> - Required 4-axis and 2 Turrets specification </para>
 </summary>
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.SubSystemEnum.NC_AL">
 -----------------------------------------------------------------------------
 <summary>
 <para>If applicable, the machine data will be for:</para>
 <para> - A Turret of first machine/R side of 2 sides machine</para>
 <para> - Main spindle of first machine/R side of 2 sides machine</para>
 </summary>
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.SubSystemEnum.NC_AR">
 -----------------------------------------------------------------------------
         ''' <summary>
 <para>If applicable, the machine data will be for:</para>
 <para> - A Turret of first machine/R side of 2 sides machine</para>
 <para> - Sub/second spindle of first machine/R side of 2 sides machine</para>
 <para> - Required Sub spindle specification NC spec [4,1] </para>
 </summary>
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.SubSystemEnum.NC_BL">
 -----------------------------------------------------------------------------
 <summary>
 <para>If applicable, the machine data will be for:</para>
 <para> - B Turret of first machine/left side of 2 sides machine</para>
 <para> - Main spindle of first machine/left side of 2 sides machine</para>
 <para> - Required 4-axis and 2 Turrets specification </para>
 </summary>
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.SubSystemEnum.NC_BR">
 -----------------------------------------------------------------------------
 <summary>
 <para>If applicable, the machine data will be for:</para>
 <para> - B Turret of first machine/left side of 2 sides machine</para>
 <para> - Sub/second spindle of first machine/left side of 2 sides machine</para>
 <para> - Required Sub spindle and 4-axis and 2 Turrets specification </para>
 </summary>
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.SubSystemEnum.NC_2AL">
 -----------------------------------------------------------------------------
 <summary>
 <para>If applicable, the machine data will be for:</para>
 <para> - A Turret of second machine/L side of 2 sides machine</para>
 <para> - Main spindle of second machine/L side of 2 sides machine</para>
 <para> - Required parallel 2 spindles specification </para>
 </summary>
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.SubSystemEnum.NC_RUN_3">
 -----------------------------------------------------------------------------
 <summary>
 <para> If applicable, the machine data will be for:</para>
 <para> - C Turret</para>
 <para> - Current selection of machine side on NC panel</para>
 <para> - Command selection spindle</para>
 <para> - Required 3 Turrets specification </para>
 </summary>
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.SubSystemEnum.NC_PANEL_3">
 -----------------------------------------------------------------------------
 <summary>
 <para> If applicable, the machine data will be for:</para>
 <para> - C Turret</para>
 <para> - Current selection of machine side on NC panel</para>
 <para> - Current selection of spindle on NC panel</para>
 <para> - Required 3 Turrets specification </para>
 </summary>
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.SubSystemEnum.NC_CL">
 -----------------------------------------------------------------------------
 <summary>
 <para> If applicable, the machine data will be for:</para>
 <para> - C Turret of first machine</para>
 <para> - Main spindle of first machine</para>
 <para> - Required 3 Turrets specification </para>
 </summary>
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.SubSystemEnum.NC_CR">
 -----------------------------------------------------------------------------
 <summary>
 <para> If applicable, the machine data will be for:</para>
 <para> - C Turret of first machine</para>
 <para> - Sub/second spindle of first machine</para>
 <para> - Required Sub spindle and 3 Turrets specification </para>
 </summary>
</member>
<member name="T:Okuma.CLCMDAPI.Enumerations.SpindleSideEnum">
 -----------------------------------------------------------------------------
 <summary>
 Specifies spindle side on 2 spindles machine spec
 </summary>
 <remarks>
 </remarks>
 <history>
 	[Lhuynh]	10/19/2007	Created
 </history>
 -----------------------------------------------------------------------------
</member>
<member name="T:Okuma.CLCMDAPI.Enumerations.GraphModeEnum">
 -----------------------------------------------------------------------------
 <summary>
 Animate Graph Mode
 </summary>
 <remarks>
 </remarks>
 <history>
 	[Lhuynh]	10/19/2007	Created
 </history>
 -----------------------------------------------------------------------------
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.GraphModeEnum.Standard">
 -----------------------------------------------------------------------------
 <summary>
 Standard graph mode
 </summary>
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.GraphModeEnum.Enlarge">
 -----------------------------------------------------------------------------
 <summary>
 Enlarge graph mode
 </summary>
</member>
<member name="T:Okuma.CLCMDAPI.Enumerations.EnlargeScaleFrameEnum">
 -----------------------------------------------------------------------------
 <summary>
 Enlarge Scale Frame
 </summary>
 <remarks>
 </remarks>
 <history>
 	[Lhuynh]	10/22/2007	Created
 </history>
 -----------------------------------------------------------------------------
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.EnlargeScaleFrameEnum.Enlarge">
 -----------------------------------------------------------------------------
 <summary>
 Enlarge Frame
 </summary>
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.EnlargeScaleFrameEnum.Reduce">
 -----------------------------------------------------------------------------
 <summary>
 Reduce Frame
 </summary>
</member>
<member name="T:Okuma.CLCMDAPI.Enumerations.EnlargeScaleFrameShiftEnum">
 -----------------------------------------------------------------------------
 <summary>
 Enlarge Scale Frame Shift Enumeration
 </summary>
 <remarks>
 </remarks>
 <history>
 	[Lhuynh]	10/22/2007	Created
 </history>
 -----------------------------------------------------------------------------
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.EnlargeScaleFrameShiftEnum.Right">
 -----------------------------------------------------------------------------
 <summary>
 Shift Frame to the Right
 </summary>
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.EnlargeScaleFrameShiftEnum.Left">
 -----------------------------------------------------------------------------
 <summary>
 Shift Frame to the Left
 </summary>
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.EnlargeScaleFrameShiftEnum.Up">
 -----------------------------------------------------------------------------
 <summary>
 Shift Frame up
 </summary>
</member>
<member name="F:Okuma.CLCMDAPI.Enumerations.EnlargeScaleFrameShiftEnum.Down">
 -----------------------------------------------------------------------------
 <summary>
 Shift Frame down
 </summary>
</member>
<member name="M:Okuma.CLCMDAPI.modMain.ThrowAE(System.String,System.String)">
[enter] <summary>For internal usage only</summary>
<example> This example shows how to call the ThrowAE mothod.
<code escaped="true" language="Visual Basic">
 Sample code is not available.
</code>
</example>
<param name="strMessage">Message String.</param>
<param name="strError">Error String</param>
<Figure>
</Figure>
</member>
<member name="M:Okuma.CLCMDAPI.modMain.GetErrorCode(System.Int32)">
[enter] <summary>N/A</summary>
<example> This example shows how to call the GetErrorCode mothod.
<code escaped="true" language="Visual Basic">
 Not available in object browser
</code>
</example>
<param name="intErrorCode">Error Code.</param>
<return>A System.String value</return>
<exception cref="T:System.ApplicationException">Thrown when function fails to perform the operation at current NC condition.</exception>
<exception cref="T:System.NotSupportedException">Thrown when operation/input parameters are not supported for the current system</exception>
<Figure>
</Figure>
</member>
</members>
</doc>
